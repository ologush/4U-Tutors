{"version":3,"sources":["logo.svg","4uAcFull_White.png","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/lessonReducer.js","reducers/bookingReducer.js","reducers/index.js","store.js","components/HomePage.jsx","components/BookingCard.jsx","components/BookingPage.jsx","components/Register.jsx","components/Login.jsx","components/Landing.jsx","components/private-route/PrivateRoute.js","components/TutorDashboard.jsx","actions/lessonActions.js","components/LessonDisplay.jsx","components/DisplayLessons.jsx","components/Lobby.js","components/Participant.js","components/Timer.jsx","components/Room.js","components/VideoChat.js","components/Posting.jsx","components/FindPostings.jsx","components/RequestTime.jsx","components/Request.jsx","components/RequestCard.jsx","components/Requests.jsx","components/AccountSettings.jsx","components/Menu.jsx","components/NavBar.jsx","components/SaveStripe.jsx","components/Bid.jsx","components/MyBids.jsx","components/Test.jsx","components/PastLessonCard.jsx","components/PastLessons.jsx","components/PendingLesson.jsx","components/LessonsPending.jsx","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","baseURL","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","laoding","isLesson","lesson","loading","isBooking","posting","combineReducers","auth","state","action","errors","booking","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","useStyles","makeStyles","theme","header","padding","HomePage","props","classes","Typography","variant","Grid","container","item","xs","Paper","align","className","BookingCard","Card","CardContent","dateString","CardActions","Button","disabled","onClick","onSubmit","dateOptions","weekday","month","day","timeOptions","hour","minute","BookingPage","postingID","match","params","useState","setPosting","hasPosting","setHasPosting","useSelector","unavailableTimes","setUnavailableTimes","useEffect","get","then","res","data","catch","err","console","log","tutorID","id","isConflict","date","conflict","forEach","time","index","unavailable","Date","getTime","toLocaleDateString","toLocaleTimeString","spacing","course","description","availableTimes","map","submissionData","_id","tutorName","name","otherStudentIDs","tutorDescription","tutorRating","rating","tutorEmail","email","post","window","location","href","handleSubmit","Register","password","password2","bind","onChange","onDateChange","nextProps","this","setState","history","push","e","target","value","dateOfBirth","preventDefault","newUser","registerUser","TextField","error","required","label","classnames","invalid","helperText","Component","connect","userData","response","withRouter","Login","loginUser","emailNotFound","passwordIncorrect","setItem","jwt_decode","Landing","direction","component","rest","render","to","TutorDashboard","setCurrentLesson","LessonDisplay","currentDate","now","subject","studentName","DisplayLessons","lessons","lessonEmpty","enterLesson","length","lessonID","stripeID","dateAndTime","Lobby","username","roomName","handleUsernameChange","handleRoomNameChange","Participant","participant","videoTracks","setVideoTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","publication","track","filter","audioTracks","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","ref","autoPlay","height","width","muted","Timer","calculateTimeLeft","getFullYear","finishTime","startTime","difference","timeLeft","days","Math","floor","hours","minutes","seconds","newDifference","hasSurpassed","setHasSurpassed","onTimeOut","setTimeLeft","setTimeout","defaultProps","Room","handleLogout","room","setRoom","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","Video","currentRoom","localParticipant","tracks","trackPublication","stop","disconnect","remoteParticipants","key","sid","wrap","CardMedia","VideoChat","setUsername","setRoomName","setToken","setLesson","setLoading","useDispatch","useCallback","event","identity","varaint","Posting","grade","enterBooking","FindPostings","checked","tag","setFilter","postings","setPostings","filters","tags","FormControlLabel","control","tempFilter","handleCheckbox","year","RequestTime","timeString","select","Request","request","setRequest","busy","setBusy","requestID","studentID","studentEmail","cost","payout","otherStudentEmails","numberOfParticipants","fullWidth","color","RequestCard","enterRequest","decline","Requests","requests","setRequests","noRequests","setNoRequests","AccountSettings","hasStripe","setHasStripe","finalURI","drawer","flexShrink","drawerPaper","options","path","icon","Home","ListAlt","Archive","PostAdd","ContactMail","AccountBalanceWallet","Menu","Drawer","anchor","open","paper","IconButton","menuState","Divider","List","option","ListItem","button","ListItemIcon","ListItemText","primary","accountOptions","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","anchorEl","setAnchorEl","openMenu","setOpenMenu","openAccountMenu","setOpenAccountMenu","handleMenu","prev","handleClose","onLogoutClick","AppBar","position","clsx","Toolbar","justify","edge","aria-label","src","style","maxWidth","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","selected","SaveStripe","code","qs","search","Bid","cancel","grid","MyBids","bids","setBids","setHasBids","bid","bidID","reload","root","display","menuButton","marginRight","hide","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","React","setOpen","CssBaseline","noWrap","text","paragraph","PastLessonCard","feedback","PastLessons","pastLessons","setPastLessons","setHasPastLessons","pastLesson","PendingLesson","LessonsPending","pendingLessons","setPendingLessons","setHasPending","pending","createMuiTheme","palette","main","background","default","typography","fontFamily","marginTop","jwtToken","currentTime","exp","App","ThemeProvider","exact","Test","Dashboard","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.935adf0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/4uAcFull_White.67042e48.png\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\"\n\naxios.defaults.baseURL = '/api/'\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/tutors/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/tutors/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token); //changed from just token\n            setAuthToken(token);\n\n            const decoded = jwt_decode(token);\n\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n\n    setAuthToken(false);\n\n    dispatch(setCurrentUser({}));\n};\n\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_LESSON = \"SET_CURRENT_LESSON\";\nexport const LESSON_LOADING = \"LESSON_LOADING\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const BOOK_LESSON = \"BOOK_LESSON\";\nexport const ENTER_BOOKING = \"ENTER_BOOKING\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    laoding: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isLesson: false,\n    lesson: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_LESSON:\n            return {\n                ...state,\n                isLesson: !isEmpty(action.payload),\n                lesson: action.payload\n            };\n        case LESSON_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import {\n    ENTER_BOOKING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isBooking: false,\n    posting: {}\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ENTER_BOOKING:\n            return {\n                ...state,\n                isBooking: !isEmpty(action.payload),\n                posting: action.payload\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport lessonReducer from \"./lessonReducer\";\nimport bookingReducer from \"./bookingReducer\";\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    lesson: lessonReducer,\n    booking: bookingReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)//,\n        //window.__REDUX_DEVTOOLS_EXTENSION__ &&\n       // window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        padding: 10\n    }\n}))\n\nfunction HomePage(props) {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Typography variant=\"h3\">Welcome to the Home Page</Typography>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Paper>\n                        <Typography variant=\"h4\" align=\"left\" className={classes.header}>Getting Started</Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default HomePage;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\n\n\nfunction BookingCard(props) {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\">{props.dateString}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" disabled={props.disabled} onClick={props.onSubmit}>Select this Time</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nBookingCard.propTypes = {\n    dateString: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    disabled: PropTypes.bool.isRequired\n}\n\nexport default BookingCard;","import React, { Component, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport BookingCard from \"./BookingCard\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\" };\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\" };\n\n// class BookingPage extends Component {\n//     constructor() {\n//         super();\n\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.onChange = this.onChange.bind(this);\n\n//         this.state = {\n//             dateAndTime: \"\"\n//         };\n//     }\n\n    \n\n\n//     handleSubmit(e) {\n//         e.preventDefault();\n\n//         console.log(this.props);\n\n//         const submissionData = {\n//             tutorID: this.props.auth.user.id,\n//             date: e.target.id,\n//             postingID: this.props.posting._id,\n//             tutorName: this.props.auth.user.name,\n//             nextDates: \"a\", //have to figure out how this is determined\n//             otherStudentIDs: this.props.posting.otherStudentIDs,\n//             tutorDescription: this.props.auth.user.description,\n//             tutorRating: this.props.auth.user.rating\n//         };\n\n//         console.log(submissionData);\n\n//         // axios\n//         //     .post(\"/match/setMatch\", submissionData)\n//         //     .then(res => {\n//         //         window.location.href = \"/myLessons\"\n//         //     })\n//         //     .catch(err => console.log(err))\n\n//         axios\n//             .post(\"/match/addBid\", submissionData)\n//             .then(res => {\n//                 window.location.href = \"/myBids\"\n//             })\n//             .catch(err => console.log(err))\n\n        \n//     }\n\n//     onChange(e) {\n\n//         this.setState({ [e.target.id]: e.target.value});\n\n//     }\n\n//     render() {\n//         return(\n//             <div>\n//                 <Typography variant=\"h2\">Book a Lesson</Typography>\n\n//                 <Typography variant=\"h4\">{this.props.posting.course}</Typography>\n//                 <Typography variant=\"h4\">{this.props.posting.description}</Typography>\n//                 <Typography variant=\"h4\">{this.props.posting.studentName}</Typography>\n\n                \n\n                \n//                 {this.props.posting.availableTimes.map(time => (\n//                     <div>\n//                         {console.log(typeof time)}\n//                         <Typography variant=\"h5\">{time}</Typography>\n//                         <button id={time} onClick={this.handleSubmit}>Book</button>\n//                     </div>\n//                 ))}\n\n//             </div>\n//         );\n//     }\n// }\n\nfunction BookingPage(props) {\n\n    const { postingID } = props.match.params;\n\n    const [posting, setPosting] = useState({});\n    const [hasPosting, setHasPosting] = useState(false);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [unavailableTimes, setUnavailableTimes] = useState([]);\n\n    useEffect(() => {\n        axios\n        .get(\"/match/tutor/postingByID\", { params: { postingID: postingID }})\n        .then(res => {\n            setPosting(res.data);\n            setHasPosting(true);\n        })\n        .catch(err => console.log(err));\n\n        axios\n        .get(\"/tutors/unavailableTimes\", { params: { tutorID: user.id } })\n        .then(res => {\n            setUnavailableTimes(res.data);\n            console.log(res.data)\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const handleSubmit = (date) => {\n        const submissionData = {\n            tutorID: user.id,\n            date: date,\n            postingID: posting._id,\n            tutorName: user.name,\n            otherStudentIDs: posting.otherStudentIDs,\n            tutorDescription: user.description,\n            tutorRating: user.rating,\n            description: posting.description,\n            course: posting.course,\n            tutorEmail: user.email\n        };\n\n        console.log(submissionData)\n\n        axios\n        .post(\"/match/addBid\", submissionData)\n        .then(res => {\n            window.location.href = \"/myBids\";\n        })\n        .catch(err => console.log(err))\n    };\n\n    const isConflict = (date) => {\n\n        \n        let conflict = false;\n\n         unavailableTimes.forEach( (time, index) => {\n            const unavailable = new Date(time);\n            console.log('a')\n            if(date.getTime() >= unavailable.getTime() && date.getTime() <= (unavailable.getTime() + 3600000)) {\n                console.log(date);\n                console.log(unavailable);\n                console.log(index)\n                console.log('conflict');\n                console.log(\"conflict at: \" + unavailable.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + unavailable.toLocaleTimeString(\"en-CA\", timeOptions))\n                conflict = true;\n                return;\n            } else {\n                console.log(\"no conflict\")\n            }\n        })\n        \n        \n\n        return conflict;\n    }\n\n    return(\n        // <div>\n        // {\n        //     hasPosting ? (\n        //         <div>\n        //             <Typography variant=\"h3\">Submit a Bid</Typography>\n        //             <Typography variant=\"h5\">Course: {posting.course}</Typography>\n        //             <Typography variant=\"h5\">Student Name: {posting.studentName}</Typography>\n        //             <Typography variant=\"h5\">Description: {posting.description}</Typography>\n\n        //             {\n        //                 posting.availableTimes.map((time, index) => {\n        //                     const date = new Date(time);\n\n        //                     return (\n        //                         <div>\n        //                             <Typography variant=\"h5\">{date.toLocaleDateString(\"en-US\", dateOptions)} {date.toLocaleTimeString(\"en-US\", timeOptions)}</Typography>\n        //                             <Button onClick={() => handleSubmit(date)} disabled={isConflict(date)}>Select</Button>\n        //                         </div>\n        //                     )\n        //                 })\n        //             }\n        //         </div>\n        //     ) : (\n        //         <Typography variant=\"h5\">Loading...</Typography>\n        //     )\n        // }\n        // </div>\n        <div>\n        {\n            hasPosting ? (\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Paper>\n                            <Typography variant=\"h5\">Select a time you are available</Typography>\n                            <Typography variant=\"h5\">Course: {posting.course}</Typography>\n                            <Typography variant=\"body1\">Description: {posting.description}</Typography>\n                        </Paper>\n                    </Grid>\n                    {\n                        posting.availableTimes.map((time, index) => {\n                            const date = new Date(time);\n                            const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                            return (\n                                <Grid item xs={4}>\n                                <BookingCard \n                                    dateString={dateString}\n                                    onSubmit={() => handleSubmit(date)}\n                                    disabled={isConflict(date)}\n                                />\n                                </Grid>\n                            )\n                        })\n                    }\n                    \n                </Grid>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\n// BookingPage.propTypes = {\n//     auth: PropTypes.object.isRequired,\n//     posting: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//     auth: state.auth,\n//     posting: state.booking.posting\n// });\n\n// export default connect(\n//     mapStateToProps\n// )(withRouter(BookingPage));\n\nexport default BookingPage;","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport { registerUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst URI = \"https://connect.stripe.com/express/oauth/authorize?client_id=ca_Hhx4MECM4ayyLP7qKPVrRuZw9ompwsUj&suggested_capabilities[]=transfers&stripe_user[business_type]=individual\"\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            description: \"\",\n            errors: {}\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onDateChange(date) {\n        this.setState({ dateOfBirth: date });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2,\n            description: this.state.description\n        };\n\n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant='h3'>Register</Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography>Register for engsoc dash using a valid Queen's University email</Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.name} onChange={this.onChange} required id=\"name\" label=\"Name\" className={classnames(\"\", {\n                        invalid: errors.name\n                    })} />\n\n                <span className=\"red-text\">{errors.name}</span>\n                    \n\n                    \n                </CardActions>\n                <CardActions>\n                    <TextField error={errors.email} onChange={this.onChange} required id=\"email\" label=\"Email\" helperText=\"Please use a valid Queen's email\" className={classnames(\"\", {\n                        invalid: errors.email\n                    })} />\n                    <span className=\"red-text\">{errors.email}</span>\n                </CardActions>\n\n\n                <CardActions>\n                    <TextField error={errors.password} onChange={this.onChange} required id=\"password\" label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password\n                    })}/>\n                    <span className=\"red-text\">{errors.password}</span>\n                </CardActions>\n                <CardActions>\n                    <TextField error={errors.password2} onChange={this.onChange} required id=\"password2\" label=\"Confirm Password\"  className={classnames(\"\", {\n                        invalid: errors.password2\n                    })}/>\n                    <span className=\"red-text\">{errors.password2}</span>\n\n                </CardActions>\n                <CardActions>\n                    <TextField onChange={this.onChange} id=\"description\" label=\"Description\" />\n                </CardActions>\n                <CardActions>\n                    <Button href={URI}>Connect with Stripe</Button>\n                </CardActions>\n                <CardActions>\n                    <Button type=\"Submit\">Register</Button>\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\n\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        console.log(userData);\n\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h3\">\n                        Login\n                    </Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.email} id=\"email\" onChange={this.onChange} label=\"Email\" helperText=\"Please provide a valid Account Email\" className={classnames(\"\", {\n                        invalid: errors.email || errors.emailNotFound\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.email}\n                        {errors.emailNotFound}\n                    </span>\n                </CardActions>\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password} id=\"password\" onChange={this.onChange} label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password || errors.passwordIncorrect\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.password}\n                        {errors.passwordIncorrect}\n                    </span>\n                </CardActions>\n\n                <CardActions>\n                    <Button type=\"Submit\">Login</Button>\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n\n\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\n\n\n\nfunction Landing(props) {\n\n    return (\n        <Grid container spacing={2} direction=\"column\">\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        About Us\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        Placeholder\n                    </Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        Get Started\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        Email us at tutors@4uacademics.com to apply to become a tutor.\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Landing;","import React, { Component } from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nconst PrivateRoute = ({ component: Component, auth, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\";\n\n\nclass TutorDashboard extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div>\n                <Typography variant=\"h1\">Welcome to the tutor dashboard</Typography>\n            </div>\n        );\n    }\n}\n\nexport default TutorDashboard;","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING,\n    BOOK_LESSON,\n    ENTER_BOOKING\n} from \"./types\";\n\nexport const setCurrentLesson = decoded => {\n    return {\n        type: SET_CURRENT_LESSON,\n        payload: decoded\n    };\n};\n\nexport const endLesson = () => dispatch => {\n    dispatch(setCurrentLesson({}));\n};\n\nexport const enterBooking = decoded => dispatch => {\n    dispatch({\n        type: ENTER_BOOKING,\n        payload: decoded\n    });\n};","import React, { Component } from 'react'\n\nimport Card from \"@material-ui/core/Card\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\n\nimport PropTypes from \"prop-types\"\n\nfunction LessonDisplay(props) {\n\n    const dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\n    const timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\n    const currentDate = new Date(Date.now());\n\n\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\"> {props.subject} </Typography>\n                <br />\n                <Typography variant=\"body1\">With: {props.studentName}</Typography>\n                <br />\n                <Typography variant=\"body1\">Date: {props.date.toLocaleDateString(\"en-US\", dateOptions)}</Typography>\n                <br />\n                <Typography variant=\"body1\">Time: {props.date.toLocaleTimeString(\"en-US\", timeOptions)}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={props.onClick} disabled={props.date.getTime() - currentDate.getTime() > 300000 }>Enter Lesson</Button>\n                {props.date.getTime() - currentDate.getTime() > 300000 ? (<Typography variant=\"body1\">Lesson will be available within 5 minutes of the start time</Typography>) : (null)}\n            </CardActions>\n        </Card>\n    );\n}\n\n\nLessonDisplay.propTypes = {\n    date: PropTypes.object.isRequired,\n    subject: PropTypes.string.isRequired,\n    studentName: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default LessonDisplay;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\"\nimport { setCurrentLesson } from \"../actions/lessonActions\"\n\nimport { Link, withRouter } from \"react-router-dom\"\n\nimport PropTypes from \"prop-types\"\n\nimport LessonDisplay from \"./LessonDisplay\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport axios from \"axios\";\n\nclass DisplayLessons extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            lessons: [],\n            lessonEmpty: true\n        };\n\n        this.enterLesson = this.enterLesson.bind(this);\n\n    }\n\n    componentDidMount() {\n        axios\n            .post(\"/tutors/getLessons\", {tutorID: this.props.auth.user.id})\n            .then(res => {\n                \n                if(res.data.length > 0) {\n                    this.setState({\n                        lessons: res.data,\n                        lessonEmpty: false\n                    });\n                } \n            })\n            .catch(err => console.log(err));\n    }\n\n    enterLesson(lessonID, index) {\n        \n        const submissionData = {\n            tutorID: this.props.auth.user.id,\n            tutorEmail: this.props.auth.user.email,\n            stripeID: this.props.auth.user.stripeID,\n            lessonID: lessonID,\n\n        }\n\n        axios\n        .post(\"/payments/addPendingPayment\", submissionData)\n        .then(res => {\n            this.props.setCurrentLesson(this.state.lessons[index])\n            this.props.history.push('/videoChat/' + lessonID);\n        })\n        .catch(err => {\n            this.props.history.push('/videoChat/' + lessonID);\n        });\n\n        \n    }\n\n    render() {\n        return(\n            <Grid container spacing={4}>\n                {\n                    !this.state.lessonEmpty ? (\n                    this.state.lessons.map((lesson, index) => (\n                        <Grid item xs={6}>\n                            <LessonDisplay\n                                date={new Date(lesson.dateAndTime)}\n                                subject={lesson.subject}\n                                studentName={lesson.tutorName}\n                                onClick={() => this.enterLesson(lesson._id, index)}\n                            />\n                        </Grid>\n                    )) ) : (\n                        <Typography variant=\"h5\">You have no lessons, go to the find postings page to start booking lessons</Typography>\n                    )\n                }\n            </Grid>\n        );\n    }\n}\n\nDisplayLessons.propTypes = {\n    auth: PropTypes.object.isRequired,\n    setCurrentLesson: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { setCurrentLesson }\n)(withRouter(DisplayLessons));","import React from 'react'\n\nimport Paper from \"@material-ui/core/Paper\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst timeOptions = { hour: 'numeric', minute: 'numeric'}\n\nconst Lobby = ({\n    username,\n    handleUsernameChange,\n    roomName,\n    handleRoomNameChange,\n    handleSubmit,\n    date,\n    description\n}) => {\n    return(\n        <Paper>\n        <form onSubmit={handleSubmit}>\n            <Typography variant=\"h4\">\n                Welcome {username} to the lesson lobby. Your lesson is scheduled to begin\n                at {date.toLocaleTimeString('en-CA', timeOptions)} Click the Begin Lesson button to enter the lesson.\n            </Typography>\n            <Typography variant=\"h5\">Course: {roomName}</Typography>\n            \n\n            <Button type=\"submit\">Begin Lesson</Button>\n\n        </form>\n        </Paper>\n    );\n};\n\nexport default Lobby;","import React, { useState, useEffect, useRef } from 'react'\nimport Paper from \"@material-ui/core/Paper\"\n\n\nconst Participant = ({ participant }) => {\n    const [videoTracks, setVideoTracks] = useState([]);\n    const [audioTracks, setAudioTracks] = useState([]);\n\n    const videoRef = useRef();\n    const audioRef = useRef();\n\n    const trackpubsToTracks = trackMap => Array.from(trackMap.values())\n        .map(publication => publication.track)\n        .filter(track => track !== null);\n\n    useEffect(() => {\n        const trackSubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => [...videoTracks, track]);\n            } else {\n                setAudioTracks(audioTracks => [...audioTracks, track]);\n            }\n        };\n\n        const trackUnsubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => videoTracks.filter(v => v!== track));\n            } else {\n                setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n            }\n        };\n\n        setVideoTracks(trackpubsToTracks(participant.videoTracks));\n        setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n        participant.on('trackSubscribed', trackSubscribed);\n        participant.on('trackUnsubscribed', trackUnsubscribed);\n\n        return () => {\n            setVideoTracks([]);\n            setAudioTracks([]);\n            participant.removeAllListeners();\n        };\n    }, [participant]);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if(videoTrack) {\n            videoTrack.attach(videoRef.current);\n            return () => {\n                videoTrack.detach();\n            };\n        }\n    }, [videoTracks]);\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay={true} height=\"100%\" width=\"100%\" />\n            <audio ref={audioRef} autoPlay={true} muted={true}/>\n        </div>\n    );\n};\n\nexport default Participant;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction Timer(props) {\n    const calculateTimeLeft = () => {\n        let year = new Date().getFullYear();\n\n        let finishTime = props.startTime.getTime() + 3600000;\n        \n\n        const difference = +new Date(finishTime) - +new Date();\n\n        let timeLeft = {};\n\n        if(difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n\n            //console.log(timeLeft);\n        } else if(difference > -300000) {\n            const newDifference = +new Date(finishTime + 300000) - +new Date();\n            timeLeft = {\n                hours: Math.floor((newDifference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((newDifference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60) + 60\n            }\n\n            if(!hasSurpassed) {\n                setHasSurpassed(true);\n            }\n        } else if(difference < -300000) {\n            props.onTimeOut();\n        }\n\n        return timeLeft;\n    }\n    \n    const [hasSurpassed, setHasSurpassed] = useState(false)\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    \n\n    useEffect(() => {\n        setTimeout(() => {\n            setTimeLeft(calculateTimeLeft());\n        }, 1000)\n    })\n\n    return (\n        <div>\n            <Paper>\n                <Typography variant=\"body1\">Time Left: {timeLeft.hours}:{timeLeft.minutes}:{timeLeft.seconds}</Typography>\n            </Paper>\n        </div>\n    );\n}\n\nTimer.propTypes = {\n    startTime: PropTypes.object.isRequired,\n    onTimeOut: PropTypes.func.isRequired\n}\n\nTimer.defaultProps = {\n    startTime: new Date(Date.now())\n}\n\nexport default Timer;","import React, { useState, useEffect } from 'react'\nimport Video from 'twilio-video';\nimport Participant from './Participant'\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport Timer from \"./Timer\"\n\nconst Room = ({ roomName, token, handleLogout, subject, startTime}) => {\n    const [room, setRoom] = useState(null);\n    const [participants, setParticipants] = useState([]);\n\n    \n\n    useEffect(() => {\n        const participantConnected = participant => {\n            setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n        const participantDisconnected = participant => {\n            setParticipants(prevParticipants =>\n                prevParticipants.filter(p => p != participant)\n            );\n        };\n        console.log(roomName);\n        Video.connect(token, {\n            name: roomName\n        }).then(room => {\n            setRoom(room);\n            room.on('participantConnected', participantConnected);\n            room.on('participantDisconnected', participantDisconnected);\n            room.participants.forEach(participantConnected);\n        });\n    \n        return () => {\n            setRoom(currentRoom => {\n                if(currentRoom && currentRoom.localParticipant.state === 'connected') {\n                    currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n                        trackPublication.track.stop();\n                    });\n                    currentRoom.disconnect();\n                    return null;\n                } else {\n                    return currentRoom;\n                }\n            })\n        }\n    }, [roomName, token]);\n\n    const remoteParticipants = participants.map(participant => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n\n    const handleTimeout = () => {\n        handleLogout();\n    };\n\n    // return (\n    //     <div className=\"room\">\n    //         <h2>Room: {roomName}</h2>\n    //         <button onClick={handleLogout}>Log out</button>\n    //         <div className=\"local-participant\">\n    //             {room ? (\n    //                 <Participant key={room.localParticipant.sid}\n    //                             participant={room.localParticipant}\n    //                 />\n    //             ) : (\n    //                 ''\n    //             )}\n    //         </div>\n    //         <h3>Remote Participants</h3>\n    //         <div className=\"remote-participants\">{remoteParticipants}</div>\n    //     </div>\n    // );\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item container xs={11}>\n                {\n                    remoteParticipants.length > 3 ? (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={4}>\n                                {participant}\n                            </Grid>\n                        ))\n                     ) : (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={12/remoteParticipants.length}>\n                                {participant}\n                            </Grid>\n                        ))\n                     )\n                }\n            </Grid>\n            <Grid item container xs={1} direction=\"column\" wrap=\"nowrap\">\n                \n                <Card>\n                    <CardContent>\n                        <Typography variant=\"h6\">Room: {subject}</Typography>\n                        <Timer \n                            startTime={new Date(startTime)}\n                            onTimeOut={handleTimeout}\n                        />\n                    </CardContent>\n                    <CardMedia>\n                        {\n                            room ? (\n                                <Participant key={room.localParticipant.sid}\n                                    participant={room.localParticipant}\n                                />\n                            ) : (\n                                \"\"\n                            )\n                        }\n                    </CardMedia>\n                    <CardActions>\n                        <Button variant=\"contained\" onClick={handleLogout}>Exit Lesson</Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Room;","import React, { useState, useCallback, useEffect } from 'react'\nimport Lobby from './Lobby';\nimport axios from 'axios';\nimport Room from './Room';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { endLesson } from '../actions/lessonActions'\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\"\n\n const VideoChat = (props) => {\n\n    const { lessonID } = props.match.params;\n\n    const [username, setUsername] = useState('');\n    const [roomName, setRoomName] = useState(lessonID);\n    const [token, setToken] = useState(null);\n    const [lesson, setLesson] = useState({});\n    const [loading, setLoading] = useState(true);\n\n     const user = useSelector(state => state.auth.user);\n     //const lesson = useSelector(state => state.lesson.lesson);\n     const dispatch = useDispatch();\n     const handleUsernameChange = useCallback(event => {\n         setUsername(event.target.value);\n     }, []);\n\n     const handleRoomNameChange = useCallback(event => {\n         setRoomName(event.target.value);\n     }, []);\n\n     const handleSubmit = useCallback(async event => {\n         event.preventDefault();\n\n         console.log(lesson)\n\n        const submissionData = {\n            identity: user.email,\n            lessonID: lessonID,\n            tutorID: user.id,\n            tutorName: user.name,\n            tutorEmail: user.email,\n            startTime: lesson.dateAndTime,\n            subject: lesson.subject\n        };\n\n         console.log(lesson);\n         axios\n            .post(\"/videoChat/tutor/token\", submissionData)\n            .then(res => {\n                setToken(res.data)\n            })\n            .catch(err => console.log(err))\n     }, [username, roomName, lesson]);\n\n    \n\n     const handleLogout = useCallback(event => {\n         setToken(null);\n\n         const submissionData = { lessonID: lessonID };\n\n         axios\n            .post(\"/tutors/lessonOver\", submissionData)\n            .then(res => {\n                console.log(res);\n                //window.location.href = \"something\"\n                dispatch(endLesson()); //idk about this\n            })\n\n         \n     }, []);\n\n     useEffect(() => {\n        axios\n        .get(\"/lesson/tutor/lessonByID\", { params: { lessonID: lessonID } })\n        .then(res => {\n            setLesson(res.data);\n            setLoading(false);\n        })\n        .catch(err => console.log(err))\n     }, [])\n\n     let render;\n\n     if(token) {\n         console.log(roomName)\n         render = (\n             <div>\n                 <Room \n                    roomName={roomName} \n                    token={token} \n                    handleLogout={handleLogout} \n                    subject={lesson.subject} \n                    startTime={lesson.dateAndTime}    \n                />\n             </div>\n         );\n     } else {\n         render = (\n             <Lobby \n                username={user.name}\n                roomName={lesson.subject}\n                handleUsernameChange={handleUsernameChange}\n                handleRoomNameChange={handleRoomNameChange}\n                handleSubmit={handleSubmit}\n                date={new Date(lesson.dateAndTime)}\n             />\n         );\n     }\n\n     //return render;\n\n     return (\n         <div>\n         {\n             loading ? (\n                 <Typography varaint=\"h5\">Loading...</Typography>\n             ) : (\n                 <div>\n                 {render}\n                 </div>\n             )\n         }\n         </div>\n     )\n };\n\n export default VideoChat;","import React from 'react'\n\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\n\nfunction Posting(props) {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">Course: {props.course}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n                <Typography variant=\"h6\">Grade: {props.grade}</Typography>\n                <Typography variant=\"h6\">Type: {props.type}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={props.enterBooking} variant=\"contained\">Book a Time</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPosting.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    grade: PropTypes.number.isRequired,\n    enterBooking: PropTypes.func.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default Posting;","import React, { Component, useState, useEffect } from 'react'\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport CheckBox from \"@material-ui/core/CheckBox\"\n\n\nimport axios from \"axios\";\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport PropTypes from \"prop-types\";\nimport Posting from \"./Posting\"\n\nimport { enterBooking } from \"../actions/lessonActions\";\n\n\nimport { Link, withRouter } from 'react-router-dom'\n\n\n\n\nfunction FindPostings(props) {\n\n    \n\n    const [filter, setFilter] = useState([\n        {\n            name: \"Math\",\n            checked: false,\n            tag: \"math\"\n        },\n        {\n            name: \"English\",\n            checked: false,\n            tag: \"english\"\n        },\n        {\n            name: \"Business\",\n            checked: false,\n            tag: \"business\"\n        },\n        {\n            name: \"Science\",\n            checked: false,\n            tag: \"science\"\n        },\n        {\n            name: \"Programming\",\n            checked: false,\n            tag: \"programming\"\n        },\n        {\n            name: \"Technology\",\n            checked: false,\n            tag: \"technology\"\n        }\n    ]);\n\n\n    const [postings, setPostings] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n\n    useEffect(() => {\n        console.log(\"effect\")\n        const filters = filter.filter(filter => {\n            return filter.checked;\n        })\n        .map(filter => {\n            return filter.tag\n        });\n\n        \n\n        console.log(filters)\n        if(filters.length == 0) {\n            axios\n            .get(\"/match/getPostings\")\n            .then(res => {\n                setPostings(res.data);\n                setLoading(false);\n            })\n        } else {\n            axios\n            .post(\"/match/getPostingsByTags\", { tags: filters })\n            .then(res => {\n                setPostings(res.data);\n                setLoading(false);\n            })\n            .catch(err => console.log(err))\n        }\n        \n\n\n    }, [filter]);\n\n    const handleCheckbox = (name, index) => {\n\n        let tempFilter = filter;\n\n        tempFilter[index].checked = !tempFilter[index].checked;\n\n    \n        \n        setFilter([...tempFilter]);\n        setLoading(true);\n    };\n\n    const handleSubmit = (postingID) => {\n        props.history.push(\"/booking/\" + postingID)\n    };\n\n    \n\n\n    \n\n    return(\n        <div>\n            {\n                loading ? (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                ) : (\n                    \n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                            {\n                                \n                                filter.map((value, index) => (\n                                    <FormControlLabel\n                                    control={<CheckBox checked={value.checked} onChange={() => handleCheckbox(value.name, index)} name={value.name} />}\n                                    label={value.name} />\n                                ))\n                                \n                            }\n                            </Grid>\n                            {\n                                postings.map((posting, index) => (\n                                    <Grid item xs={4}>\n                                        <Posting \n                                            course={posting.course}\n                                            description={posting.description}\n                                            grade={posting.year}\n                                            enterBooking={() => handleSubmit(posting._id)}\n                                            type={posting.type}\n                                        />\n                                    </Grid>\n                                ))\n                            }\n                            \n                        </Grid>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default FindPostings;","import React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from \"prop-types\"\n\n\n\nfunction RequestTime(props) {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\">Date: {props.dateString}</Typography>\n                <Typography variant=\"h6\">Time: {props.timeString}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" disabled={props.disabled} onClick={props.select}>Select This time</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nRequestTime.propTypes = {\n    disabled: PropTypes.bool.isRequired,\n    timeString: PropTypes.string.isRequired,\n    dateString: PropTypes.string.isRequired,\n    select: PropTypes.func.isRequired\n}\n\nexport default RequestTime;","import React, { useState, useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\"\nimport RequestTime from \"./RequestTime\"\nimport Grid from \"@material-ui/core/Grid\"\n\nfunction Request(props) {\n\n    const dateOptions = { weekday: 'long', month: 'long', day: 'numeric'};\n    const timeOptions = { hour: 'numeric', minute: 'numeric' };\n\n    const [request, setRequest] = useState({});\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [busy, setBusy] = useState(true);\n    const [unavailableTimes, setUnavailableTimes] = useState([]);\n    const requestID = props.match.params.requestID;\n    let date;\n    useEffect(() => {\n        \n\n        axios\n        .get(\"/lesson/getRequest\", { params: { requestID: requestID }})\n        .then(res => {\n            console.log(res.data)\n            setRequest(res.data);\n            setBusy(false);\n            \n        })\n        .catch(err => console.log(err));\n\n        axios\n        .get(\"/tutors/unavailableTimes\", { params: { tutorID: user.id } })\n        .then(res => {\n            setUnavailableTimes(res.data);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    console.log(request);\n    console.log(busy);\n\n    const isConflict = (date) => {\n\n        \n        let conflict = false;\n\n         unavailableTimes.forEach( (time, index) => {\n            const unavailable = new Date(time);\n            console.log('a')\n            if(date.getTime() >= unavailable.getTime() && date.getTime() <= (unavailable.getTime() + 3600000)) {\n                console.log(date);\n                console.log(unavailable);\n                console.log(index)\n                console.log('conflict')\n                conflict = true;\n                return;\n            } else {\n                console.log(\"no conflict\")\n            }\n        })\n        \n        \n\n        return conflict;\n    }\n\n\n\n    const onSubmit = (time) => {\n        const submissionData = {\n            studentID: request.studentID,\n            tutorID: request.tutorID,\n            dateAndTime: time,\n            subject: request.course,\n            tutorName: user.name,\n            studentName: request.studentName,\n            type: request.type,\n            studentEmail: request.studentEmail,\n            tutorEmail: request.tutorEmail,\n            requestID: requestID,\n            description: request.description,\n            cost: request.cost,\n            payout: request.payout,\n            otherStudentIDs: request.otherStudentIDs,\n            otherStudentEmails: request.otherStudentEmails,\n            numberOfParticipants: request.numberOfParticipants,\n            studentEmail: request.studentEmail\n        };\n\n        console.log(request.subject)\n\n        axios\n        .post(\"/tutors/acceptRequest\", submissionData)\n        .then(res => {\n            //Redirect to pending lessons on student payment\n            props.history.push(\"/lessonsPendingPayment\")\n        })\n        .catch(err => console.log(err))\n    }\n\n    const deny = () => {\n\n        const submissionData = {\n            requestID: requestID\n        };\n\n        axios\n        .post(\"/tutors/denyRequest\", submissionData)\n        .then(res => {\n            //redirect to requests page\n            props.history.push(\"/requests\")\n        })\n        .catch(err => console.log(err))\n    }\n\n    // return(\n    //     <div>\n    //     { !busy ? (\n\n    //         <Paper>\n    //         <Typography variant=\"h5\">Lesson Request</Typography>\n\n    //         <br />\n\n    //         <Typography variant=\"body1\">Course: {request.course}</Typography>\n    //         <br />\n    //         <Typography variant=\"body1\">Description: {request.description}</Typography>\n\n    //         {\n    //            request.availableTimes && request.availableTimes.map((time, index) => {\n    //             const date = new Date(time);\n    //             return (\n    //                 <div>\n    //                 <Typography variant=\"body1\">Date: {date.toLocaleDateString('en-CA', dateOptions)}</Typography>\n                    \n    //                 <Typography variant=\"body1\">Time: {date.toLocaleTimeString('en-CA', timeOptions)}</Typography>\n                    \n    //                 <Button onClick={() => onSubmit(time)} disabled={isConflict(date)}>Select this Time</Button>\n    //                 <br />\n    //                 <br />\n    //                 </div>\n    //             )})\n    //         }\n\n    //         <Button onClick={deny}>Decline Request</Button>\n\n    //     </Paper>\n\n    //     ) : (\n    //         <Typography variant=\"body1\">Loading...</Typography>\n    //     )}\n    //     </div>\n        \n    // )\n\n    return (\n        <div>\n            {\n                !busy ? (\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Paper>\n                            <Typography variant=\"h5\">Course: {request.course}</Typography>\n                            <Typography variant=\"body1\">{request.description}</Typography>\n                        </Paper>\n                    </Grid>\n                    {\n                        request.availableTimes.map((time, index) => {\n                            const date = new Date(time);\n\n                            const dateString = date.toLocaleDateString(\"en-CA\", dateOptions);\n                            const timeString = date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                            return (\n                                <Grid item xs={4}>\n                                    <RequestTime\n                                        disabled={isConflict(date)}\n                                        timeString={timeString}\n                                        dateString={dateString}\n                                        select={() => onSubmit(time)}\n                                    />\n                                </Grid>\n                            )\n                        })\n                    }\n                    <Grid item xs={12}>\n                        <Button onClick={deny} fullWidth variant=\"contained\" color=\"secondary\">Decline Request</Button>\n                    </Grid>\n                    </Grid>\n                ) : (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                )\n            }\n        </div>\n    )\n\n}\n\nexport default Request;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction RequestCard(props) {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">Course: {props.course}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n                <Typography variant=\"h6\">Type: {props.type}</Typography>\n                <Typography variant=\"h6\">Payout: ${props.payout}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.enterRequest}>Enter Booking</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.decline}>Decline</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nRequestCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    decline: PropTypes.func.isRequired,\n    enterRequest: PropTypes.func.isRequired,\n    type: PropTypes.string.isRequired,\n    payout: PropTypes.number.isRequired\n}\n\nexport default RequestCard;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { useSelector } from \"react-redux\"\n\nimport RequestCard from \"./RequestCard\"\n\n\nfunction Requests(props) {\n\n    const [requests, setRequests] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [noRequests, setNoRequests] = useState(true);\n\n\n    useEffect(() => {\n        axios\n        .get(\"/tutors/getRequests\", { params: { tutorID: user.id}})\n        .then(res => {\n            setNoRequests(false);\n            setRequests(res.data);\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n\n    const enterRequest = (requestID) => {\n        window.location.href = \"/request/\" + requestID;\n    }\n\n    const declineRequest = (requestID) => {\n        axios\n        .post(\"/tutors/denyRequest\", { requestID: requestID })\n        .then(res => {\n            \n            console.log(res);\n        })\n        .catch(err => {\n            console.log('a')\n            //setNoRequests(true);\n            console.log(err);\n        })\n\n    }\n\n\n    return(\n        <Grid container spacing={4}>\n            {\n                !noRequests ? (\n                    requests.map((request, index) => (\n                        <Grid item xs={4}>\n                            \n                            <RequestCard \n                                course={request.course}\n                                description={request.description}\n                                decline={() => declineRequest(request._id)}\n                                enterRequest={() => enterRequest(request._id)}\n                                type={request.type}\n                                payout={request.payout}\n                            />\n                        </Grid>\n                    ))\n\n                 ) : (\n                    <Typography variant=\"h4\">You have no lesson requests</Typography>\n                 )\n\n                \n                \n            }\n        </Grid>\n    )\n}\n\nexport default Requests;","import React, { useState, useEffect } from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport axios from \"axios\"\n\nconst URI = \"https://connect.stripe.com/express/oauth/authorize?client_id=ca_Hhx4MECM4ayyLP7qKPVrRuZw9ompwsUj&suggested_capabilities[]=transfers&stripe_user[business_type]=individual&stripe_user[email]=\"\n\nfunction AccountSettings() {\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    \n    const [hasStripe, setHasStripe] = useState(false);\n\n    const connectStripe = (e) => {\n\n        let finalURI = URI + user.email;\n        console.log(finalURI)\n       window.location.href = finalURI;\n    }\n\n    useEffect(() => {\n        axios\n        .get(\"/tutors/tutor/findByEmail\", { params: { email: user.email } })\n        .then(res => {\n            console.log(res);\n            if(res.data.stripeID) {\n                setHasStripe(true);\n            }\n        })\n        .catch(err => console.log(err))\n\n    }, [])\n\n    return(\n        <div>\n            <Typography variant=\"h5\">Name: {user.name}</Typography>\n            <Typography variant=\"h5\">Email: {user.email}</Typography>\n            {\n                !hasStripe ? (\n                    <div>\n                        <Typography variant=\"h5\">Please connect your stripe account, if you don't you will not be paid for the lessons you teach</Typography>\n                        <Button onClick={connectStripe}>Connect with stripe!</Button>\n                    </div>\n                ) : (\n                    <Typography variant=\"h5\">Your stripe account is connected! You are ready to recieve payments</Typography>\n                )\n            }\n        </div>\n    )\n}\n\nexport default AccountSettings;","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport { withRouter } from \"react-router-dom\"\nimport {Create as CreateIcon, Home as HomeIcon, List as ListIcon, ListAlt as ListAltIcon, Archive as ArchiveIcon, PostAdd as PostAddIcon, ContactMail as ContactMailIcon, AccountBalanceWallet as AccountBalanceWalletIcon} from \"@material-ui/icons\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    }\n}))\n\n\nconst options = [\n    {\n        name: \"Home\",\n        path: \"/HomePage\",\n        icon: <HomeIcon />\n    },\n    {\n        name: \"My Lessons\",\n        path: \"/myLessons\",\n        icon: <ListIcon />\n    },\n    {\n        name: \"Find Postings\",\n        path: \"/findPostings\",\n        icon: <ListAltIcon />\n    },\n    {\n        name: \"Past Lessons\",\n        path: \"/pastLessons\",\n        icon: <ArchiveIcon />\n    },\n    {\n        name: \"Lesson Requests\",\n        path: \"/requests\",\n        icon: <PostAddIcon />\n    },\n    {\n        name: \"My Bids\",\n        path: \"/myBids\",\n        icon: <ContactMailIcon />\n    },\n    {\n        name: \"Lessons Pending Payment\",\n        path: \"/lessonsPendingPayment\",\n        icon: <AccountBalanceWalletIcon />\n    }\n];\n\nfunction Menu(props) {\n\n    const classes = useStyles();\n\n    const onClick = (path) => {\n        props.menuState();\n        window.location.href = path;\n    }\n\n    const handleClose = (e) => {\n        props.menuState();\n    }\n\n    return (\n        <Drawer anchor=\"left\" open={props.open} variant=\"persistent\" className={classes.drawer} classes={{\n            paper: classes.drawerPaper\n        }}>\n                <div>\n                    <IconButton onClick={handleClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <Divider />\n                </div>\n                <List>\n                    {\n                        options.map((option, index) => {\n                            const { name, path, icon} = option;\n                            return (\n                                <ListItem button onClick={() => onClick(path)} key={path}>\n                                    <ListItemIcon>{icon}</ListItemIcon>\n                                    <ListItemText primary={name} />\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n            </Drawer>\n        );\n    \n}\n\nMenu.propTypes = {\n    open: PropTypes.bool.isRequired,\n    menuState: PropTypes.func.isRequired\n\n}\n\n//export default withRouter(Menu);\nexport default Menu;\n","import React, { Component, useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { Menu as AccountMenu } from '@material-ui/core/'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport Typography from '@material-ui/core/Typography'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport PropTypes from \"prop-types\"\nimport { logoutUser } from \"../actions/authActions\"\nimport HomePage from './HomePage'\nimport { Link, withRouter } from 'react-router-dom'\nimport Menu from \"./Menu\"\nimport { FormatColorTextSharp } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\n\nconst accountOptions = [\n    \"Account Settings\",\n    \"Logout\"\n];\n\n\nconst tutorRoutes = [\n    {\n        name: \"Home\",\n        path: \"./HomePage\"\n    },\n    {\n        name: \"My Lessons\",\n        path: \"./myLessons\"\n    },\n    {\n        name: \"Find Postings\",\n        path: \"./findPostings\"\n    }\n];\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }\n}))\n\nfunction NavBar(props) {\n    \n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openMenu, setOpenMenu] = useState(false);\n    const [openAccountMenu, setOpenAccountMenu] = useState(false);\n\n    const [auth, setAuth] = useState(useSelector(state => state.auth));\n\n\n\n    const onLogoutClick = (e) => {\n        e.preventDefault();\n        props.logoutUser();\n        props.history.push(\"/\")\n    };\n\n    const handleAccountMenu = (e) => {\n        setAnchorEl(e.currentTarget);\n        setOpenAccountMenu(true);\n    };\n\n    const handleMenu = (e) => {\n        console.log(auth);\n        setOpenMenu(prev => !prev);\n        props.handleMenu();\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n        //setOpenMenu(false);\n        handleMenu();\n        setOpenAccountMenu(false);\n\n        if(e.target.id == \"Logout\") {\n            onLogoutClick(e);\n        } else if (e.target.id == \"Account Settings\") {\n            props.history.push(\"/accountSettings\")\n        } else {\n            props.history.push(e.target.id)\n        }\n    };\n\n    return (\n        <AppBar \n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: openMenu\n            })}\n        >\n            <Toolbar>\n                <Grid \n                    justify=\"space-between\"\n                    container\n                >\n                    <Grid item xs={1}>\n                        {\n                            props.auth.isAuthenticated && \n                            <div>\n                                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleMenu}>\n                                    <MenuIcon />\n                                </IconButton>\n\n                                <Menu open={openMenu} menuState={handleMenu} />\n                            </div>\n                        }\n                    </Grid>\n                    <Grid item xs={10}>\n                    <img src={require(\"../4uAcFull_White.png\")} style={{maxWidth: \"20%\", height: \"auto\" }} />\n                    </Grid>\n                    <Grid item xs={1}>\n                        {\n                            props.auth.isAuthenticated ? (\n                            <div>\n                                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Account\" onClick={handleAccountMenu}>\n                                    <AccountCircle />\n                                </IconButton>\n                                <AccountMenu\n                                    id=\"account-menu\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    open={openAccountMenu}\n                                    onClose={handleClose}\n                                >\n                                    {\n                                        accountOptions.map((option) => (\n                                            <MenuItem id={option} key={option} selected={option === \"Pyxis\"} onClick={handleClose}>\n                                                {option}\n                                            </MenuItem>\n                                        ))\n                                    }\n\n                                </AccountMenu>\n                            </div> ) : (\n                                <Button onClick={() => props.history.push(\"/login\")} variant=\"contained\">Login</Button>\n                            )\n                        }\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n\n\n}\n\nNavBar.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(withRouter(NavBar));","import React, { useState, useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\nimport * as qs from 'query-string'\n\nfunction SaveStripe(props) {\n\n    //const { code } = props.match.params;\n    \n    const { code } = qs.parse(props.location.search);\n    console.log(code)\n    const user = useSelector(state => state.auth.user);\n\n    \n    useEffect(() => {\n\n        \n        axios\n        .post(\"/tutors/addStripe\", { code: code, tutorID: user.id })\n        .then(res => {\n            window.location.href = \"/accountSettings\"\n            \n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <div>\n            Loading...\n        </div>\n    )\n\n}\n\nexport default SaveStripe;","import React from \"react\";\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport PropTypes from \"prop-types\"\n\nfunction Bid(props) {\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">Course: {props.course}</Typography>\n                <Typography variant=\"h6\">Time: {props.time}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={props.cancel} variant=\"contained\" color=\"secondary\">Cancel</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nBid.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    cancel: PropTypes.func.isRequired,\n    time: PropTypes.string.isRequired\n}\n\nexport default Bid;","import React, { useEffect, useState } from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Bid from \"./Bid\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    grid: {\n        padding: theme.spacing(2)\n    }\n}))\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\" };\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\" };\nfunction MyBids(props) {\n\n    const classes = useStyles();\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [bids, setBids] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [hasBids, setHasBids] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/tutors/getBids\", { params: { tutorID: user.id}})\n        .then(res => {\n            if(res.data.length > 0) {\n                setBids(res.data);\n                setHasBids(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const deleteBid = (bidID) => {\n        axios\n        .post(\"/tutors/deleteBid\", { bidID: bidID })\n        .then(res => {\n            console.log(res);\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n        {\n            loading ? (\n                <Typography variant=\"h4\">Loading...</Typography>\n            ) : (\n                <Grid container spacing={2}>\n                    {\n                        bids.map((bid, index) => {\n                            const date = new Date(bid.date);\n                            const dateString = date.toLocaleDateString(\"en-US\", dateOptions) + \" \" + date.toLocaleTimeString(\"en-US\", timeOptions);\n                            return (\n                                <Grid item xs={4}>\n                                <Bid\n                                    course={bid.course}\n                                    description={bid.description}\n                                    time={dateString}\n                                    cancel={() => deleteBid(bid._id)} \n                                />\n                                </Grid>\n                            )\n                        })\n                        //!hasBids && <Typography variant=\"h5\">You have not bidded on a lesson, go to the postings page to get started</Typography>\n                    }\n                </Grid>\n            )\n        }\n        </div>\n    )\n}\n\nexport default MyBids;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Persistent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from \"prop-types\"\n\nfunction PastLessonCard(props) {\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h6\">{props.dateString}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n                <Typography variant=\"h6\">Rating: {props.rating}/5</Typography>\n                <Typography variant=\"body1\">Feedback: {props.feedback}</Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nPastLessonCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    dateString: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    feedback: PropTypes.string.isRequired\n}\n\nexport default PastLessonCard;","import React, { useState, useEffect } from 'react'\nimport PastLessonCard from \"./PastLessonCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\" }\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction PastLessons(props) {\n    \n    const [pastLessons, setPastLessons] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [hasPastLessons, setHasPastLessons] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/tutors/getFeedback\", { params: { tutorID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                setPastLessons(res.data);\n                setLoading(false);\n                setHasPastLessons(true);\n            } else {\n                setLoading(false)\n            }\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n\n    return (\n        <Grid container spacing={2}>\n        {\n            !loading ? (\n                pastLessons.map(pastLesson => {\n\n                    const date = new Date(pastLesson.date);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                    return (\n                        <Grid item xs={4}>\n                            <PastLessonCard \n                                course={pastLesson.course}\n                                description={pastLesson.description}\n                                dateString={dateString}\n                                rating={pastLesson.rating}\n                                feedback={pastLesson.feedback}\n                            />\n                        </Grid>\n                    )\n                    \n                })\n                //!hasPastLessons && <Typography variant=\"h5\">You have no past lessons, book to get started</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </Grid>\n    )\n}\n\nexport default PastLessons;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from \"prop-types\"\n\nfunction PendingLesson(props) {\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h5\">At: {props.dateString}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nPendingLesson.propTypes = {\n    dateString: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    course: PropTypes.string.isRequired,\n}\n\nexport default PendingLesson;\n","import React, { useState, useEffect } from 'react'\n\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport PendingLesson from \"./PendingLesson\"\nimport Typography from \"@material-ui/core/Typography\"\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction LessonsPending(props) {\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [pendingLessons, setPendingLessons] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [hasPending, setHasPending] = useState(false);\n\n    useEffect(() => {\n        console.log(user);\n        axios\n        .get(\"/lesson/tutor/getPendingLessons\", { params: { tutorID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                setPendingLessons(res.data);\n                setLoading(false);\n                setHasPending(true);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <Grid container spacing={2}>\n        {\n            !loading ? (\n                pendingLessons.map((pending) => {\n                    let date = new Date(pending.dateAndTime);\n                    let dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n                    \n                    return (\n                        <Grid item xs={4}>\n                            <PendingLesson \n                                dateString={dateString}\n                                description={pending.description}\n                                course={pending.subject}\n                            />\n                        </Grid>\n                    )\n                })\n                //!hasPending && <Typography variant=\"h5\">You have no lessons pending student payment.</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </Grid>\n    )\n}\n\nexport default LessonsPending;","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: \"#348feb\"\n        },\n        background: {\n            default: \"#303030\",\n            paper: \"#348feb\"\n        }\n\n    },\n    typography: {\n        fontFamily: 'Raleway, Arial'\n    }\n});\n\nexport default theme;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport HomePage from \"./components/HomePage\"\nimport BookingPage from \"./components/BookingPage\"\nimport Register from \"./components/Register\"\nimport Login from \"./components/Login\"\nimport Landing from \"./components/Landing\"\nimport PrivateRoute from \"./components/private-route/PrivateRoute\"\nimport Dashboard from \"./components/TutorDashboard\"\nimport DisplayLessons from \"./components/DisplayLessons\"\nimport VideoChat from \"./components/VideoChat\"\nimport FindPostings from \"./components/FindPostings\"\nimport Request from \"./components/Request\"\nimport Requests from \"./components/Requests\"\nimport AccountSettings from \"./components/AccountSettings\"\nimport NavBar from \"./components/NavBar\"\nimport SaveStripe from \"./components/SaveStripe\"\nimport MyBids from \"./components/MyBids\"\nimport Test from \"./components/Test\"\nimport { makeStyles, createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\n\nimport PastLessons from \"./components/PastLessons\"\nimport LessonsPending from \"./components/LessonsPending\"\n\nimport theme from \"./theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nimport clsx from 'clsx'\n\nconst drawerWidth = 240;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    //marginLeft: -drawerWidth,\n    \n    marginTop: 64\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth,\n    //marginTop: 64\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}))\n\nif(localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n\n  const classes = useStyles();\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenu = () => {\n    setOpenMenu(prev => !prev)\n  };\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n          <NavBar handleMenu={handleMenu} />\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: openMenu,\n            })}\n          >\n            \n          <Route exact path=\"/test\" component={Test} />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/secretRegisterPage\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/homePage\" component={HomePage} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/myLessons\" component={DisplayLessons} />\n            <PrivateRoute exact path=\"/videoChat/:lessonID\" component={VideoChat} />\n            <PrivateRoute exact path=\"/findPostings\" component={FindPostings} />\n            <PrivateRoute exact path=\"/booking/:postingID\" component={BookingPage} />\n            <PrivateRoute exact path=\"/request/:requestID\" component={Request} />\n            <PrivateRoute exact path=\"/requests\" component={Requests} />\n            <PrivateRoute exact path=\"/accountSettings\" component={AccountSettings} />\n            <PrivateRoute path=\"/savestripe\" component={SaveStripe} />\n            <PrivateRoute exact path=\"/myBids\" component={MyBids} />\n            <PrivateRoute exact path=\"/lessonsPendingPayment\" component={LessonsPending} />\n            <PrivateRoute exact path=\"/pastLessons\" component={PastLessons} />\n          </Switch>\n          \n          </main>\n          </ThemeProvider>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from \"./theme\";\nimport {ThemeProvider} from \"@material-ui/core/styles/\"\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    \n    <App />\n    \n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
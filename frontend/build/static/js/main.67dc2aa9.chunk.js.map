{"version":3,"sources":["logo.svg","4uAcFull_White.png","jon.jpeg","1.png","2.png","3.png","5.png","6.png","7.png","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/lessonReducer.js","reducers/index.js","store.js","components/HomePage.jsx","components/Menu.jsx","components/NavBar.jsx","components/Register.jsx","components/Login.jsx","components/Landing.jsx","components/private-route/PrivateRoute.js","components/StudentDashboard.jsx","actions/lessonActions.js","components/LessonDisplay.jsx","components/DisplayLessons.jsx","components/AccountFinder.jsx","components/MultipleDateTimePicker.jsx","components/TagOptions.jsx","components/MakePosting.jsx","components/Lobby.js","components/Participant.js","components/Timer.jsx","components/Room.js","components/VideoChat.js","components/Posting.jsx","components/MyPostings.jsx","components/CardSection.jsx","components/Payment.js","components/BidCard.jsx","components/PayPalBtn.jsx","components/SelectBid.jsx","components/Feedback.jsx","components/PastLesson.jsx","components/PastLessons.jsx","components/TutorFinder.jsx","components/LessonRequest.jsx","components/RequestPayment.jsx","components/AccountSettings.jsx","components/RequestCard.jsx","components/MyRequests.jsx","components/PayForRequest.jsx","components/PendingPaymentCard.jsx","components/PendingPayments.jsx","components/Complaint.jsx","components/ComplaintSuccessful.jsx","components/ComplaintCard.jsx","components/Complaints.jsx","components/GettingStarted.jsx","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","baseURL","setCurrentUser","decoded","type","payload","logoutUser","dispatch","console","log","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","isLesson","lesson","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Component","useStyles","makeStyles","theme","drawer","width","flexShrink","drawerPaper","options","name","path","icon","Home","Create","ListAlt","Archive","PostAdd","Ballot","Payment","Input","withRouter","props","classes","Drawer","anchor","open","variant","className","paper","IconButton","onClick","e","menuState","ChevronLeft","Divider","List","map","option","index","ListItem","button","window","location","href","key","ListItemIcon","ListItemText","primary","accountOptions","appBar","transition","transitions","create","easing","sharp","duration","leavinScreen","appBarShift","marginLeft","easeOut","enteringScreen","connect","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","openAccountMenu","setOpenAccountMenu","useSelector","handleMenu","prev","handleClose","target","id","preventDefault","onLogoutClick","history","push","AppBar","position","clsx","Toolbar","Grid","justify","container","item","xs","edge","color","aria-label","src","style","maxWidth","height","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","selected","Button","Register","email","dateOfBirth","Date","now","password","password2","agreedToTAC","onSubmit","bind","onChange","onDateChange","handleCheckbox","this","setState","checked","nextProps","value","date","newUser","registerUser","alert","Card","CardContent","Typography","CardActions","TextField","error","required","label","classnames","invalid","helperText","utils","DateFnsUtils","disableToolBar","format","margin","KeyboardButtonProps","Checkbox","userData","post","then","res","catch","err","response","data","Login","loginUser","emailNotFound","passwordIncorrect","setItem","jwt_decode","faqQuestions","faqAnswers","Landing","itemsExpanded","setItemsExpanded","direction","spacing","CardHeader","title","CardMedia","align","currentArray","handleExpandClick","Collapse","in","timeout","unmountOnExit","Paper","Box","m","pt","pb","component","rest","render","to","StudentDashboard","setCurrentLesson","LessonDisplay","currentDate","subject","dateString","tutorName","description","disabled","getTime","cancelLesson","dateOptions","weekday","month","day","timeOptions","hour","minute","lessons","setLessons","setLoading","setHasLessons","useEffect","get","params","studentID","length","dateAndTime","toLocaleDateString","toLocaleTimeString","lessonID","enterLesson","_id","reload","AccountFinder","users","addedEmails","forEach","addedStudentIDs","currentEmailEntry","addedUsers","handleChange","handleSubmit","deleteStudent","searchData","prevState","addStudent","idToDelete","filter","maxEmails","defaultProps","isEnabled","MultipleDateTimePicker","setCurrentDate","selectedDates","setSelectedDates","dates","alreadySelectedDates","DateTimePicker","minDate","addDate","days","maxDate","weeks","onAccept","dateToAdd","setMilliseconds","setSeconds","includes","prevDates","size","dateToRemove","valueOf","removeDate","DeleteForever","tagOptions","groupOptions","amount","cost","lessonTypes","tags","science","math","english","programming","technology","business","MakePosting","course","setCourse","Map","infoTags","setInfoTags","setDescription","year","setYear","studentName","otherStudentEmails","setOtherStudentEmails","otherStudentIDs","setOtherStudentIDs","setType","numberOfParticipants","setNumberOfParticipants","availableDates","setAvailableDates","numberOfRecurringLessons","setNumberOfRecurringLessons","isEdit","setIsEdit","match","postingID","availableTimes","dateObj","tagKeys","Object","keys","newTags","set","submitNew","chosenTags","submissionData","submitEdit","handleSelect","selector","FormControlLabel","control","Select","student","multiline","rows","fullWidth","Lobby","username","roomName","handleUsernameChange","handleRoomNameChange","Participant","participant","videoTracks","setVideoTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","publication","track","audioTracks","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","ref","autoPlay","muted","Timer","calculateTimeLeft","getFullYear","finishTime","startTime","difference","timeLeft","Math","floor","hours","minutes","seconds","newDifference","hasSurpassed","setHasSurpassed","onTimeOut","setTimeLeft","setTimeout","Room","handleLogout","room","setRoom","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","Video","currentRoom","localParticipant","tracks","trackPublication","stop","disconnect","remoteParticipants","sid","wrap","VideoChat","setUsername","setRoomName","setToken","setLesson","useDispatch","useCallback","event","identity","studentEmail","Posting","tagString","reduce","accumulator","tag","selectBid","onEdit","onDelete","postings","setPostings","setHasPostings","posting","CARD_ELEMENT_OPTIONS","hidePostalCode","base","fontFamily","fontSmoothing","fontSize","iconColor","CardSection","stripe","useStripe","elements","useElements","secret","setSecret","setDateString","client_secret","confirmCardPayment","payment_method","card","getElement","CardElement","result","message","paymentIntent","status","onPay","BidCard","tutorRating","tutorDescription","submit","SelectBid","bids","setBids","hasBids","setHasBids","bidSelected","setBidSelected","hasSelectedBid","setHasSelectedBid","setPosting","tutorID","tutorEmail","bid","Feedback","feedBack","setFeedBack","rating","setRating","setHasSubmitted","feedback","PastLesson","onRequest","complain","PastLessons","pastLessons","setPastLessons","hasPastLessons","setHasPastLessons","varaint","TutorFinder","setValue","fromPastLesson","existingEmail","onEnter","LessonRequest","tutor","setTutor","setDates","setFromPastLesson","tutorToAdd","typeToSet","RequestPayment","AccountSettings","RequestCard","onCancel","MyRequests","display","requests","setRequests","requestsEmpty","setRequestsEmpty","request","times","requestID","PayForRequest","paymentID","lessonConfirm","setLessonConfirm","confirmID","PendingPaymentCard","enterPay","PendingPayments","pendingPayments","setPendingPayments","setHasPendingPayments","payment","complaintOptions","Complaint","pastLessonID","complaint","setComplaint","complaintType","setComplaintType","pastLesson","setPastLesson","FormControl","InputLabel","ComplaintSuccessful","ComplaintCard","Complaints","complaints","setComplaints","hasComplaints","setHasComplaints","dateSubmitted","GettingStarted","image","createMuiTheme","palette","main","background","default","typography","stripePromise","loadStripe","content","flexGrow","padding","leavingScreen","marginTop","contentShift","header","alighItems","mixins","toolbar","justifyContent","jwtToken","currentTime","exp","App","ThemeProvider","CssBaseline","exact","Dashboard","DisplayLessons","MyPostings","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67dc2aa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/4uAcFull_White.67042e48.png\";","module.exports = __webpack_public_path__ + \"static/media/jon.f5ebef7b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/1.abf7aab0.png\";","module.exports = __webpack_public_path__ + \"static/media/2.ad2c9b4d.png\";","module.exports = __webpack_public_path__ + \"static/media/3.3c8858a9.png\";","module.exports = __webpack_public_path__ + \"static/media/5.84c68aa9.png\";","module.exports = __webpack_public_path__ + \"static/media/6.fdfb9299.png\";","module.exports = __webpack_public_path__ + \"static/media/7.e728a268.png\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\naxios.defaults.baseURL = '/api/'\n\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/users/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const loginUser = userData => dispatch => {\n    \n    axios\n        .post(\"/users/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n\n            const decoded = jwt_decode(token);\n            console.log(decoded);\n\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    console.log(\"logout\")\n    localStorage.removeItem(\"jwtToken\");\n    \n    setAuthToken(false);\n\n    dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_CURRENT_LESSON = \"SET_CURRENT_LESSON\";\nexport const LESSON_LOADING = \"LESSON_LOADING\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\"\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isLesson: false,\n    lesson: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_LESSON:\n            return {\n                ...state,\n                isLesson: !isEmpty(action.payload),\n                lesson: action.payload\n            };\n        case LESSON_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport lessonReducer from \"./lessonReducer\"\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    lesson: lessonReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)//,\n        //window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        //window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\n\nclass HomePage extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return(\n            <div>\n                <Typography variant=\"h1\">Welcome to the HomePage</Typography>\n            </div>\n        );\n    }\n\n}\n\nexport default HomePage;","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport { withRouter } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { ChevronLeft as ChevronLeftIcon } from \"@material-ui/icons\"\nimport {Create as CreateIcon, Home as HomeIcon, List as ListIcon, ListAlt as ListAltIcon, Archive as ArchiveIcon, PostAdd as PostAddIcon, Ballot as BallotIcon, Payment as PaymentIcon, Input as InputIcon } from \"@material-ui/icons\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    }\n}))\n\nconst options = [\n    {\n        name: \"Home\",\n        path: \"/HomePage\",\n        icon: <HomeIcon />\n    },\n    {\n        name: \"Make Posting\",\n        path: \"/makePosting\",\n        icon: <CreateIcon />\n    },\n    {\n        name: \"My Lessons\",\n        path: \"/displayLessons\",\n        icon: <ListIcon />\n    },\n    {\n        name: \"My Postings\",\n        path: \"/myPostings\",\n        icon: <ListAltIcon />\n    },\n    {\n        name: \"Past Lessons\",\n        path: \"/pastLessons\",\n        icon: <ArchiveIcon />\n    },\n    {\n        name: \"Request a Lesson\",\n        path: \"/requestLesson\",\n        icon: <PostAddIcon />\n    },\n    {\n        name: \"My Requests\",\n        path: \"/myRequests\",\n        icon: <BallotIcon />\n    },\n    {\n        name: \"Pending Payments\",\n        path: \"/pendingPayments\",\n        icon: <PaymentIcon />\n    },\n    {\n        name: \"Complaints\",\n        path: \"/complaints\",\n        icon: <InputIcon />\n    }\n];\n\nfunction Menu(props) {\n    const classes = useStyles();\n\n    const onClick = (path) => {\n        props.menuState();\n        window.location.href = path;\n    };\n\n    const handleClose = (e) => {\n        props.menuState();\n    }\n\n    return (\n        <Drawer anchor=\"left\" open={props.open} variant=\"persistent\" className={classes.drawer} classes={{\n            paper: classes.drawerPaper\n        }}>\n            <div>\n                <IconButton onClick={handleClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n                <Divider />\n            </div>\n            <List>\n                {\n                    options.map((option, index) => {\n                        const { name, path, icon} = option;\n                        return (\n                            <ListItem button onClick={() => onClick(path)} key={path}>\n                                <ListItemIcon>{icon}</ListItemIcon>\n                                <ListItemText primary={name} />\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </Drawer>\n    )\n}\n\n// class Menu extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.onClick = this.onClick.bind(this);\n//     }\n\n//     onClick(path) {\n        \n//         //will switch to window.location.href after done\n//         this.props.menuState();\n//         window.location.href = path;\n//         //this.props.history.push(path);\n        \n      \n//     }\n\n\n//     render() {\n//         return(\n//             <Drawer anchor=\"left\" open={this.props.open}>\n//                 <List>\n//                     {\n//                         options.map((option, index) => {\n//                             const { name, path, icon} = option;\n//                             return (\n//                                 <ListItem button onClick={() => this.onClick(path)} key={path}>\n//                                     <ListItemIcon>{icon}</ListItemIcon>\n//                                     <ListItemText primary={name} />\n//                                 </ListItem>\n//                             )\n//                         })\n//                     }\n//                 </List>\n//             </Drawer>\n//         );\n//     }\n// }\n\nMenu.propTypes = {\n    open: PropTypes.bool.isRequired,\n    menuState: PropTypes.func.isRequired\n}\n\nexport default withRouter(Menu);\n","import React, { Component, useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport Typography from '@material-ui/core/Typography'\nimport { connect, useSelector } from 'react-redux'\nimport PropTypes from \"prop-types\"\nimport { logoutUser } from \"../actions/authActions\"\nimport HomePage from './HomePage'\nimport { Link, withRouter } from 'react-router-dom'\nimport Menu from \"./Menu\"\nimport { Menu as AccountMenu } from \"@material-ui/core\" \nimport clsx from \"clsx\"\nimport Button from \"@material-ui/core/Button\"\n\n\n\nconst accountOptions = [\n    \"Account Settings\",\n    \"Logout\"\n];\n\nconst studentRoutes = [\n    {\n        name: \"Home\",\n        path: \"./HomePage\",\n        authLevel: 0\n    },\n    {\n        name: \"Search for Tutors\",\n        path: \"./TutorSearch\",\n        authLevel: 0\n    },\n    {\n        name: \"Display Lessons\",\n        path: \"./displayLessons\",\n        authLevel: 0\n    },\n    {\n        name: \"Make Lesson Posting\",\n        path: \"./makePosting\",\n        authLevel: 0\n    },\n    {\n        name: \"My Postings\",\n        path: \"./myPostings\",\n        authLevel: 0\n    }\n];\n\nconst tutorRoutes = [\n    {\n        name: \"Home\",\n        path: \"./HomePage\",\n        authLevel: 0\n    },\n    {\n        name: \"My Students\",\n        path: \"./MyStudents\",\n        authLevel: 0\n    },\n    {\n        name: \"Upcoming Lessons\",\n        path: \"./UpcomingLessons\",\n        authLevel: 0\n    },\n    {\n        name: \"Find Students\",\n        path: \"./FindStudents\",\n        authLevel: 0\n    }\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavinScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }\n}))\n\nfunction NavBar(props) {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openMenu, setOpenMenu] = useState(false);\n    const [openAccountMenu, setOpenAccountMenu] = useState(false);\n\n    const [auth, setAuth] = useState(useSelector(state => state.auth));\n\n    // useEffect(() => {\n\n    //     if(auth.isAuthenticated) {\n    //         console.log(\"menu open\")\n    //         props.setMenu(true);\n    //     } else {\n    //         console.log(\"menu closed\")\n    //         props.setMenu(false);\n    //     }\n\n    // }, [])\n\n    const onLogoutClick = (e) => {\n        e.preventDefault();\n        props.handleMenu();\n        props.logoutUser();\n        //props.history.push(\"/\")\n    }\n\n    const handleAccountMenu = (e) => {\n        setAnchorEl(e.currentTarget);\n        setOpenAccountMenu(true);\n    };\n\n    const handleMenu = (e) => {\n        console.log(auth);\n        setOpenMenu(prev => !prev);\n        props.handleMenu();\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n\n        handleMenu();\n        setOpenAccountMenu(false);\n        console.log(e.target.id)\n        if(e.target.id == \"Logout\") {\n            onLogoutClick(e);\n        } else if(e.target.id == \"Account Settings\") {\n            props.history.push(\"/accountSettings\");\n        } else {\n            props.history.push(e.target.id);\n        }\n    };\n\n    return (\n        <AppBar \n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: openMenu\n            })}\n        >\n            <Toolbar>\n                <Grid\n                    justify=\"space-between\"\n                    container\n                >\n                    <Grid item xs={1}>\n                        {\n                            props.auth.isAuthenticated &&\n                            <div>\n                                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleMenu}>\n                                    <MenuIcon />\n                                </IconButton>\n\n                                <Menu open={openMenu} menuState={handleMenu} />\n                            </div>\n                        }\n                    </Grid>\n                    <Grid item xs={9}>\n                        <img src={require(\"../4uAcFull_White.png\")} style={{maxWidth: \"20%\", height: \"auto\" }} />\n                        \n                    </Grid>\n                    <Grid item xs={2}>\n                        {\n                            props.auth.isAuthenticated ? (\n                            <div>\n                                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Account\" onClick={handleAccountMenu}>\n                                    <AccountCircle />\n                                </IconButton>\n                                <AccountMenu \n                                    id=\"account-menu\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    open={openAccountMenu}\n                                    onClose={handleClose}\n                                >\n                                    {\n                                        accountOptions.map(option => (\n                                            <MenuItem id={option} key={option} onClick={handleClose} selected={option === \"Pyxis\"}>\n                                                {option}\n                                            </MenuItem> \n                                        ))\n                                    }\n                                </AccountMenu>\n\n                            </div> ) : (\n                                <div>\n                                <Button onClick={() => props.history.push(\"/login\")} variant=\"contained\">Login</Button>\n                                <Button onClick={() => props.history.push(\"/register\")} variant=\"contained\">Register</Button>\n                                </div>\n                            )\n                        }\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            </AppBar>\n    )\n}\n\n// class NavBar extends Component {\n//     constructor() {\n//         super();\n\n//         this.state = {\n//             anchorEl: null,\n//             openMenu: false,\n//             openAccountMenu: false\n//         };\n\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleMenu = this.handleMenu.bind(this);\n//         this.handleClose = this.handleClose.bind(this);\n//         this.handleAccountMenu = this.handleAccountMenu.bind(this);\n\n\n\n//     }\n\n\n//     //const classes = useStyles();\n    \n//     onLogoutClick(e) {\n//         e.preventDefault();\n\n//         this.props.logoutUser();\n//     }\n\n//     handleChange(e) {\n        \n        \n//     }\n\n//     handleAccountMenu(e) {\n//         console.log(this.props.auth.user);\n//         this.setState({\n//             anchorEl: e.currentTarget,\n//             openAccountMenu: true\n//         });\n\n//     }\n\n//     handleMenu(e) {\n//         // this.setState({\n//         //     anchorEl: e.currentTarget,\n//         //     openMenu: true\n//         // });\n\n//         this.setState(prevState => ({\n//             openMenu: !prevState.openMenu\n//         }));\n//     }\n\n//     handleClose(e) {\n//         this.setState({\n//             anchorEl: null,\n//             openMenu: false,\n//             openAccountMenu: false\n//         });\n\n\n\n//         if(e.target.id == \"Logout\") {\n//             this.onLogoutClick(e);\n//         } else if(e.target.id == \"Account Settings\") {\n//             this.props.history.push(\"/accountsettings\")\n//         } else {\n//             this.props.history.push(e.target.id);\n//         }\n//     }\n\n//     render() {\n\n//         return(<div>\n\n//             <AppBar position=\"static\">\n//                 <ToolBar disableGutters>\n//                     <Grid\n//                         justify=\"space-between\"\n//                         container\n//                         direction=\"row\"\n//                     >\n//                         <Grid item xs={1}>\n\n                        \n//                         { this.props.auth.isAuthenticated && \n//                             <div>\n//                             <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.handleMenu}>\n//                                 <MenuIcon />\n\n//                             </IconButton>\n//                             <Menu open={this.state.openMenu} menuState={this.handleMenu} />\n\n//                             </div>\n                                \n//                          }\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                             <Typography align=\"left\" variant=\"h4\">4U Academics</Typography>\n//                         </Grid>\n                        \n//                         <Grid item xs={1}>\n//                         { this.props.auth.isAuthenticated && \n//                         <div>\n//                             <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Account\" onClick={this.handleAccountMenu}>\n//                                 <AccountCircle />\n//                             </IconButton>\n//                             <AccountMenu\n//                                 id=\"account-menu\"\n//                                 anchorEl={this.state.anchorEl}\n//                                 anchorOrigin={{\n//                                     vertical: 'top',\n//                                     horizontal: 'right'\n//                                 }}\n//                                 keepMounted\n//                                 transformOrigin={{\n//                                     vertical: 'top',\n//                                     horizontal: 'right'\n//                                 }}\n//                                 open={this.state.openAccountMenu}\n//                                 onClose={this.handleClose}\n//                             >\n//                                 {accountOptions.map((option) => (\n//                                     <MenuItem id={option} key={option} selected={option === \"Pyxis\"} onClick={this.handleClose}>\n//                                         {option}\n//                                     </MenuItem>\n//                                 ))}\n                               \n\n//                             </AccountMenu>\n//                             </div>\n//                          }\n                            \n//                          </Grid>\n\n//                     </Grid>\n                    \n                    \n                  \n//                 </ToolBar>\n//             </AppBar>\n\n//         </div>);\n        \n//     }\n// }\n\nNavBar.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(withRouter(NavBar));","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport { registerUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            dateOfBirth: Date.now(),\n            password: \"\",\n            password2: \"\",\n            errors: {},\n            agreedToTAC: false\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n    }\n\n    handleCheckbox(e) {\n        this.setState({\n            agreedToTAC: e.target.checked\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onDateChange(date) {\n        this.setState({ dateOfBirth: date });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.agreedToTAC) {\n            const newUser = {\n                name: this.state.name,\n                email: this.state.email,\n                dateOfBirth: this.state.dateOfBirth,\n                password: this.state.password,\n                password2: this.state.password2\n            };\n            this.props.registerUser(newUser, this.props.history);\n        } else {\n            alert(\"You must agree to the terms and conditions to register\")\n        }\n\n        \n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant='h3'>Register</Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography>Register for 4UAcademics</Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.name} onChange={this.onChange} required id=\"name\" label=\"Name\" className={classnames(\"\", {\n                        invalid: errors.name\n                    })} />\n\n                <span className=\"red-text\">{errors.name}</span>\n                    \n\n                    \n                </CardActions>\n                <CardActions>\n                    <TextField error={errors.email} onChange={this.onChange} required id=\"email\" label=\"Email\" helperText=\"Please use a valid Queen's email\" className={classnames(\"\", {\n                        invalid: errors.email\n                    })} />\n                    <span className=\"red-text\">{errors.email}</span>\n                </CardActions>\n\n                <CardActions>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker \n                            disableToolBar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"dateOfBirth\"\n                            label=\"Enter your Date of Birth\"\n                            value={this.state.dateOfBirth}\n                            onChange={this.onDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change-date'\n                            }}\n                        />\n\n                        \n                    </MuiPickersUtilsProvider>\n                </CardActions>\n\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password} onChange={this.onChange} required id=\"password\" label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password\n                    })}/>\n                    <span className=\"red-text\">{errors.password}</span>\n                </CardActions>\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password2} onChange={this.onChange} required id=\"password2\" label=\"Confirm Password\"  className={classnames(\"\", {\n                        invalid: errors.password2\n                    })}/>\n                    <span className=\"red-text\">{errors.password2}</span>\n\n                </CardActions>\n                <CardActions>\n                    <Button type=\"Submit\">Register</Button>\n                </CardActions>\n                <Typography variant=\"h6\">Please agree to the terms and conditions below:</Typography>\n                <Typography variant=\"body1\"></Typography>\n                <CardActions>\n                    <Checkbox checked={this.state.agreedToTAC} onChange={this.handleCheckbox} color=\"primary\" />\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\n\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\n\nconst styles = {\n    \n}\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h3\">\n                        Login\n                    </Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.email} id=\"email\" onChange={this.onChange} label=\"Email\" helperText=\"Please provide a valid account email\" className={classnames(\"\", {\n                        invalid: errors.email || errors.emailNotFound\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.email}\n                        {errors.emailNotFound}\n                    </span>\n                </CardActions>\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password} id=\"password\" onChange={this.onChange} label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password || errors.passwordIncorrect\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.password}\n                        {errors.passwordIncorrect}\n                    </span>\n                </CardActions>\n\n                <CardActions>\n                    <Button type=\"Submit\" variant=\"contained\" color=\"primary\">Login</Button>\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n\n\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Divider from \"@material-ui/core/Divider\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport { makeStyles } from \"@material-ui/styles/\"\n\nimport { useState } from 'react'\n\nconst faqQuestions = [\n    \"How do I get started?\",\n    \"Is my credit card information secure?\",\n    \"How much will a session cost?\",\n    \"Who are your tutors?\",\n    \"Unsure about online tutoring?\",\n    \"What if our child doesn't like their tutor?\"\n]\n\nconst faqAnswers = [\n    \"First sign up for an account on our register page. Then sign in and navigate the menu to make a posting. For more information visit our getting started page.\",\n    \"We use a third party service to manage payments. Additionally we do not save any credit card data so it is completely secure.\",\n    \"All sessions will cost between $25 and $30 per hour, depending on the time of booking, and the selected tutor. Non-peak times during school days (between 9am - 4pm) are less expensive than peak evening times.\",\n    \"Our 4U Academics tutors are top university students from across the province and country. Tutors apply with their university and high school transcripts and undergo a background check. 4U Academics vets and selects the top students who have shown mastery in their areas of expertise at both the high school and post secondary level, and who also have experience working with youth as mentors, camp counselors, or sports coaches.\",\n    \"Online tutoring has been used for several years as a substitute for in-person sessions in a variety of education settings. 4U Academics uses a in-depth screening process to make sure that all our tutors are equipped to help your young learners. Each tutor must pass a basic background check, and they must have experience working with young adults and teens. Additionally, 4U Academic tutoring sessions are recorded and stored online to ensure quality and safety for everyone, and that any discrepancies or concerns can be reviewed and addressed. In today’s COVID age, on-line tutoring offers unparalleled safety learning from your own home.\",\n    \"We encourage feedback so we can continuously improve our services, and make sure we are doing the best possible job matching students with tutors. Please use our rating system to provide feedback, and also contact us with any concerns or for 1:1 discussion. At any time, you are free to cancel or change tutors to find the best match for you.\"\n]\n\n\nfunction Landing(props) {\n\n    const [itemsExpanded, setItemsExpanded] = useState([false]);\n    \n    // return (\n    //     <Grid container spacing={2} direction=\"column\">\n    //         <Grid item xs={12}>\n    //             <Paper>\n    //                 <Typography variant=\"h5\">\n    //                     About Us\n    //                 </Typography>\n    //                 <Typography variant=\"body1\">\n    //                     4U Academics was created by Will King, a third-year Engineering student at Queeen’s University, Kingston, Ontario.  As a student athlete during his high school years, Will has experienced first-hand the challenges of keeping up with a demanding high school curriculum while spending significant time away from the classroom.  While working on-line to complete his second year curriculum last spring, Will realized the potential impact and challenges of removing learners from the traditional classroom.  Additionally, as both he and many of his peers saw their part-time jobs this fall disappear as on-campus services shut down, he recognized a need for university students to continue to earn income to pay tuition fees for the upcoming year.  Will is excited to launch an affordable win-win solution for Ontario students during the coming academic year and hopes to make a positive difference in students and parents lives during the ongoing pandemic.\n    //                 </Typography>\n    //                 <Typography variant=\"body1\">\n\n    //                 </Typography>\n    //             </Paper>\n    //         </Grid>\n    //         <Grid item xs={12}>\n    //             <Paper>\n    //                 <Typography variant=\"h5\">\n    //                     Getting Started\n    //                 </Typography>\n    //                 <Typography variant=\"body1\">\n    //                     4U Academics was built by university students, to help with the academic struggles that COVID-19 may cause with their high-school level peers,  and provide them with a cost effective and local solution. It is imperative that Canadians support each other during these trying times, and 4U Academics is committed to help secondary school students by partnering them with the right university students to meet their academic needs.   4U Academics will do this by providing a single on-line location for students to request, select, meet, pay, and schedule times with a tutor of their choosing. 4U Academics will provide these services for students, but at a fraction of the cost of traditional options, while giving the consumer the control throughout the whole process. \n\t// 4U Academics puts the power in the student’s and parents' hands, as they can request a lesson, outline their desires and criteria for a tutor, and select one of the candidates through the integrated tutor database. Once a tutor is selected, the student can book a time, and finalize the session before it starts. At the time of the session, the student will log into the site, select their session, and start learning! Once the session is over the student has the option to book another lesson with the same tutor, and after every session the students can anonymously leave feedback and a rating for the tutor. 4U Academics will record and monitor every session that is run, so if there are any concerns, the session can be reviewed to ensure a safe and enjoyable experience for everyone.\n\t// One of 4U Academics differentiating factors is its exclusive use of post-secondary students as tutors. University students submit their transcripts to apply to tutor courses in which they showed mastery, which allows them to help prepare their students for university curriculums. Additionally, the tutors are able to provide recent and applicable perspectives on courses and relate with current students learning styles and challenges. Along with their knowledge, all 4U Academics tutors are equipped with model curriculums recommended by current Ontario Teachers to ensure they are delivering the most applicable material to the students. 4U Academics uses university students to facilitate mutually beneficial relationships, which allow students to receive tutoring at significantly lower costs then traditional \n\n    //                 </Typography>\n    //             </Paper>\n    //         </Grid>\n    //         <Grid item xs={12}>\n    //             <Paper>\n    //                 <Typography variant=\"h5\">\n    //                     Tutor of the Week\n    //                 </Typography>\n    //             </Paper>\n    //         </Grid>\n    //     </Grid>\n    // )\n\n    const handleExpandClick = (index) => {\n        let currentArray = itemsExpanded;\n\n        currentArray[index] = !currentArray[index];\n\n        setItemsExpanded([...currentArray])\n    }\n\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item xs={12}>\n                \n            </Grid>\n            <Grid item container xs={12} direction=\"row\" spacing={2}>\n                <Grid item xs={6}>\n                    <Card>\n                        <CardHeader title=\"Tutor of the Week\"  />\n                        <Divider />\n                        <CardMedia>\n                            <img src={require(\"../jon.jpeg\")} />\n                        </CardMedia>\n                        <CardContent align=\"left\">\n                            <Typography variant=\"h5\">About Jon:</Typography>\n                            <Typography variant=\"body1\">Jon is a third year Applied Mathematics and Engineering Student at Queen's University. He specializes tutoring in math and science related subjects. He is passionate about skiing, and an avid chess player.</Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6}>\n                    <Card>\n                        <CardHeader title=\"Frequently Asked Questions\" />\n                        <Divider />\n                        {/* <CardContent align=\"left\">\n                            <Typography variant=\"h6\">How do I get started?</Typography>\n                            <Typography variant=\"body1\">First sign up for an account on our register page. Then sign in and navigate the menu to make a posting. For more information visit our getting started page.</Typography>\n                            <Divider />\n                            <Typography variant=\"h6\">Is my credit card information secure?</Typography>\n                            <Typography variant=\"body1\">We use a third party service to manage payments. Additionally we do not save any credit card data so it is completely secure.</Typography>\n                            <Divider />\n                            <Typography variant=\"h6\">How much will  a sesion cost?</Typography>\n                            <Typography variant=\"body1\">All sessions will cost between $25 and $30 per hour, depending on the time of booking, and the selected tutor. Non-peak times during school days (between 9am - 4pm) are less expensive than peak evening times.</Typography>\n                            <Divider />\n                            <Typography variant=\"h6\">Who are your tutors?</Typography>\n                            <Typography variant=\"body1\">Our 4U Academics tutors are top university students from across the province and country. Tutors apply with their university and high school transcripts and undergo a background check. 4U Academics vets and selects the top students who have shown mastery in their areas of expertise at both the high school and post secondary level, and who also have experience working with youth as mentors, camp counselors, or sports coaches. </Typography>\n                            <Divider />\n                            <Typography variant=\"h6\">Unsure About Online Tutoring?</Typography>\n                            <Typography variant=\"body1\">Online tutoring has been used for several years as a substitute for in-person sessions in a variety of education settings. 4U Academics uses a in-depth screening process to make sure that all our tutors are equipped to help your young learners. Each tutor must pass a basic background check, and they must have experience working with young adults and teens. Additionally, 4U Academic tutoring sessions are recorded and stored online to ensure quality and safety for everyone, and that any discrepancies or concerns can be reviewed and addressed.  In today’s COVID age, on-line tutoring offers unparalleled safety learning from your own home.</Typography>\n                            <Divider />\n                            <Typography variant=\"h6\">What if our child doesn’t like their tutor?</Typography>\n                            <Typography variant=\"body1\">We encourage feedback so we can continuously improve our services, and make sure we are doing the best possible job matching students with tutors.  Please use our rating system to provide feedback, and also contact us with any concerns or for 1:1 discussion.  At any time, you are free to cancel or change tutors to find the best match for you.</Typography>\n                        </CardContent> */}\n                        {\n                            faqQuestions.map((value, index) => (\n                                <CardActions>\n                                    <Typography variant=\"h6\">{value}</Typography>\n                                    <IconButton \n                                        onClick={() => handleExpandClick(index)}\n                                    >\n                                        <ExpandMoreIcon />\n                                    </IconButton>\n                                    <Collapse in={itemsExpanded[index]} timeout=\"auto\" unmountOnExit>\n                                        <CardContent>\n                                            <Typography variant=\"body1\">\n                                                {faqAnswers[index]}\n                                            </Typography>\n                                        </CardContent>\n                                    </Collapse>\n                                </CardActions>\n                            ))\n                        }\n                        \n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper spacing={20}>\n                    <Box m={2} pt={3} pb={3}>\n                <Button variant=\"contained\"  color=\"primary\" onClick={() => window.location.href= \"/gettingStarted\"}>Getting Started</Button>\n                </Box>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Landing;","import React, { Component } from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nconst PrivateRoute = ({ component: Component, auth, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { logoutUser } from \"../actions/authActions\"\nimport Typography from \"@material-ui/core/Typography\"\n\nclass StudentDashboard extends Component {\n    constructor(){\n        super();\n    }\n\n    onLogoutClick(e) {\n        e.preventDefault();\n\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <div>\n                <Typography variant=\"h1\">Welcome to the Student Dashboard</Typography>\n            </div>\n        );\n    }\n}\n\nexport default StudentDashboard;","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING\n} from './types';\n\nexport const setCurrentLesson = decoded => {\n    return {\n        type: SET_CURRENT_LESSON,\n        payload: decoded\n    };\n};\n\nexport const endLesson = () => dispatch => {\n    dispatch(setCurrentLesson({}));\n};","import React, { Component } from 'react'\n\nimport Card from \"@material-ui/core/Card\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\n\nimport PropTypes from \"prop-types\"\n\nfunction LessonDisplay(props) {\n\n    const currentDate = new Date(Date.now());\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.subject}</Typography>\n                <Typography variant=\"h6\">{props.dateString}</Typography>\n                <Typography variant=\"h6\">With: {props.tutorName}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.onClick} disabled={props.date.getTime() - currentDate.getTime() > 300000}>Enter Lesson</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.cancelLesson}>Cancel</Button>\n            </CardActions>\n        </Card>   \n    )\n}\n\n\nLessonDisplay.propTypes = {\n    dateString: PropTypes.object.isRequired,\n    subject: PropTypes.string.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    cancelLesson: PropTypes.func.isRequired,\n    description: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired\n}\n\nexport default LessonDisplay;","import React, { Component, useState, useEffect } from 'react'\nimport { connect, useSelector } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\"\nimport { setCurrentLesson } from \"../actions/lessonActions\"\n\nimport { Link, withRouter } from \"react-router-dom\"\n\nimport PropTypes from \"prop-types\"\n\nimport LessonDisplay from \"./LessonDisplay\"\n\n\nimport axios from \"axios\";\n\nimport Grid from \"@material-ui/core/Grid\"\n\n\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction DisplayLessons(props) {\n    const [lessons, setLessons] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [loading, setLoading] = useState(true);\n    const [hasLessons, setHasLessons] = useState(false);\n\n    useEffect(() => {\n        // axios\n        // .post(\"/users/getLessons\", { studentID: user.id})\n        // .then(res => {\n        //     if(res.data.length > 0) {\n        //         setLessons(res.data);\n        //         setHasLessons(true);\n        //         setLoading(false);\n        //     } else {\n        //         setLoading(false);\n        //     }\n        // })\n        // .catch(err => console.log(err));\n\n        axios\n        .get(\"/users/getLessons\", { params: { studentID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                console.log(res.data);\n                setLessons(res.data);\n                setHasLessons(true);\n                setLoading(false);\n            } else {\n                setLoading(false)\n            }\n        })\n    }, []);\n\n    const enterLesson = (lessonID, index) => {\n        props.setCurrentLesson(lessons[index]);\n\n        props.history.push(\"/videoChat/\" + lessonID);\n    }\n\n    const cancelLesson = (lessonID) => {\n        axios\n        .post(\"/lesson/student/cancel\", { lessonID: lessonID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <Grid container spacing={2}>\n            { !loading ? (\n                lessons.map((lesson, index) => {\n                    const date = new Date(lesson.dateAndTime);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                    return (\n                        <Grid item xs={4}>\n                            <LessonDisplay \n                                date={dateString}\n                                subject={lesson.subject}\n                                tutorName={lesson.tutorName}\n                                onClick={() => enterLesson(lesson._id, index)}\n                                cancelLesson={() => cancelLesson(lesson._id)}\n                                date={date}\n                            />\n                        </Grid>\n                    )\n                })\n                //!hasLessons && <Typography variant=\"h5\">You have no lessons, make a posting to get started</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n            }\n        </Grid>\n    )\n}\n\nDisplayLessons.propTypes = {\n    auth: PropTypes.object.isRequired,\n    setCurrentLesson: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { setCurrentLesson }\n)(withRouter(DisplayLessons));","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from \"prop-types\"\nimport axios from 'axios';\nimport TextField from \"@material-ui/core/TextField\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nclass AccountFinder extends Component {\n    constructor(props) {\n        super(props);\n\n        let users = [];\n\n        this.props.addedEmails.forEach((value, index) => {\n            users.push({email: value, _id: this.props.addedStudentIDs[index]});\n        });\n\n        this.state = {\n            currentEmailEntry: \"\",\n            addedUsers: users\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.deleteStudent = this.deleteStudent.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({currentEmailEntry: e.target.value});\n    }\n\n    handleSubmit(e) {\n        \n        const searchData = {\n            email: this.state.currentEmailEntry\n        }\n        axios\n            .post(\"/users/findUserByEmail\", searchData)\n            .then(res => {\n                console.log(\"a\")\n                const newUser = {\n                    email: res.data.email,\n                    _id: res.data._id\n                };\n\n                this.setState(prevState => ({\n                    addedUsers: [...prevState.addedUsers, newUser],\n                    currentEmailEntry: \"\"\n                }));\n\n                this.props.addStudent(newUser); \n\n            })\n            .catch(err => {\n                // if(err.response.data.userNotFound) {\n                //     alert(err.response.data.userNotFound)\n                // } else {\n                //     alert(\"The server encountered an unknown error, try refreshing the page\")\n                // }         \n                console.log(err);\n            })\n    }\n\n    deleteStudent(user) {\n        //e.preventDefault();\n        const idToDelete = user._id;\n        \n        this.setState(prevState => ({\n            addedUsers: prevState.addedUsers.filter((value, index) => {\n                return value._id != idToDelete;\n            })\n        }));\n        this.props.deleteStudent(user);\n    }  \n\n    \n\n    render()  {\n        return(\n            <div>\n                {\n                    this.state.addedUsers.map(user => (\n                       \n                        <div>\n                            \n                            <Typography variant=\"h6\">{user.email}</Typography>\n                            \n                            <IconButton aria-label=\"delete\" onClick={() => this.deleteStudent(user)}>\n                                <DeleteIcon />\n                            </IconButton>\n                            \n                        </div>\n                        \n                    ))\n                }\n                <TextField disabled={this.props.maxEmails <= this.state.addedUsers.length } value={this.state.currentEmailEntry} onChange={this.handleChange} />\n                <Button onClick={this.handleSubmit}>Add</Button>\n            </div>\n        );\n    }\n}\n\nAccountFinder.propTypes = {\n    addStudent: PropTypes.func.isRequired,\n    deleteStudent: PropTypes.func.isRequired,\n    maxEmails: PropTypes.number,\n    addedEmails: PropTypes.array,\n    addedStudentIDs: PropTypes.array\n};\nAccountFinder.defaultProps = {\n    isEnabled: true\n}\n\nexport default AccountFinder;","import React, { Component, useState, useEffect } from 'react'\nimport { Calendar } from \"@material-ui/pickers\"\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { TimePicker } from \"@material-ui/pickers\";\nimport { isThisHour } from 'date-fns/esm';\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { DateTimePicker } from \"@material-ui/pickers\"\nimport PropTypes from \"prop-types\"\nimport addDate from \"date-fns/add\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { DeleteForever as DeleteForeverIcon } from \"@material-ui/icons/\"\nimport { createMuiTheme } from \"@material-ui/core\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\" };\nconst timeOptions = { hour: 'numeric', minute: 'numeric' };\n\n\n\nfunction MultipleDateTimePicker(props) {\n\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [selectedDates, setSelectedDates] = useState([]);\n\n    const handleDate = (e) => {\n        console.log(\"date handled\")\n        setCurrentDate(e);\n        \n    };\n\n    useEffect(() => {\n        let dates = [];\n\n        props.alreadySelectedDates.forEach((value, index) => {\n            dates.push(new Date(value));\n        });\n\n        setSelectedDates(dates);\n    }, []);\n\n    const addDateToArray = (date) => {\n        let dateToAdd = new Date(date);\n\n        dateToAdd.setMilliseconds(0);\n        dateToAdd.setSeconds(0);\n\n        if(selectedDates.includes(dateToAdd)) {\n\n        } else {\n            setSelectedDates(prevDates => [...prevDates, dateToAdd]);\n            props.addDate(dateToAdd);\n        }\n    }\n\n     \n\n    const removeDate = (dateToRemove) => {\n\n        \n\n        setSelectedDates(selectedDates.filter(date => dateToRemove.valueOf() != date.valueOf()));\n        props.removeDate(dateToRemove);\n    }\n\n    return (\n        <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker onChange={handleDate} minDate={addDate(Date.now(), {days:1})} maxDate={addDate(Date.now(), {weeks: 2, days: 1})} value={currentDate} onAccept={addDateToArray}/>\n                \n            </MuiPickersUtilsProvider>\n            {console.log(selectedDates)};\n            {\n                \n                selectedDates.map((date, index) => (\n                    <div>\n                        <Typography variant=\"h5\">{date.toLocaleDateString(\"en-CA\", dateOptions)} at {date.toLocaleTimeString(\"en-CA\", timeOptions)}</Typography>\n\n                        <IconButton aria-label=\"delete\" size=\"small\" onClick={() => removeDate(date)}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </div>\n                ))\n            }\n        </div>\n    )\n\n}\n\nMultipleDateTimePicker.propTypes = {\n    addDate: PropTypes.func.isRequired,\n    removeDate: PropTypes.func.isRequired,\n    alreadySelectedDates: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default MultipleDateTimePicker;","import React, { Component } from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nconst tagOptions = [\n    {\n        name: \"Science\",\n        checked: false,\n        key: 'science'\n    },\n    {\n        name: \"Math\",\n        checked: false,\n        key: 'math'\n    },\n    {\n        name: \"English\",\n        checked: false,\n        key: 'english'\n    },\n    {\n        name: \"Programming\",\n        checked: false,\n        key: 'programming'\n    },\n    {\n        name: \"Technology\",\n        checked: false,\n        key: 'technology'\n    },\n    {\n        name: \"Business\",\n        checked: false,\n        key: 'business'\n    }\n];\n\nclass TagOptions extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(\n            <Grid container>\n                <FormControl>\n                <FormLabel component=\"legend\">Choose related tags about the course</FormLabel>\n                {\n                    tagOptions.map((option, index) => {\n                        const { name, checked, key} = option;\n\n                        return (\n                            <Grid item>\n                                <FormControlLabel control={<Checkbox color=\"primary\" />} label={index} />\n                            </Grid>\n                        )\n                    })\n                }\n                </FormControl>\n            </Grid>\n        );\n    }\n}\n\nexport default TagOptions;","import React, { Component, useState, useEffect } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from \"prop-types\"\nimport TextField from \"@material-ui/core/TextField\"\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport AccountFinder from \"./AccountFinder\"\n\nimport classnames from \"classnames\"\n\nimport Button from \"@material-ui/core/Button\"\n\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\"\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport spacing from \"@material-ui/system/spacing\"\n\nimport MultipleDateTimePicker from \"./MultipleDateTimePicker\"\n\nimport isEmpty from \"is-empty\";\n\nimport Paper from \"@material-ui/core/Paper\"\n\nimport { Link, withRouter } from \"react-router-dom\"\n\nimport TagOptions from \"./TagOptions\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker\n} from '@material-ui/pickers'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport errorReducers from '../reducers/errorReducers'\n\nimport axios from \"axios\"\n\n\n\nconst recurringOptions = [\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8\n];\n\nconst tagOptions = [\n    {\n        name: \"Science\",\n        checked: false,\n        key: 'science'\n    },\n    {\n        name: \"Math\",\n        checked: false,\n        key: 'math'\n    },\n    {\n        name: \"English\",\n        checked: false,\n        key: 'english'\n    },\n    {\n        name: \"Programming\",\n        checked: false,\n        key: 'programming'\n    },\n    {\n        name: \"Technology\",\n        checked: false,\n        key: 'technology'\n    },\n    {\n        name: \"Business\",\n        checked: false,\n        key: 'business'\n    }\n];\n\nconst groupOptions = [\n    {\n        amount: 2,\n        cost: 45\n    },\n    {\n        amount: 3,\n        cost: 65\n    },\n    {\n        amount: 4,\n        cost: 85\n    },\n    {\n        amount: 5,\n        cost: 105\n    }\n];\n\nconst lessonTypes = [\n    \"SINGLE\",\n    \"GROUP\"\n];\n\nconst tags = {\n    science: false,\n    math: false,\n    english: false,\n    programming: false,\n    technology: false,\n    business: false\n};\n    \n\n\n\n\nfunction MakePosting(props) {\n\n    \n\n    const [studentID, setStudentID] = useState(useSelector(state => state.auth.user.id)); //meh\n    const [course, setCourse] = useState(\"\");\n    const [infoTags, setInfoTags] = useState(new Map()); //meh\n    const [description, setDescription] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [studentName, setStudentName] = useState(useSelector(state => state.auth.user.name)); //meh\n    const [otherStudentEmails, setOtherStudentEmails] = useState([]);\n    const [otherStudentIDs, setOtherStudentIDs] = useState([]);\n    const [type, setType] = useState(\"\");\n    const [numberOfParticipants, setNumberOfParticipants] = useState(1);\n    const [availableDates, setAvailableDates] = useState([]);\n    const [numberOfRecurringLessons, setNumberOfRecurringLessons] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [isEdit, setIsEdit] = useState(false);\n\n\n    useEffect(() => {\n        \n        \n        if(props.match.params.postingID) {\n            console.log(\"isEdit\")\n            const { postingID } = props.match.params;\n\n            axios\n            .get(\"/match/user/postingByID\", { params: { postingID: postingID } })\n            .then(res => {\n                const { data } = res;\n                \n                setCourse(data.course);\n                \n                setDescription(data.description);\n                setYear(data.year);\n                setOtherStudentEmails(data.otherStudentEmails);\n                setOtherStudentIDs(data.otherStudentIDs);\n                setType(data.type);\n                setNumberOfParticipants(data.numberOfParticipants);\n                \n\n                let dates = [];\n\n                data.availableTimes.forEach(date => {\n                    let dateObj = new Date(date);\n                    dates.push(dateObj);\n                });\n\n\n                setAvailableDates(dates);\n\n\n                const tagKeys = Object.keys(tags);\n                let newTags = new Map();\n                tagKeys.forEach((key) => {\n                    if(data.infoTags.includes(key)) {\n                        setInfoTags(infoTags.set(key, true))\n                    }\n                });\n\n                setInfoTags(new Map(infoTags))\n                setIsEdit(true);\n                \n                console.log(newTags);\n                \n                console.log(infoTags);\n                setLoading(false);\n            }) \n            .catch(err => console.log(err));\n        } else {\n            setLoading(false);\n        }\n    }, [])\n\n    const submitNew = () => {\n        const chosenTags = [];\n\n        infoTags.forEach((value, key) => {\n            if(value) chosenTags.push(key);\n        });\n\n        const submissionData = {\n            studentID: studentID,\n            course: course,\n            description: description,\n            year: year,\n            studentName: studentName,\n            infoTags: chosenTags,\n            type: type,\n            availableTimes: availableDates,\n            otherStudentIDs: otherStudentIDs,\n            numberOfParticipants: numberOfParticipants,\n            numberOfRecurringLessons: numberOfRecurringLessons,\n            otherStudentEmails: otherStudentEmails\n        };\n\n        axios\n        .post(\"/match/addPosting\", submissionData)\n        .then(res => {\n            props.history.push('/myPostings');\n        })\n        .catch(err => console.log(err));\n    }\n\n    const submitEdit = () => {\n        const chosenTags = [];\n\n        infoTags.forEach((value, key) => {\n            if(value) chosenTags.push(key);\n        });\n\n        const submissionData = {\n            studentID: studentID,\n            course: course,\n            description: description,\n            year: year,\n            studentName: studentName,\n            infoTags: chosenTags,\n            postingID: props.match.params.postingID,\n            type: type,\n            availableTimes: availableDates,\n            otherStudentIDs: otherStudentIDs,\n            numberOfParticipants: numberOfParticipants,\n            numberOfRecurringLessons: numberOfRecurringLessons,\n            otherStudentEmails: otherStudentEmails\n        };\n\n        console.log(submissionData);\n\n        axios\n        .post(\"/match/editPosting\", submissionData)\n        .then(res => {\n           // props.history.push('/myPostings');\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleCourse = (e) => {\n        setCourse(e.target.value);\n    }\n\n    const handleDescription = (e) => {\n        setDescription(e.target.value);\n    }\n\n    const handleYear = (e) => {\n        setYear(e.target.value);\n    }\n    \n    //need to fix\n    const handleCheckbox = (e) => {\n        const { id, checked } = e.target;\n        setInfoTags(new Map(infoTags.set(id, checked)))\n    }\n\n    const handleSelect = (e) => {\n        const selector = e.target.name;\n        const { value } = e.target;\n\n        switch(selector) {\n            case \"LESSON_TYPE\":\n                setType(value);\n                break;\n            case \"GROUP_SIZE\":\n                setNumberOfParticipants(value);\n                break;\n            case \"RECURRING_NUMBER\":\n                setNumberOfRecurringLessons(value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const addStudent = (student) => {\n        console.log(otherStudentEmails);\n        setOtherStudentEmails(prevState => [...prevState, student.email]);\n        setOtherStudentIDs(prevState => [...prevState, student._id]);\n    };\n\n\n    //May need to fix\n    const deleteStudent = (student) => {\n        // setOtherStudentEmails(prevState => {\n        //     prevState.filter((email, index) => {\n        //         return email != student.email;\n        //     });\n        // });\n\n        // setOtherStudentIDs(prevState => {\n        //     prevState.filter((id, index) => {\n        //         return id != student._id;\n        //     });\n        // });\n        setOtherStudentEmails(otherStudentEmails.filter(email => student.email != email));\n        setOtherStudentIDs(otherStudentIDs.filter(id => student._id != id));\n        \n    }\n\n    const addDate = (dateToAdd) => {\n        setAvailableDates(prevDates => [...prevDates, dateToAdd]);\n    };\n\n    \n\n    const removeDate = (dateToRemove) => {\n        setAvailableDates(availableDates.filter(date => dateToRemove.valueOf() != date.valueOf()));\n    }\n\n    return (\n        <Paper>\n        {\n            loading ? (\n                <Typography variant=\"h5\">Loading...</Typography>\n            ) : (\n                <div>\n            <Typography variant=\"h3\">Make a Posting for a Tutor</Typography>\n            <form onSubmit={isEdit ? submitEdit : submitNew}>\n                <TextField value={course} onChange={handleCourse} required id=\"course\" label=\"Course\" />\n\n                {\n                    \n                    tagOptions.map(option => (\n                        \n                        <FormControlLabel\n                            control={<Checkbox name={option.name} id={option.key} checked={infoTags.get(option.key)} onChange={handleCheckbox} />}\n                            label={option.name}\n                        />\n                    ))\n                }\n\n                <Typography variant=\"h4\">Select Lesson Type:</Typography>\n                <Select\n                    onChange={handleSelect}\n                    value={type}\n                    name=\"LESSON_TYPE\"\n                >\n                    {\n                        lessonTypes.map(lesson => (\n                            <MenuItem value={lesson}>LessonType: {lesson}</MenuItem>\n                        ))\n                    }\n                </Select>\n\n                {\n                    (type === \"GROUP\"\n                        ?\n                        (\n                            <div>\n\n                            <Typography variant=\"h4\">Select Number of Participants: </Typography>\n                            <Select\n                                onChange={handleSelect}\n                                value={numberOfParticipants}\n                                name=\"GROUP_SIZE\"\n                            >\n                                {\n                                    groupOptions.map(option => (\n                                    <MenuItem value={option.amount}>Participants: {option.amount}, Cost: {option.cost}</MenuItem>\n                                ))\n                                }\n\n                            </Select>\n                            <Typography variant=\"h4\">Enter the participants emails associated with their account</Typography>\n                            <AccountFinder addStudent={addStudent} deleteStudent={deleteStudent} maxEmails={numberOfParticipants - 1} addedEmails={otherStudentEmails} addedStudentIDs={otherStudentIDs} />\n                            </div>\n\n                        ) : null\n                    )\n                }\n\n                <Typography variant=\"h4\">Select the times you are available:</Typography>\n\n                <MultipleDateTimePicker addDate={addDate} removeDate={removeDate} alreadySelectedDates={availableDates} />\n\n                <TextField value={description} onChange={handleDescription} multiline rows={5} required id=\"description\" label=\"Description\" fullWidth style={{ margin: 8 }} />\n\n                <TextField value={year} onChange={handleYear} required id=\"year\" label=\"Year\" />\n\n                {\n                    isEdit ? (\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitEdit}>Edit Posting</Button>\n                    ) : (\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitNew}>Submit Posting</Button>\n                    )\n                }\n            </form>\n        </div>\n            )\n        }\n        </Paper>\n        \n    )\n}\n\nexport default MakePosting;","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nconst Lobby = ({\n    username,\n    handleUsernameChange,\n    roomName,\n    handleRoomNameChange,\n    handleSubmit,\n    date,\n    description\n}) => {\n    return(\n        <Paper>\n        <form onSubmit={handleSubmit}>\n            <Typography variant=\"h4\">\n                Welcome {username} to the lesson lobby. Your lesson is scheduled to begin at \n                {date.toLocaleTimeString(\"en-CA\", timeOptions)}. Click the Begin Lesson Button to enter the lesson.\n            </Typography>\n            <Typography variant=\"h5\">Course: {roomName}</Typography>\n\n            <Button type=\"submit\">Begin Lesson</Button>\n\n        </form>\n        </Paper>\n    );\n};\n\nexport default Lobby;","import React, { useState, useEffect, useRef } from 'react'\n\nimport { Player } from \"video-react\"\n\nimport \"./VideoStyle.css\"\n\n\n\nconst Participant = ({ participant }) => {\n    const [videoTracks, setVideoTracks] = useState([]);\n    const [audioTracks, setAudioTracks] = useState([]);\n\n    const videoRef = useRef();\n    const audioRef = useRef();\n\n    const trackpubsToTracks = trackMap => Array.from(trackMap.values())\n        .map(publication => publication.track)\n        .filter(track => track !== null);\n\n    useEffect(() => {\n        const trackSubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => [...videoTracks, track]);\n            } else {\n                setAudioTracks(audioTracks => [...audioTracks, track]);\n            }\n        };\n\n        const trackUnsubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => videoTracks.filter(v => v!== track));\n            } else {\n                setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n            }\n        };\n\n        setVideoTracks(trackpubsToTracks(participant.videoTracks));\n        setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n        participant.on('trackSubscribed', trackSubscribed);\n        participant.on('trackUnsubscribed', trackUnsubscribed);\n\n        return () => {\n            setVideoTracks([]);\n            setAudioTracks([]);\n            participant.removeAllListeners();\n        };\n    }, [participant]);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if(videoTrack) {\n            videoTrack.attach(videoRef.current);\n            return () => {\n                videoTrack.detach();\n            };\n        }\n    }, [videoTracks]);\n\n    return (\n        <div className=\"participant\">\n           \n            <video ref={videoRef} autoPlay={true} height=\"100%\" width=\"100%\" />\n            \n            <audio ref={audioRef} autoPlay={true} muted={true}/>\n        </div>\n    );\n};\n\nexport default Participant;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction Timer(props) {\n    const calculateTimeLeft = () => {\n        \n        let year = new Date().getFullYear();\n\n        //Adds 1 hour to the start time in milliseconds\n        let finishTime = props.startTime.getTime() + 3600000;\n        console.log(props.startTime)\n        \n\n        const difference = +new Date(finishTime) - +new Date();\n\n        let timeLeft = {};\n\n        console.log(difference)\n\n        if(difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n\n            console.log(timeLeft);\n        } else if(difference > -300000) {\n            const newDifference = +new Date(finishTime + 300000) - +new Date();\n            timeLeft = {\n                hours: Math.floor((newDifference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((newDifference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60) + 60\n            }\n\n            if(!hasSurpassed) {\n                setHasSurpassed(true);\n            }\n        } else if(difference < -300000) {\n            props.onTimeOut();\n        }\n\n        return timeLeft;\n    }\n    \n    const [hasSurpassed, setHasSurpassed] = useState(false)\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    \n\n    useEffect(() => {\n        setTimeout(() => {\n            setTimeLeft(calculateTimeLeft());\n        }, 1000)\n    })\n\n    return (\n        <div>\n            <Paper>\n                <Typography variant=\"body1\">Time Left: {timeLeft.hours}:{timeLeft.minutes}:{timeLeft.seconds}</Typography>\n            </Paper>\n        </div>\n    );\n}\n\nTimer.propTypes = {\n    startTime: PropTypes.object.isRequired,\n    onTimeOut: PropTypes.func.isRequired\n}\n\nTimer.defaultProps = {\n    startTime: new Date(Date.now())\n}\n\nexport default Timer;","import React, { useState, useEffect } from 'react'\nimport Video from 'twilio-video';\nimport Participant from './Participant'\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Card from \"@material-ui/core/Card\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/styles/\"\n\nimport \"./ParticipantGrid.css\"\n\n\nconst Room = ({ roomName, token, handleLogout, subject, startTime}) => {\n    const [room, setRoom] = useState(null);\n    const [participants, setParticipants] = useState([]);\n\n    \n\n    useEffect(() => {\n        const participantConnected = participant => {\n            setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n        const participantDisconnected = participant => {\n            setParticipants(prevParticipants =>\n                prevParticipants.filter(p => p != participant)\n            );\n        };\n        Video.connect(token, {\n            name: roomName\n        }).then(room => {\n            setRoom(room);\n            room.on('participantConnected', participantConnected);\n            room.on('participantDisconnected', participantDisconnected);\n            room.participants.forEach(participantConnected);\n        });\n    \n        return () => {\n            setRoom(currentRoom => {\n                if(currentRoom && currentRoom.localParticipant.state === 'connected') {\n                    currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n                        trackPublication.track.stop();\n                    });\n                    currentRoom.disconnect();\n                    return null;\n                } else {\n                    return currentRoom;\n                }\n            })\n        }\n    }, [roomName, token]);\n\n    const remoteParticipants = participants.map(participant => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n\n    const handleTimeout = () => {\n        handleLogout();\n    }\n\n    return (\n        <Grid container spacing={2} >\n            <Grid item container xs={11}>\n                {\n                    remoteParticipants.length > 3 ? (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={4}>\n                                {participant}\n                            </Grid>\n                        ))\n                    ) : (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={12/remoteParticipants.length}>\n                                {participant}\n                            </Grid>\n                        ))\n                    )\n                }\n            </Grid>\n            <Grid item container xs={1} direction=\"column\" wrap=\"nowrap\">\n                <Card>\n                    <CardContent>\n                        <Typography variant=\"h6\">Room: {subject}</Typography>\n                        <Timer \n                            startTime={new Date(startTime)}\n                            onTimeOut={handleTimeout}\n                        />\n                    </CardContent>\n                    <CardMedia>\n                        {\n                            room ? (\n                                <Participant key={room.localParticipant.sid}\n                                    participant={room.localParticipant}\n                                />\n                            ) : (\n                                \"\"\n                            )\n                        }\n                    </CardMedia>\n                    <CardActions>\n                        <Button variant=\"contained\" onClick={handleLogout}>Exit Lesson</Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Room;","import React, { useState, useCallback, useEffect } from 'react'\nimport Lobby from './Lobby';\nimport axios from 'axios';\nimport Room from './Room';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { endLesson } from '../actions/lessonActions'\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\"\n\n const VideoChat = (props) => {\n    \n    const { lessonID } = props.match.params;\n\n     const [username, setUsername] = useState('');\n     \n     \n     const [roomName, setRoomName] = useState(lessonID);\n     const [token, setToken] = useState(null);\n     const [lesson, setLesson] = useState({});\n    const [loading, setLoading] = useState(true);\n\n     const user = useSelector(state => state.auth.user);\n     \n     \n     console.log(user)\n     //const lesson = useSelector(state => state.lesson.lesson);\n     const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonByID\", { params: { lessonID: lessonID }})\n        .then(res => {\n            setLesson(res.data);\n            setLoading(false);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n\n     const handleUsernameChange = useCallback(event => {\n         setUsername(event.target.value);\n     }, []);\n\n     const handleRoomNameChange = useCallback(event => {\n         setRoomName(event.target.value);\n     }, []);\n\n     const handleSubmit = useCallback(async event => {\n         event.preventDefault();\n\n         console.log(lesson);\n\n        const submissionData = {\n            identity: user.email,\n            lessonID: lessonID,\n            studentID: user.id,\n            studentName: user.name,\n            studentEmail: user.email,\n            startTime: lesson.dateAndTime,\n            subject: lesson.subject\n        };\n\n         axios\n            .post(\"/videoChat/user/token\", submissionData)\n            .then(res => {\n                setToken(res.data)\n            })\n            .catch(err => console.log(err))\n     }, [username, roomName, lesson]);\n\n     const handleLogout = useCallback(event => {\n         setToken(null);\n\n        const submissionData = { lessonID: lessonID}\n\n         axios\n            .post(\"/users/lessonOver\", submissionData)\n            .then(res => {\n                console.log(res);\n                dispatch(endLesson());\n                window.location.href = \"/postLesson/\" + lessonID;\n            })\n            .catch(err => console.log(err));\n         \n\n         //dispatch(endLesson());\n\n     }, []);\n\n     const handleTimeout = () => {\n         console.log('over')\n         handleLogout()\n     }\n\n     let render;\n\n     if(token) {\n         render = (\n             \n                <Room \n                    roomName={roomName} \n                    token={token} \n                    handleLogout={handleLogout} \n                    subject={lesson.subject}\n                    startTime={lesson.dateAndTime}    \n                />\n             \n         );\n     } else {\n         render = (\n             <div>\n                <Lobby \n                    username={user.name}\n                    roomName={lesson.subject}\n                    handleUsernameChange={handleUsernameChange}\n                    handleRoomNameChange={handleRoomNameChange}\n                    handleSubmit={handleSubmit}\n                    date={new Date(lesson.dateAndTime)}\n                />\n             \n             </div>\n             \n         );\n     }\n\n     return (\n         <div>\n             {\n                 loading ? (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                 ) : (\n                     render\n                 )\n             }\n         </div>\n     )\n };\n\n export default VideoChat;","import React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction Posting(props) {\n\n    const tagString = props.tags.reduce((accumulator, tag) => {\n        return accumulator + tag + \", \";\n    }, \"\")\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n                <Typography variant=\"h6\">{tagString}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.selectBid}>Select Bid</Button>\n                <Button variant=\"contained\" onClick={props.onEdit}>Edit Posting</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.onDelete}>Delete Posting</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPosting.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    tags: PropTypes.array.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    selectBid: PropTypes.func.isRequired\n}\n\nexport default Posting;","import React, { Component, useState, useEffect } from 'react'\nimport axios from \"axios\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\"\n\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from 'react-redux';\n\nimport { Link, withRouter } from 'react-router-dom'\n\nimport Grid from \"@material-ui/core/Grid\"\n\nimport Posting from \"./Posting\";\n\n\n\nfunction MyPostings(props) {\n    \n    const [postings, setPostings] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [hasPostings, setHasPostings] = useState(false);\n\n    useEffect(() => {\n        axios\n        .post(\"/users/getPostings\", { studentID: user.id})\n        .then(res => {\n            if(res.data.length > 0) {\n                console.log(res.data)\n                setPostings(res.data);\n                setHasPostings(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const handleDelete = (postingID) => {\n        axios\n        .post(\"/users/deletePosting\", { postingID: postingID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    const handleEdit = (postingID) => {\n        props.history.push(\"/editPosting/\" + postingID);\n    }\n\n    const selectBid = (postingID) => {\n        props.history.push(\"/selectBid/\" + postingID);\n    }\n\n    return (\n        <Grid container spacing={2}>\n            {\n                !loading ? (\n                    postings.map((posting, index) => {\n                        \n                        return (\n                            <Grid item xs={4}>\n                                <Posting \n                                    course={posting.course}\n                                    description={posting.description}\n                                    tags={posting.infoTags}\n                                    onDelete={() => handleDelete(posting._id)}\n                                    onEdit={() => handleEdit(posting._id)}\n                                    selectBid={() => selectBid(posting._id)}\n                                />\n                            </Grid>\n                        )\n                    })\n                    //!hasPostings && <Typography variant=\"h5\">You have no postings, go to the my postings page to get started</Typography>\n                ) : (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                )\n            }\n        </Grid>\n    )\n}\n\nMyPostings.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps\n)(withRouter(MyPostings));","import React from 'react'\nimport { CardElement } from \"@stripe/react-stripe-js\"\n\nconst CARD_ELEMENT_OPTIONS = {\n    hidePostalCode: true,   //should remove needing to enter a postal code\n    style: {\n        base: {\n            color: \"#ffffff\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#ffffff\"\n            },\n        },\n        invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n        },\n    },\n};\n\nfunction CardSection() {\n    return (\n        <label>\n            Card details\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\n        </label>\n    )\n}\n\nexport default CardSection;","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nimport CardSection from \"./CardSection\"\nimport Button from \"@material-ui/core/Button\"\n\nimport PropTypes from \"prop-types\"\n\nimport { useElements, CardElement, useStripe } from \"@stripe/react-stripe-js\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\n\nconst dateOptions = { month: \"long\", weekday: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\" }\n\n\n\nfunction Payment(props) {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [secret, setSecret] = useState(\"\");\n    const [dateString, setDateString] = useState(\"\");\n    useEffect(() => {\n\n        setDateString(props.date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + props.date.toLocaleTimeString(\"en-CA\", timeOptions));\n\n        axios\n        .get(\"/payments/secret\", { params: { cost: props.cost } })\n        .then(res => {\n            setSecret(res.data.client_secret);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Processing Payment...\")\n        if(!stripe || !elements) {\n            console.log('damn');\n            return;\n        }\n\n        const result = await stripe.confirmCardPayment(secret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        });\n\n        console.log(result);\n\n        if(result.error) {\n            console.log(result.error.message);\n        } else {\n            if(result.paymentIntent.status === 'succeeded') {\n                console.log('great success');\n                props.onPay();\n            }\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Paper>\n            <CardSection />\n            <Divider />\n            <Typography variant=\"h5\">Cost: ${props.cost}</Typography>\n            <Typography variant=\"h5\">At: {dateString}</Typography>\n            <Typography variant=\"h5\">For: {props.course}</Typography>\n\n            <Button disabled={!stripe} type=\"submit\">Confirm Order</Button>\n            </Paper>\n        </form>\n    )\n}\n\nPayment.propTypes = {\n    onPay: PropTypes.func.isRequired,\n    date: PropTypes.object.isRequired,\n    cost: PropTypes.number.isRequired,\n    course: PropTypes.string.isRequired\n}\n\nexport default Payment;","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\n\nclass BidCard extends Component {\n    constructor(props){\n        super(props);\n\n    }\n\n    render() {\n        const date = new Date(this.props.date);\n        const dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\n        const timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h5\"> {this.props.tutorName} </Typography>\n                    <Typography variant=\"h6\">Rating: {this.props.tutorRating}</Typography>\n                    <Typography variant=\"h6\">Description: {this.props.tutorDescription}</Typography>\n                    <Typography variant=\"h6\">Date: {date.toLocaleDateString(\"en-US\", dateOptions)}</Typography>\n                    <Typography variant=\"h6\">Time: {date.toLocaleTimeString(\"en-US\", timeOptions)}</Typography>\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.submit}>Book!</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nBidCard.propTypes = {\n    tutorRating: PropTypes.number.isRequired,\n    tutorDescription: PropTypes.string.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    submit: PropTypes.func.isRequired\n}\n\nexport default BidCard;","import React, { Component } from 'react'\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport PropTypes from \"prop-types\"\n\nconst options = {\n    shippingPreference: \"NO_SHIPPING\",\n\n}\n\nclass PayPalBtn extends Component {\n    constructor(props) {\n        super(props)\n\n\n    }\n\n    render() {\n        return (\n            <PayPalButton \n                amount={this.props.amount}\n                currency={\"CAD\"}\n                onSuccess={(details, data) => {\n                    console.log(details);\n                    console.log(data);\n                    this.props.onSuccess();\n                }}\n                shippingPreference=\"NO_SHIPPING\"\n\n                options={{\n                    clientId: \"AQGhRTy5LENUVfn-PHd_7cVGr2yePsvw81VgVuHMelyaYrxjkWQcbOhLrc7QD4dLfOxVScgzPfxUaOfL\",\n                    currency: \"CAD\"\n                }}\n            \n            />\n        );\n    }\n}\n\nPayPalBtn.propTypes = {\n    amount: PropTypes.number.isRequired,\n    onSuccess: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired\n\n}\n\nexport default PayPalBtn;","import React, { Component, useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport Grid from \"@material-ui/core/Grid\"\nimport BidCard from \"./BidCard\"\nimport Payment from \"./Payment\"\nimport PayPalBtn from \"./PayPalBtn\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardSection from \"./CardSection\"\nimport { useElements, CardElement, useStripe } from \"@stripe/react-stripe-js\"\n\n\n\n\nfunction SelectBid(props) {\n    \n    const { postingID } = props.match.params;\n    const [bids, setBids] = useState([]);\n    const [hasBids, setHasBids] = useState(false);\n    const [bidSelected, setBidSelected] = useState({});\n    const [hasSelectedBid, setHasSelectedBid] = useState(false);\n    const [posting, setPosting] = useState({});\n\n    useEffect(() => {\n        axios\n        .post(\"/match/getBids\", { postingID: postingID })\n        .then(res => {\n            setBids(res.data);\n            setHasBids(true);\n        })\n        .catch(err => console.log(err))\n\n        axios\n        .get(\"/match/user/postingByID\", { params: { postingID: postingID } })\n        .then(res => {\n            setPosting(res.data);\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const selectBid = (bid) => {\n        setBidSelected(bid);\n        setHasSelectedBid(true);\n    };\n\n    const onPay = () => {\n        const submissionData = {\n            tutorID: bidSelected.tutorID,\n            dateAndTime: bidSelected.date,\n            tutorName: bidSelected.tutorName,\n            postingID: bidSelected.postingID,\n            tutorEmail: bidSelected.tutorEmail\n        };\n\n        axios\n        .post(\"/match/selectBid\", submissionData)\n        .then(res => {\n            \n            window.location.href = \"/displayLessons\"\n        })\n        .catch(err => console.log(err))\n    }\n\n\n    return(\n        <div>\n        {\n            hasSelectedBid ? (\n                \n                <Payment \n                    onPay={onPay}\n                    cost={posting.cost}\n                    date={new Date(bidSelected.date)}\n                    course={posting.course}\n                />\n            ) : (\n                <div>\n                {\n                    hasBids ? (\n                        <Grid container>\n                        {\n                            bids.map((bid, index) => (\n                                <Grid item xs={4}>\n                                    <BidCard \n                                        tutorRating={bid.tutorRating}\n                                        tutorDescription={bid.tutorDescription}\n                                        tutorName={bid.tutorName}\n                                        index={index}\n                                        date={bid.date}\n                                        submit={() => selectBid(bid)}\n                                    />\n                                </Grid>\n                            ))\n                        }\n                        </Grid>\n                    ) : (\n                        <Typography variant=\"h5\"> Loading... </Typography>\n                    )\n                }\n                </div>\n            )\n        }\n        \n        </div>\n    )\n}\n\nexport default SelectBid;","import React, { useEffect } from 'react'\nimport { useState } from 'react'\n\nimport Select from \"@material-ui/core/Select\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport Button from \"@material-ui/core/Button\"\n\nimport axios from \"axios\"\n\nimport { useSelector } from \"react-redux\"\n\nimport PropTypes from \"prop-types\"\n\nfunction Feedback(props) {\n\n    const { lessonID } = props.match.params;\n\n    const [feedBack, setFeedBack] = useState(\"\");\n    const [rating, setRating] = useState(null);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n    const [lesson, setLesson] = useState({});\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n\n    const [didSubmit, setDidSubmit] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonByID\", { params: { lessonID: lessonID } })\n        .then(res => {\n            setLesson(res.data);\n        }) \n        .catch(err => console.log(err))\n\n        //maybe will work if feedback is not submitted\n        // return function noSubmit() {\n        //     alert(\"did run cleanup\")\n        //     if(!didSubmit) {\n        //         const submissionData = {\n        //             lessonID: lessonID,\n        //             rating: null,\n        //             feedback: \"\",\n        //             studentID: user.id\n        //         };\n\n        //         axios\n        //         .post(\"/tutors/giveFeedback\", submissionData)\n        //         .then(res => {\n        //             alert(\"fuck\")\n        //         })\n        //         .catch(err => console.log(err));\n        //     }\n        // }\n    }, [])\n\n    const handleSelect = (e) => {\n        setRating(e.target.value);\n    };\n\n    const handleChange = (e) => {\n        setFeedBack(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        console.log('a')\n        setHasSubmitted(true);\n        if(rating == null) {\n            alert('You must assign a rating to the tutor')\n        } else {\n            const submissionData = {\n                lessonID: lessonID,\n                rating: rating,\n                feedback: feedBack,\n                studentID: user.id\n            }\n\n            axios\n                .post(\"/tutors/giveFeedback\", submissionData)\n                .then(res => {\n                    console.log(res);\n                    setHasSubmitted(true);\n                    props.history.push(\"/pastLessons\")\n                })\n                .catch(err => console.log(err))\n        }\n    };\n\n    return(\n        <Paper>\n            <Typography variant=\"h5\">Rating: </Typography>\n            <Select value={rating} onChange={handleSelect}>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n            </Select>\n\n            <br />\n            <br />\n\n            <Typography variant=\"h5\">Feedback:</Typography>\n            <br />\n            <TextField onChange={handleChange} value={feedBack} />\n            <br />\n            <br />\n            <Button onClick={handleSubmit} disabled={rating == null}>Submit Feedback</Button>\n\n            \n        </Paper>\n    )\n    \n}\n\n\n\nexport default Feedback;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\n\nfunction PastLesson(props) {\n\n    return(\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">\n                    With: {props.tutorEmail}\n                </Typography>\n                <br />\n                <Typography variant=\"h5\">\n                    On: {props.date}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={props.onRequest}>Request Another Lesson</Button>\n                <Button onClick={props.complain}>File a Complaint</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPastLesson.propTypes = {\n    tutorEmail: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired,\n    onRequest: PropTypes.func.isRequired,\n    complain: PropTypes.func.isRequired\n}\n\nexport default PastLesson;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport Grid from \"@material-ui/core/Grid\"\nimport PastLesson from \"./PastLesson\"\nimport { useSelector } from 'react-redux'\nimport Typography from \"@material-ui/core/Typography\"\n\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\n\nfunction PastLessons(props) {\n\n    //const user = useSelector(state => state.auth.user._id);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [pastLessons, setPastLessons] = useState([]);\n    const [hasPastLessons, setHasPastLessons] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(\"/users/getPastLessons\", { params: { studentID: user.id } })\n            .then(res => {\n                if(res.data.length > 0) {\n                    setPastLessons(res.data);\n                    setHasPastLessons(true)\n                }\n            })\n            .catch(err => console.log(err))\n    }, []);\n\n    const onRequest = (tutorID) => {\n        window.location.href = \"/request/\" + tutorID;\n    };\n\n    const complain = (id) => {\n        window.location.href = \"/complain/\" + id;\n    };\n\n\n\n\n    return(\n        hasPastLessons ? (\n            <Grid container spacing={2}>\n            {\n                pastLessons.map((lesson, index) => {\n                    const date = new Date(lesson.date);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n                    return (\n                        <Grid item xs={4}>\n                            <PastLesson \n                                tutorEmail={lesson.tutorEmail}\n                                date={dateString}\n                                onRequest={() => onRequest(lesson.tutorID)}\n                                complain={() => complain(lesson._id)}\n                            />\n                        </Grid>\n                    )\n\n                    \n                })\n            }\n            </Grid>\n        ) : (\n            <Typography varaint=\"h5\">\n                You have no past lessons, go to the make posting page to get started.\n            </Typography>\n        )\n        \n    )\n}\n\nexport default PastLessons;","import React, { useState, useEffect } from 'react'\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction TutorFinder(props) {\n\n    const [value, setValue] = useState(\"\");\n\n\n    useEffect(() => {\n\n        console.log(props);\n\n        if(props.fromPastLesson) {\n            setValue(props.existingEmail);\n            console.log('a')\n        }\n\n    }, [])\n\n    const updateValue = (e) => {\n        setValue(e.target.value);\n    }\n\n    \n\n    const submitEmail = (e) => {\n        axios\n            .get(\"/tutors/findByEmail\", { params: { email: value } })\n            .then(res => {\n                console.log(res.data);\n                props.onEnter(res.data);\n            })\n            .catch(err => {\n                if(err.response.status === 404) {\n                    alert(\"You entered an incorrect email\")\n                }\n            })\n    }\n\n    return(\n        <Paper>\n            <TextField value={value} onChange={updateValue}></TextField>\n            <Button onClick={submitEmail}>Select</Button>\n        </Paper>  \n    )\n}\n\nTutorFinder.propTypes = {\n    onEnter: PropTypes.func.isRequired,\n    existingEmail: PropTypes.string,\n    fromPastLesson: PropTypes.bool\n}\n\nexport default TutorFinder;","import React, { useState, useEffect } from 'react'\nimport TutorFinder from \"./TutorFinder\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Paper from \"@material-ui/core/Paper\"\nimport MultipleDateTimePicker from \"./MultipleDateTimePicker\"\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AccountFinder from \"./AccountFinder\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nconst groupOptions = [\n    {\n        amount: 2,\n        cost: 45\n    },\n    {\n        amount: 3,\n        cost: 65\n    },\n    {\n        amount: 4,\n        cost: 85\n    },\n    {\n        amount: 5,\n        cost: 105\n    }\n]\n\nconst lessonTypes = [\n    \"SINGLE\",\n    \"GROUP\"\n]\n\n\nfunction LessonRequest(props) {\n\n    const [tutor, setTutor] = useState({});\n    const [description, setDescription] = useState(\"\");\n    const [course, setCourse] = useState(\"\");\n    const [dates, setDates] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [loading, setLoading] = useState(true);\n    const [fromPastLesson, setFromPastLesson] = useState(false);\n    const [type, setType] = useState(\"\");\n    const [otherStudentIDs, setOtherStudentIDs] = useState([]);\n    const [otherStudentEmails, setOtherStudentEmails] = useState([]);\n    const [numberOfParticipants, setNumberOfParticipants] = useState(1);\n\n    const addTutor = (tutorToAdd) => {\n        setTutor(tutorToAdd)\n    };\n\n    const addDate = (dateToAdd) => {\n        setDates(prevState => {\n            return [...prevState, dateToAdd]\n        });\n    }\n\n    const removeDate = (dateToRemove) => {\n        setDates(prevState => {\n            return prevState.filter(date => {\n                return dateToRemove.valueOf() != date.valueOf();\n            });\n        });\n    }\n\n    \n\n    useEffect(() => {\n        if(props.match.params.tutorID) {\n            const { tutorID } = props.match.params;\n            \n\n            axios\n            .get(\"/users/getTutorByID\", { params: { tutorID: tutorID } })\n            .then(res => {\n                console.log(res.data)\n                setFromPastLesson(true);\n                setTutor(res.data);\n                setLoading(false);\n                \n            })\n            .catch(err => console.log(err));\n        } else {\n            setLoading(false);\n        }\n    }, [])\n\n    const sendRequest = () => {\n        const data = {\n            studentID: user.id,\n            studentName: user.name,\n            tutorID: tutor._id,\n            studentEmail: user.email,\n            tutorEmail: tutor.email,\n            availableTimes: dates,\n            course: course,\n            description: description,\n            tutorName: tutor.name,\n            otherStudentEmails: otherStudentEmails,\n            otherStudentIDs: otherStudentIDs,\n            type: type,\n            numberOfParticipants: numberOfParticipants\n        }\n\n        console.log(data)\n\n        axios\n        .post(\"/lesson/addRequest\", data)\n        .then(res => {\n            props.history.push(\"/myRequests\");\n        })\n        .catch(err => console.log(err))\n    }\n\n    const selectType = (e) => {\n        const typeToSet = e.target.value;\n        setType(typeToSet);\n    }\n\n    const addStudent = (student) => {\n        setOtherStudentEmails(prevState => [...prevState, student.email]);\n        setOtherStudentIDs(prevState => [...prevState, student._id]);\n    }\n\n    const deleteStudent = (student) => {\n        setOtherStudentEmails(otherStudentEmails.filter(email => student.email != email));\n        setOtherStudentIDs(otherStudentIDs.filter(id => student._id != id));\n    }\n\n    const selectNumber = (e) => {\n        setNumberOfParticipants(e.target.value);\n    }\n    \n\n    return(\n        <div>\n        {\n            !loading ? (\n                <Grid container spacing={2} direction=\"column\">\n            <Grid item container xs={12} spacing={2}>\n                <Grid item xs={4}>\n                    <Paper>\n                        <Typography variant=\"body1\">Enter Tutor Email and press select</Typography>\n                        <TutorFinder onEnter={addTutor} fromPastLesson={fromPastLesson} existingEmail={tutor.email} />\n\n                        <Typography variant=\"body\">Select lesson Type</Typography>\n                        <Select \n                            onChange={selectType}\n                            value={type}\n                            name=\"LESSON_TYPE\"\n                        >\n                            {\n                                lessonTypes.map(lesson => (\n                                    <MenuItem value={lesson}>LessonType: {lesson}</MenuItem>\n                                ))\n                            }\n                        </Select>\n\n                        {\n                            type === \"GROUP\" ? (\n                                <div>\n                                <Typography variant=\"h5\">Select the number of participants in the group</Typography>\n                                <Select \n                                    onChange={selectNumber}\n                                    value={numberOfParticipants}\n                                    name=\"GROUP_SIZE\"\n                                >\n                                    {\n                                        groupOptions.map(option => (\n                                            <MenuItem value={option.amount}>Participants: {option.amount}, Cost: {option.cost}</MenuItem>\n                                        ))\n                                    }\n\n                                    \n                                </Select>\n                                <Typography variant=\"h5\">Enter the participating account emails</Typography>\n                                <AccountFinder addStudent={addStudent} deleteStudent={deleteStudent} maxEmails={numberOfParticipants - 1} addedEmails={otherStudentEmails} addedStudentIDs={otherStudentIDs} />\n                                </div>\n                            ) : (\n                                \"\"\n                            )\n                        }\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <TextField label=\"Course\" onChange={(e) => setCourse(e.target.value)} value={course} />\n\n                        <br />\n                        <br />\n\n                        <TextField label=\"Description\" fullWidth multiline rows={6} onChange={(e) => setDescription(e.target.value)} value={description} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <MultipleDateTimePicker \n                            addDate={addDate}\n                            removeDate={removeDate}\n                            alreadySelectedDates={dates}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Button fullWidth variant=\"contained\" onClick={sendRequest}>Submit Request</Button>\n            </Grid>\n        </Grid> \n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default LessonRequest;","import React, { useEffect, useState } from 'react'\n//import StripeCheckout from \"react-stripe-checout\";\nimport axios from 'axios';\n\n\nimport CardSection from './CardSection';\nimport Button from \"@material-ui/core/Button\";\n\nimport {Elements, useElements, CardElement, useStripe} from '@stripe/react-stripe-js'\n\n\nfunction RequestPayment(props) {\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const [secret, setSecret] = useState(\"\");\n\n\n    useEffect(() => {\n\n        axios\n        .get(\"/payments/secret\")\n        .then(res => {\n            console.log(res.data.client_secret);\n            setSecret(res.data.client_secret);\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if(!stripe || !elements) {\n            //stripe has not yet loaded, disable form submission until loaded\n            console.log('damn')\n            return;\n        }\n\n        const result = await stripe.confirmCardPayment(secret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        });\n\n        if (result.error) {\n            console.log(result.error.message);\n        } else {\n            if(result.paymentIntent.status === 'succeeded') {\n                //payment has succeeded\n                console.log('great success')\n            }\n        }\n    }\n\n\n    return(\n        \n        <form onSubmit={handleSubmit}>\n            <CardSection />\n            <Button disabled={!stripe} type=\"submit\">Confirm Order</Button>\n        </form>\n        \n    )\n}\n\nexport default RequestPayment;","import React from 'react'\n\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction AccountSettings() {\n    \n\n    return(\n        <div>\n            <Typography variant=\"h5\">These are your account settings</Typography>\n        </div>\n    )\n}\n\nexport default AccountSettings;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction RequestCard(props) {\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h6\">{props.tutorName}</Typography>\n                <Typography variant=\"h6\">{props.tutorEmail}</Typography>\n                <Divider />\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.onCancel}>Cancel</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nRequestCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    times: PropTypes.array.isRequired\n}\n\nexport default RequestCard;","import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport RequestCard from \"./RequestCard\"\n\nfunction MyRequests(props) {\n    \n    const [loading, setLoading] = useState(true);\n    const [requests, setRequests] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [requestsEmpty, setRequestsEmpty] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getRequests\", { params: { studentID: user.id } })\n        .then(res => {\n            setRequests(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n            console.log('damn')\n            setLoading(false);\n            setRequestsEmpty(true);\n        })\n    }, []);\n\n    const cancelRequest = (requestID) => {\n        axios\n        .post(\"/lesson/cancelRequest\", { requestID: requestID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    let display;\n\n    if(!requestsEmpty) {\n        display = \n        (<Grid container spacing={2}>\n        {requests.map(request => \n\n            (\n                <Grid item xs={4}>\n                    <RequestCard \n                        course={request.course}\n                        description={request.description}\n                        times={request.availableTimes}\n                        tutorName={request.tutorName}\n                        tutorEmail={request.tutorEmail}\n                        onCancel={() => cancelRequest(request._id)}\n                    />\n                </Grid>\n            ))}\n            </Grid>)\n        \n    } else {\n        display = <Typography variant=\"h5\">No Pending Requests</Typography>\n    }\n\n    return (\n        <div>\n        {\n            !loading ? (\n                display\n                \n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default MyRequests;","import React, { useEffect, useState } from 'react'\nimport Payment from \"./Payment\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction PayForRequest(props) {\n\n    const { paymentID } = props.match.params;\n    console.log(paymentID);\n\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [lessonConfirm, setLessonConfirm] = useState({});\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonConfirm\", { params: { confirmID: paymentID } })\n        .then(res => {\n            setLessonConfirm(res.data);\n            setLoading(false);\n        })\n    }, []);\n\n    const onPay = () => {\n        axios\n        .post(\"/lesson/setLessonFromConfirm\", { confirmID: paymentID })\n        .then(res => {\n            props.history.push(\"/displayLessons\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n        {\n            !loading ? (\n                <Payment\n                    onPay={onPay}\n                    course={lessonConfirm.subject}\n                    cost={lessonConfirm.cost}\n                    date={new Date(lessonConfirm.dateAndTime)}\n                />\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default PayForRequest;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\n\nfunction PendingPaymentCard(props) {\n    return(\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h6\">With: {props.tutorName}</Typography>\n                <Divider />\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.enterPay}>Pay</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPendingPaymentCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    enterPay: PropTypes.func.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    dateString: PropTypes.string.isRequired\n}\n\nexport default PendingPaymentCard;","import React, { useState, useEffect } from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport PendingPaymentCard from \"./PendingPaymentCard\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"};\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"};\n\nfunction PendingPayments(props) {\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [pendingPayments, setPendingPayments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [hasPendingPayments, setHasPendingPayments] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/pendingPayments\", { params: { studentID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                setPendingPayments(res.data);\n                setHasPendingPayments(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const enterPay = (paymentID) => {\n        props.history.push(\"/pay/\" + paymentID);\n    };\n\n    return (\n        <Grid container spacing={2}>\n        {\n            !loading ? (\n                pendingPayments.map(payment => {\n                    const date = new Date(payment.dateAndTime);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                    return (\n                        <Grid item xs={4}>\n                            <PendingPaymentCard \n                                course={payment.subject}\n                                description={payment.description}\n                                enterPay={() => enterPay(payment._id)}\n                                tutorName={payment.tutorName}\n                                tutorEmail={payment.tutorEmail}\n                                dateString={dateString}\n                            />\n                        </Grid>\n                    )\n                })\n                //!hasPendingPayments && <Typography variant=\"h5\">You have no pending payments. All your upcoming lessons are paid for.</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )   \n        }\n        </Grid>\n    )\n}\n\nexport default PendingPayments;","import React, { useState, useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { useSelector } from \"react-redux\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\nimport Button from \"@material-ui/core/Button\"\nimport axios from \"axios\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\n\n\nconst complaintOptions = [\n    \"Tutor Did Not Show\",\n    \"Tutor Lacked Expertise\",\n    \"Poor Connection\"\n]\n\nfunction Complaint(props) {\n\n    const { pastLessonID } = props.match.params;\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [complaint, setComplaint] = useState(\"\");\n    const [complaintType, setComplaintType] = useState(\"\");\n    const [pastLesson, setPastLesson] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    const handleComplaint = (e) => {\n    \n        setComplaint(e.target.value);\n\n    }\n\n    const handleSelect = (e) => {\n        setComplaintType(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        const submissionData = {\n            pastLessonID: pastLessonID,\n            studentID: user.id,\n            studentEmail: user.email,\n            tutorID: pastLesson.tutorID,\n            tutorEmail: pastLesson.tutorEmail,\n            complaintType: complaintType,\n            complaint: complaint\n        }\n\n        axios\n        .post(\"/users/submitComplaint\", submissionData)\n        .then(res => {\n            props.history.push(\"/ComplaintSuccessful\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getPastLessonByID\", { params: { pastLessonID: pastLessonID } })\n        .then(res => {\n            setPastLesson(res.data);\n            setLoading(false);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">Course: {pastLesson.course}</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        File a Complaint\n                    </Typography>\n                    \n                    <TextField value={complaint} onChange={handleComplaint} fullWidth />\n\n                    <FormControl>\n                       \n                        \n                        <InputLabel>Complaint Type</InputLabel>\n                        <Select \n                            value={complaintType}\n                            onChange={handleSelect}\n                        >\n                            {\n                                complaintOptions.map(complaint => (\n                                    <MenuItem value={complaint}>{complaint}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                        <br />\n                        <Button onClick={handleSubmit}>Submit Complaint</Button>\n                    </FormControl>\n                    \n\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default Complaint;","import React from 'react'\nimport Paper from \"@material-ui/core/Paper\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction ComplaintSuccessful(props) {\n\n    return (\n        <Paper>\n            <Typography variant=\"h5\">Your complaint was submitted successfully</Typography>\n\n            <Button onClick={() => props.history.push(\"/complaints\")} variant=\"contained\">Go to my complaints</Button>\n        </Paper>\n    )\n}\n\nexport default ComplaintSuccessful;","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction ComplaintCard(props) {\n\n    return (\n        <Paper>\n            <Typography variant=\"h5\">With: {props.tutorEmail}</Typography>\n            <Typography variant=\"h5\">Submitted on: {props.dateString}</Typography>\n            <Typography variant=\"h6\">Type: {props.complaintType}</Typography>\n            <Typography variant=\"body1\">{props.complaint}</Typography>\n        </Paper>\n    )\n\n}\n\nComplaintCard.propTypes = {\n    dateString: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    complaintType: PropTypes.string.isRequired,\n    complaint: PropTypes.string.isRequired\n}\n\nexport default ComplaintCard;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport ComplaintCard from \"./ComplaintCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst dateOptions = { month: \"long\", weekday: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction Complaints(props) {\n\n    const [loading, setLoading] = useState(true);\n    const [complaints, setComplaints] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [hasComplaints, setHasComplaints] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getComplaints\", { params: { studentID: user.id } })\n        .then(res => {\n            \n            if(res.data.length > 0) {\n                setComplaints(res.data);\n                setHasComplaints(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    return (\n        <Grid container spacing={2}>\n            {\n                !loading ? (\n                    complaints.map(complaint => {\n                        const date = new Date(complaint.dateSubmitted);\n                        const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                        return (\n                            <Grid item xs={4}>\n                                <ComplaintCard \n                                    dateString={dateString}\n                                    tutorEmail={complaint.tutorEmail}\n                                    complaintType={complaint.complaintType}\n                                    complaint={complaint.complaint}\n                                />\n                            </Grid>\n                        )\n                    }),\n                    !hasComplaints && <Typography variant=\"h5\">You have not filed any complaints, go to your past lessons to file a complaint</Typography>\n                ) : (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                )\n            }\n        </Grid>\n    )\n\n}\n\nexport default Complaints;","import React from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction GettingStarted(props) {\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h3\">Getting Started</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"1.\" />\n                    <CardMedia \n                        image={require(\"../1.png\")}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            First navigate to the register page, once there fill out the form to register.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"2.\" />\n                    <CardMedia \n                        image={require('../2.png')}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Now that you are registered, go to the login page to login with your new account. Enter your email and password to log in.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"3.\" />\n                    <CardMedia \n                        image={require('../3.png')}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Now you should be at the homepage for your account. From here you can navigate the menu by clicking the three lines on the top left of the screen.\n                            From here there are two ways to get lessons. The first is to create a posting for all tutors to see. The other is to request a lesson from a specific tutor. \n                            For the first option see steps 4-6, for the second option see steps 7-10.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"4.\" />\n                    <CardMedia \n                        image={require(\"../5.png\")}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            To make a posting, navigate to the menu and click the Make a Posting option. You will be taken to the posting page.\n                            Once on the posting page enter the required information. The checkboxes are tags that relate to the subject you are posting about, check the ones that apply.\n                            You must select a lesson type, either single or group. If you have chosen a group lesson you will then be asked for the number of participants, and their emails associated with their account.\n                            Next select the times that you are available over the next two weeks.\n                            The description that you enter is very important. It should provide a good description of what you hope to learn during the lesson.\n                            This will ensure that the tutor can be adequately prepared for the lesson.\n                            Next include your year (grade) in school. Then you can click the make posting button.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"5.\" />\n                    <CardMedia \n                        image={require(\"../6.png\")}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Once the lesson posting has been posted, it will be available in the My Postings menu option.\n                            If you enter this page you can view and edit all your requests by clicking the edit request button.\n                            Once the request has been up for a while you can check if any tutors have bid on the lesson by clicking the view bid button.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"6.\" />\n                    <CardMedia \n                        image={require(\"../7.png\")}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            From here you can select the tutor that you want to run your session. Each tutor will have a description about themself, and a rating displayed.\n                            Each tutor will select a time that you set as available.\n                            You will then be taken to the payment page, where you will enter your credit card information to pay for the lesson.\n                            After the lesson has been payed for the lesson will be confirmed. You have up until 24 hours before the lesson to cancel it.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"7.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            To make a request for a specific tutor open the menu and navigate to the Request a Lesson page. \n                            From here you enter the tutors email associated with their account, and click select. If that email does not match a valid tutor email, you will get a warning.\n                            Once a valid tutor email has been entered, enter the course, times, and description as you would with the make a posting.\n                            Remember, a thorough description is important for the quality of lesson a tutor is able to provide. After all this has been entered, press submit.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"8.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            After you have sent the request, wait for the tutor to respond. If they accept a time, or decline, you will recieve an email.\n                            From this email you can click a link to pay for the lesson to finalize it, or navigate to your pending payments on the menu.\n                            Select the pending payment that you want to pay, and it will direct you to a payment page like in the posting. \n                            Fill out your credit card information, and press pay. Now the lesson is confirmed and will be available on the my lessons page.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"9.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            The final way to book a lesson is to request a follow up lesson. This can be done by navigating to the past lessons page on the menu.\n                            Once on the past lessons page click the Request another lesson button that will take you to the same page that the lesson request is made on, with the tutors email already filled in.\n                            From here do what you did with the lesson request.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"10.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Now that you know how to book a lesson, I will go over the process of being in the lesson. First navigate to the my lessons page.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"11.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Once you are on the my lessons page, all of your upcoming lessons will be displayed. You will be able to cancel up to 24 hours before the lesson.\n                            You will be able to enter the lesson five minutes before it's scheduled start time. Once it is available, enter the lobby.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n            <Grid item xs={6}>\n                <Card align=\"left\">\n                    <CardHeader title=\"12.\" />\n                    <CardMedia \n                        image=\"\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                            Now that you are in the lobby, you are free to enter the actual video call any time by pressing the Enter Lesson button.\n                            Once you are in the lesson, there will be a timer indicating the amount of time left in the lesson. There is an overflow time of five minutes passed the end time.\n                            If this ends, the lesson will automatically be ended. You will be taken to a post lesson page to provide feedback to the tutor.\n                            It is required that you provide a rating out of 5, it is not required to write them feedback, however we encourage and appreciate it.\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default GettingStarted;","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: \"#348feb\"\n        },\n        background: {\n            default: \"#FFFFFF\",\n            //paper: \"#348feb\"\n        }\n    },\n    typography: {\n        fontFamily: 'Raleway, Arial'\n    }\n});\n\nexport default theme;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport { setCurrentUser, logoutUser} from \"./actions/authActions\"\n\n\nimport { Provider, useSelector } from \"react-redux\"\nimport store from \"./store\"\n\n\nimport NavBar from \"./components/NavBar\"\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Landing from './components/Landing'\nimport PrivateRoute from \"./components/private-route/PrivateRoute\"\nimport Dashboard from \"./components/StudentDashboard\"\nimport DisplayLessons from \"./components/DisplayLessons\"\nimport MakePosting from \"./components/MakePosting\"\nimport VideoChat from \"./components/VideoChat\"\nimport MyPostings from \"./components/MyPostings\"\nimport Payment from \"./components/Payment\"\nimport SelectBid from \"./components/SelectBid\"\nimport Timer from \"./components/Timer\"\nimport ReBook from \"./components/ReBook\"\nimport PostLesson from \"./components/PostLesson\"\nimport PastLessons from \"./components/PastLessons\"\nimport Grid from \"@material-ui/core/Grid\"\nimport TutorFinder from \"./components/TutorFinder\"\nimport LessonRequest from \"./components/LessonRequest\"\nimport RequestPayment from \"./components/RequestPayment\"\nimport {loadStripe} from '@stripe/stripe-js'\nimport { Elements } from \"@stripe/react-stripe-js\"\nimport Payout from \"./components/Payout\"\nimport AccountSettings from \"./components/AccountSettings\"\nimport MyRequests from \"./components/MyRequests\"\nimport PayForRequest from \"./components/PayForRequest\"\nimport PendingPayments from \"./components/PendingPayments\"\nimport Complaint from \"./components/Complaint\"\nimport ComplaintSuccessful from \"./components/ComplaintSuccessful\"\nimport Complaints from \"./components/Complaints\"\nimport Feedback from \"./components/Feedback\"\n\nimport GettingStarted from \"./components/GettingStarted\"\n\n\nimport Paper from \"@material-ui/core/Paper\"\n\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport theme from \"./theme\"\nimport axios from \"axios\"\naxios.defaults.baseURL = \"/api/\";\nconst drawerWidth = 240;\n\n\n\nconst stripePromise = loadStripe('pk_test_51H7oaAFvYqAjSG5i5XoVmFeBNE7rPgvwrXbA9GNOFuFc6RkCevXgfVMLFTVBmMGRKMH7zwOSqOZiO3KvKxBUztBV00j6fEfFKo');\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginTop: 64\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth,\n  },\n  header: {\n    display: 'flex',\n    alighItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}))\n\nlet isAuthenticated = false;\n\nif(localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n\n    window.location.href = \"./\";\n  } else {\n    isAuthenticated = true;\n  }\n}\n\n\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const [openMenu, setOpenMenu] = useState(false);\n  \n\n  const handleMenu = () => {\n    setOpenMenu(prev => !prev);\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n          \n          <NavBar handleMenu={handleMenu}/>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: openMenu,\n            })}\n          >\n\n          \n          \n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/gettingStarted\" component={GettingStarted} />\n          \n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/displayLessons\" component={DisplayLessons} />\n            <PrivateRoute exact path=\"/makePosting\" component={MakePosting} />\n            <PrivateRoute exact path=\"/videoChat/:lessonID\" component={VideoChat} />\n            <PrivateRoute exact path=\"/myPostings\" component={MyPostings} />\n            <PrivateRoute exact path=\"/editPosting/:postingID\" component={MakePosting} />\n            \n            \n            \n            <PrivateRoute exact path=\"/postLesson/:lessonID\" component={Feedback} />\n            <PrivateRoute exact path=\"/pastLessons\" component={PastLessons} />\n            <PrivateRoute exact path=\"/requestLesson\" component={LessonRequest} />\n            <PrivateRoute exact path=\"/request/:tutorID\" component={LessonRequest} />\n            <PrivateRoute exact path=\"/accountsettings\" component={AccountSettings} />\n            <PrivateRoute exact path=\"/myRequests\" component={MyRequests} />\n            <PrivateRoute exact path=\"/pendingPayments\" component={PendingPayments} />\n            <PrivateRoute exact path=\"/complain/:pastLessonID\" component={Complaint} />\n            <PrivateRoute exact path=\"/complaintSuccessful\" component={ComplaintSuccessful} />\n            <PrivateRoute exact path=\"/complaints\" component={Complaints} />\n            <Elements stripe={stripePromise}>\n              <PrivateRoute exact path=\"/selectBid/:postingID\" component={SelectBid} />\n              <PrivateRoute exact path=\"/pay/:paymentID\" component={PayForRequest} />\n            </Elements>\n          </Switch>\n          \n          \n          </main>\n          </ThemeProvider>\n        </div>\n      </Router>\n    </Provider>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
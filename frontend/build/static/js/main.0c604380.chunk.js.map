{"version":3,"sources":["logo.svg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/lessonReducer.js","reducers/index.js","store.js","components/HomePage.jsx","components/Menu.jsx","components/NavBar.jsx","components/Register.jsx","components/Login.jsx","components/Landing.jsx","components/private-route/PrivateRoute.js","components/StudentDashboard.jsx","actions/lessonActions.js","components/LessonDisplay.jsx","components/DisplayLessons.jsx","components/AccountFinder.jsx","components/MultipleDateTimePicker.jsx","components/TagOptions.jsx","components/MakePosting.jsx","components/Lobby.js","components/Participant.js","components/Timer.jsx","components/Room.js","components/VideoChat.js","components/Posting.jsx","components/MyPostings.jsx","components/CardSection.jsx","components/Payment.js","components/BidCard.jsx","components/PayPalBtn.jsx","components/SelectBid.jsx","components/Feedback.jsx","components/PastLesson.jsx","components/PastLessons.jsx","components/TutorFinder.jsx","components/LessonRequest.jsx","components/RequestPayment.jsx","components/AccountSettings.jsx","components/RequestCard.jsx","components/MyRequests.jsx","components/PayForRequest.jsx","components/PendingPaymentCard.jsx","components/PendingPayments.jsx","components/Complaint.jsx","components/ComplaintSuccessful.jsx","components/ComplaintCard.jsx","components/Complaints.jsx","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","baseURL","setCurrentUser","decoded","type","payload","logoutUser","dispatch","console","log","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","isLesson","lesson","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Component","useStyles","makeStyles","theme","drawer","width","flexShrink","drawerPaper","options","name","path","icon","Home","Create","ListAlt","Archive","PostAdd","Ballot","Payment","Input","withRouter","props","classes","Drawer","anchor","open","variant","className","paper","IconButton","onClick","e","menuState","ChevronLeft","Divider","List","map","option","index","ListItem","button","window","location","href","key","ListItemIcon","ListItemText","primary","accountOptions","appBar","transition","transitions","create","easing","sharp","duration","leavinScreen","appBarShift","marginLeft","easeOut","enteringScreen","connect","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","openAccountMenu","setOpenAccountMenu","useSelector","handleMenu","prev","handleClose","target","id","preventDefault","onLogoutClick","history","push","AppBar","position","clsx","Toolbar","Grid","justify","container","item","xs","edge","color","aria-label","Typography","align","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","selected","Button","Register","email","dateOfBirth","Date","now","password","password2","agreedToTAC","onSubmit","bind","onChange","onDateChange","handleCheckbox","this","setState","checked","nextProps","value","date","newUser","registerUser","alert","Card","CardContent","CardActions","TextField","error","required","label","classnames","invalid","helperText","utils","DateFnsUtils","disableToolBar","format","margin","KeyboardButtonProps","Checkbox","userData","post","then","res","catch","err","response","data","Login","loginUser","emailNotFound","passwordIncorrect","setItem","jwt_decode","Landing","spacing","direction","Paper","component","rest","render","to","StudentDashboard","setCurrentLesson","LessonDisplay","currentDate","subject","dateString","tutorName","description","disabled","getTime","cancelLesson","dateOptions","weekday","month","day","timeOptions","hour","minute","lessons","setLessons","setLoading","setHasLessons","useEffect","get","params","studentID","length","dateAndTime","toLocaleDateString","toLocaleTimeString","lessonID","enterLesson","_id","reload","AccountFinder","users","addedEmails","forEach","addedStudentIDs","currentEmailEntry","addedUsers","handleChange","handleSubmit","deleteStudent","searchData","prevState","addStudent","idToDelete","filter","maxEmails","defaultProps","isEnabled","MultipleDateTimePicker","setCurrentDate","selectedDates","setSelectedDates","dates","alreadySelectedDates","DateTimePicker","minDate","addDate","days","maxDate","weeks","onAccept","dateToAdd","setMilliseconds","setSeconds","includes","prevDates","size","dateToRemove","valueOf","removeDate","DeleteForever","tagOptions","groupOptions","amount","cost","lessonTypes","tags","science","math","english","programming","technology","business","MakePosting","course","setCourse","Map","infoTags","setInfoTags","setDescription","year","setYear","studentName","otherStudentEmails","setOtherStudentEmails","otherStudentIDs","setOtherStudentIDs","setType","numberOfParticipants","setNumberOfParticipants","availableDates","setAvailableDates","numberOfRecurringLessons","setNumberOfRecurringLessons","isEdit","setIsEdit","match","postingID","availableTimes","dateObj","tagKeys","Object","keys","newTags","set","submitNew","chosenTags","submissionData","submitEdit","handleSelect","selector","FormControlLabel","control","Select","student","multiline","rows","fullWidth","style","Lobby","username","roomName","handleUsernameChange","handleRoomNameChange","Participant","participant","videoTracks","setVideoTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","publication","track","audioTracks","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","ref","autoPlay","height","muted","Timer","calculateTimeLeft","getFullYear","finishTime","startTime","difference","timeLeft","Math","floor","hours","minutes","seconds","newDifference","hasSurpassed","setHasSurpassed","onTimeOut","setTimeLeft","setTimeout","Room","handleLogout","room","setRoom","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","Video","currentRoom","localParticipant","tracks","trackPublication","stop","disconnect","remoteParticipants","sid","wrap","CardMedia","VideoChat","setUsername","setRoomName","setToken","setLesson","useDispatch","useCallback","event","identity","studentEmail","Posting","tagString","reduce","accumulator","tag","selectBid","onEdit","onDelete","postings","setPostings","setHasPostings","posting","CARD_ELEMENT_OPTIONS","hidePostalCode","base","fontFamily","fontSmoothing","fontSize","iconColor","CardSection","stripe","useStripe","elements","useElements","secret","setSecret","setDateString","client_secret","confirmCardPayment","payment_method","card","getElement","CardElement","result","message","paymentIntent","status","onPay","BidCard","tutorRating","tutorDescription","submit","SelectBid","bids","setBids","hasBids","setHasBids","bidSelected","setBidSelected","hasSelectedBid","setHasSelectedBid","setPosting","tutorID","tutorEmail","bid","Feedback","feedBack","setFeedBack","rating","setRating","setHasSubmitted","feedback","PastLesson","onRequest","complain","PastLessons","pastLessons","setPastLessons","hasPastLessons","setHasPastLessons","varaint","TutorFinder","setValue","fromPastLesson","existingEmail","onEnter","LessonRequest","tutor","setTutor","setDates","setFromPastLesson","tutorToAdd","typeToSet","RequestPayment","AccountSettings","RequestCard","onCancel","MyRequests","display","requests","setRequests","requestsEmpty","setRequestsEmpty","request","times","requestID","PayForRequest","paymentID","lessonConfirm","setLessonConfirm","confirmID","PendingPaymentCard","enterPay","PendingPayments","pendingPayments","setPendingPayments","setHasPendingPayments","payment","complaintOptions","Complaint","pastLessonID","complaint","setComplaint","complaintType","setComplaintType","pastLesson","setPastLesson","FormControl","InputLabel","ComplaintSuccessful","ComplaintCard","Complaints","complaints","setComplaints","hasComplaints","setHasComplaints","dateSubmitted","createMuiTheme","palette","main","background","default","typography","stripePromise","loadStripe","content","flexGrow","padding","leavingScreen","marginTop","contentShift","header","alighItems","mixins","toolbar","justifyContent","jwtToken","currentTime","exp","App","ThemeProvider","CssBaseline","exact","Dashboard","DisplayLessons","MyPostings","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c604380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\naxios.defaults.baseURL = '/api/'\n\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/users/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const loginUser = userData => dispatch => {\n    \n    axios\n        .post(\"/users/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n\n            const decoded = jwt_decode(token);\n            console.log(decoded);\n\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    console.log(\"logout\")\n    localStorage.removeItem(\"jwtToken\");\n    \n    setAuthToken(false);\n\n    dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_CURRENT_LESSON = \"SET_CURRENT_LESSON\";\nexport const LESSON_LOADING = \"LESSON_LOADING\";","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\"\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isLesson: false,\n    lesson: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SET_CURRENT_LESSON:\n            return {\n                ...state,\n                isLesson: !isEmpty(action.payload),\n                lesson: action.payload\n            };\n        case LESSON_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport lessonReducer from \"./lessonReducer\"\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    lesson: lessonReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)//,\n        //window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        //window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\n\nclass HomePage extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return(\n            <div>\n                <Typography variant=\"h1\">Welcome to the HomePage</Typography>\n            </div>\n        );\n    }\n\n}\n\nexport default HomePage;","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport { withRouter } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { ChevronLeft as ChevronLeftIcon } from \"@material-ui/icons\"\nimport {Create as CreateIcon, Home as HomeIcon, List as ListIcon, ListAlt as ListAltIcon, Archive as ArchiveIcon, PostAdd as PostAddIcon, Ballot as BallotIcon, Payment as PaymentIcon, Input as InputIcon } from \"@material-ui/icons\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    }\n}))\n\nconst options = [\n    {\n        name: \"Home\",\n        path: \"/HomePage\",\n        icon: <HomeIcon />\n    },\n    {\n        name: \"Make Posting\",\n        path: \"/makePosting\",\n        icon: <CreateIcon />\n    },\n    {\n        name: \"My Lessons\",\n        path: \"/displayLessons\",\n        icon: <ListIcon />\n    },\n    {\n        name: \"My Postings\",\n        path: \"/myPostings\",\n        icon: <ListAltIcon />\n    },\n    {\n        name: \"Past Lessons\",\n        path: \"/pastLessons\",\n        icon: <ArchiveIcon />\n    },\n    {\n        name: \"Request a Lesson\",\n        path: \"/requestLesson\",\n        icon: <PostAddIcon />\n    },\n    {\n        name: \"My Requests\",\n        path: \"/myRequests\",\n        icon: <BallotIcon />\n    },\n    {\n        name: \"Pending Payments\",\n        path: \"/pendingPayments\",\n        icon: <PaymentIcon />\n    },\n    {\n        name: \"Complaints\",\n        path: \"/complaints\",\n        icon: <InputIcon />\n    }\n];\n\nfunction Menu(props) {\n    const classes = useStyles();\n\n    const onClick = (path) => {\n        props.menuState();\n        window.location.href = path;\n    };\n\n    const handleClose = (e) => {\n        props.menuState();\n    }\n\n    return (\n        <Drawer anchor=\"left\" open={props.open} variant=\"persistent\" className={classes.drawer} classes={{\n            paper: classes.drawerPaper\n        }}>\n            <div>\n                <IconButton onClick={handleClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n                <Divider />\n            </div>\n            <List>\n                {\n                    options.map((option, index) => {\n                        const { name, path, icon} = option;\n                        return (\n                            <ListItem button onClick={() => onClick(path)} key={path}>\n                                <ListItemIcon>{icon}</ListItemIcon>\n                                <ListItemText primary={name} />\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </Drawer>\n    )\n}\n\n// class Menu extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.onClick = this.onClick.bind(this);\n//     }\n\n//     onClick(path) {\n        \n//         //will switch to window.location.href after done\n//         this.props.menuState();\n//         window.location.href = path;\n//         //this.props.history.push(path);\n        \n      \n//     }\n\n\n//     render() {\n//         return(\n//             <Drawer anchor=\"left\" open={this.props.open}>\n//                 <List>\n//                     {\n//                         options.map((option, index) => {\n//                             const { name, path, icon} = option;\n//                             return (\n//                                 <ListItem button onClick={() => this.onClick(path)} key={path}>\n//                                     <ListItemIcon>{icon}</ListItemIcon>\n//                                     <ListItemText primary={name} />\n//                                 </ListItem>\n//                             )\n//                         })\n//                     }\n//                 </List>\n//             </Drawer>\n//         );\n//     }\n// }\n\nMenu.propTypes = {\n    open: PropTypes.bool.isRequired,\n    menuState: PropTypes.func.isRequired\n}\n\nexport default withRouter(Menu);\n","import React, { Component, useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport Typography from '@material-ui/core/Typography'\nimport { connect, useSelector } from 'react-redux'\nimport PropTypes from \"prop-types\"\nimport { logoutUser } from \"../actions/authActions\"\nimport HomePage from './HomePage'\nimport { Link, withRouter } from 'react-router-dom'\nimport Menu from \"./Menu\"\nimport { Menu as AccountMenu } from \"@material-ui/core\" \nimport clsx from \"clsx\"\nimport Button from \"@material-ui/core/Button\"\n\n\nconst accountOptions = [\n    \"Account Settings\",\n    \"Logout\"\n];\n\nconst studentRoutes = [\n    {\n        name: \"Home\",\n        path: \"./HomePage\",\n        authLevel: 0\n    },\n    {\n        name: \"Search for Tutors\",\n        path: \"./TutorSearch\",\n        authLevel: 0\n    },\n    {\n        name: \"Display Lessons\",\n        path: \"./displayLessons\",\n        authLevel: 0\n    },\n    {\n        name: \"Make Lesson Posting\",\n        path: \"./makePosting\",\n        authLevel: 0\n    },\n    {\n        name: \"My Postings\",\n        path: \"./myPostings\",\n        authLevel: 0\n    }\n];\n\nconst tutorRoutes = [\n    {\n        name: \"Home\",\n        path: \"./HomePage\",\n        authLevel: 0\n    },\n    {\n        name: \"My Students\",\n        path: \"./MyStudents\",\n        authLevel: 0\n    },\n    {\n        name: \"Upcoming Lessons\",\n        path: \"./UpcomingLessons\",\n        authLevel: 0\n    },\n    {\n        name: \"Find Students\",\n        path: \"./FindStudents\",\n        authLevel: 0\n    }\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavinScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }\n}))\n\nfunction NavBar(props) {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openMenu, setOpenMenu] = useState(false);\n    const [openAccountMenu, setOpenAccountMenu] = useState(false);\n\n    const [auth, setAuth] = useState(useSelector(state => state.auth));\n\n    // useEffect(() => {\n\n    //     if(auth.isAuthenticated) {\n    //         console.log(\"menu open\")\n    //         props.setMenu(true);\n    //     } else {\n    //         console.log(\"menu closed\")\n    //         props.setMenu(false);\n    //     }\n\n    // }, [])\n\n    const onLogoutClick = (e) => {\n        e.preventDefault();\n        props.handleMenu();\n        props.logoutUser();\n        //props.history.push(\"/\")\n    }\n\n    const handleAccountMenu = (e) => {\n        setAnchorEl(e.currentTarget);\n        setOpenAccountMenu(true);\n    };\n\n    const handleMenu = (e) => {\n        console.log(auth);\n        setOpenMenu(prev => !prev);\n        props.handleMenu();\n    };\n\n\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n\n        handleMenu();\n        setOpenAccountMenu(false);\n        console.log(e.target.id)\n        if(e.target.id == \"Logout\") {\n            onLogoutClick(e);\n        } else if(e.target.id == \"Account Settings\") {\n            props.history.push(\"/accountSettings\");\n        } else {\n            props.history.push(e.target.id);\n        }\n    };\n\n    return (\n        <AppBar \n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: openMenu\n            })}\n        >\n            <Toolbar>\n                <Grid\n                    justify=\"space-between\"\n                    container\n                >\n                    <Grid item xs={1}>\n                        {\n                            props.auth.isAuthenticated &&\n                            <div>\n                                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleMenu}>\n                                    <MenuIcon />\n                                </IconButton>\n\n                                <Menu open={openMenu} menuState={handleMenu} />\n                            </div>\n                        }\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Typography align=\"left\" variant=\"h4\">4U Academics</Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                        {\n                            props.auth.isAuthenticated ? (\n                            <div>\n                                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Account\" onClick={handleAccountMenu}>\n                                    <AccountCircle />\n                                </IconButton>\n                                <AccountMenu \n                                    id=\"account-menu\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                    open={openAccountMenu}\n                                    onClose={handleClose}\n                                >\n                                    {\n                                        accountOptions.map(option => (\n                                            <MenuItem id={option} key={option} onClick={handleClose} selected={option === \"Pyxis\"}>\n                                                {option}\n                                            </MenuItem> \n                                        ))\n                                    }\n                                </AccountMenu>\n\n                            </div> ) : (\n                                <div>\n                                <Button onClick={() => props.history.push(\"/login\")} variant=\"contained\">Login</Button>\n                                <Button onClick={() => props.history.push(\"/register\")} variant=\"contained\">Register</Button>\n                                </div>\n                            )\n                        }\n                    </Grid>\n                </Grid>\n            </Toolbar>\n            </AppBar>\n    )\n}\n\n// class NavBar extends Component {\n//     constructor() {\n//         super();\n\n//         this.state = {\n//             anchorEl: null,\n//             openMenu: false,\n//             openAccountMenu: false\n//         };\n\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleMenu = this.handleMenu.bind(this);\n//         this.handleClose = this.handleClose.bind(this);\n//         this.handleAccountMenu = this.handleAccountMenu.bind(this);\n\n\n\n//     }\n\n\n//     //const classes = useStyles();\n    \n//     onLogoutClick(e) {\n//         e.preventDefault();\n\n//         this.props.logoutUser();\n//     }\n\n//     handleChange(e) {\n        \n        \n//     }\n\n//     handleAccountMenu(e) {\n//         console.log(this.props.auth.user);\n//         this.setState({\n//             anchorEl: e.currentTarget,\n//             openAccountMenu: true\n//         });\n\n//     }\n\n//     handleMenu(e) {\n//         // this.setState({\n//         //     anchorEl: e.currentTarget,\n//         //     openMenu: true\n//         // });\n\n//         this.setState(prevState => ({\n//             openMenu: !prevState.openMenu\n//         }));\n//     }\n\n//     handleClose(e) {\n//         this.setState({\n//             anchorEl: null,\n//             openMenu: false,\n//             openAccountMenu: false\n//         });\n\n\n\n//         if(e.target.id == \"Logout\") {\n//             this.onLogoutClick(e);\n//         } else if(e.target.id == \"Account Settings\") {\n//             this.props.history.push(\"/accountsettings\")\n//         } else {\n//             this.props.history.push(e.target.id);\n//         }\n//     }\n\n//     render() {\n\n//         return(<div>\n\n//             <AppBar position=\"static\">\n//                 <ToolBar disableGutters>\n//                     <Grid\n//                         justify=\"space-between\"\n//                         container\n//                         direction=\"row\"\n//                     >\n//                         <Grid item xs={1}>\n\n                        \n//                         { this.props.auth.isAuthenticated && \n//                             <div>\n//                             <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.handleMenu}>\n//                                 <MenuIcon />\n\n//                             </IconButton>\n//                             <Menu open={this.state.openMenu} menuState={this.handleMenu} />\n\n//                             </div>\n                                \n//                          }\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                             <Typography align=\"left\" variant=\"h4\">4U Academics</Typography>\n//                         </Grid>\n                        \n//                         <Grid item xs={1}>\n//                         { this.props.auth.isAuthenticated && \n//                         <div>\n//                             <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Account\" onClick={this.handleAccountMenu}>\n//                                 <AccountCircle />\n//                             </IconButton>\n//                             <AccountMenu\n//                                 id=\"account-menu\"\n//                                 anchorEl={this.state.anchorEl}\n//                                 anchorOrigin={{\n//                                     vertical: 'top',\n//                                     horizontal: 'right'\n//                                 }}\n//                                 keepMounted\n//                                 transformOrigin={{\n//                                     vertical: 'top',\n//                                     horizontal: 'right'\n//                                 }}\n//                                 open={this.state.openAccountMenu}\n//                                 onClose={this.handleClose}\n//                             >\n//                                 {accountOptions.map((option) => (\n//                                     <MenuItem id={option} key={option} selected={option === \"Pyxis\"} onClick={this.handleClose}>\n//                                         {option}\n//                                     </MenuItem>\n//                                 ))}\n                               \n\n//                             </AccountMenu>\n//                             </div>\n//                          }\n                            \n//                          </Grid>\n\n//                     </Grid>\n                    \n                    \n                  \n//                 </ToolBar>\n//             </AppBar>\n\n//         </div>);\n        \n//     }\n// }\n\nNavBar.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(withRouter(NavBar));","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport { registerUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            dateOfBirth: Date.now(),\n            password: \"\",\n            password2: \"\",\n            errors: {},\n            agreedToTAC: false\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n    }\n\n    handleCheckbox(e) {\n        this.setState({\n            agreedToTAC: e.target.checked\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onDateChange(date) {\n        this.setState({ dateOfBirth: date });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.agreedToTAC) {\n            const newUser = {\n                name: this.state.name,\n                email: this.state.email,\n                dateOfBirth: this.state.dateOfBirth,\n                password: this.state.password,\n                password2: this.state.password2\n            };\n            this.props.registerUser(newUser, this.props.history);\n        } else {\n            alert(\"You must agree to the terms and conditions to register\")\n        }\n\n        \n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant='h3'>Register</Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography>Register for 4UAcademics</Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.name} onChange={this.onChange} required id=\"name\" label=\"Name\" className={classnames(\"\", {\n                        invalid: errors.name\n                    })} />\n\n                <span className=\"red-text\">{errors.name}</span>\n                    \n\n                    \n                </CardActions>\n                <CardActions>\n                    <TextField error={errors.email} onChange={this.onChange} required id=\"email\" label=\"Email\" helperText=\"Please use a valid Queen's email\" className={classnames(\"\", {\n                        invalid: errors.email\n                    })} />\n                    <span className=\"red-text\">{errors.email}</span>\n                </CardActions>\n\n                <CardActions>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker \n                            disableToolBar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"dateOfBirth\"\n                            label=\"Enter your Date of Birth\"\n                            value={this.state.dateOfBirth}\n                            onChange={this.onDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change-date'\n                            }}\n                        />\n\n                        \n                    </MuiPickersUtilsProvider>\n                </CardActions>\n\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password} onChange={this.onChange} required id=\"password\" label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password\n                    })}/>\n                    <span className=\"red-text\">{errors.password}</span>\n                </CardActions>\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password2} onChange={this.onChange} required id=\"password2\" label=\"Confirm Password\"  className={classnames(\"\", {\n                        invalid: errors.password2\n                    })}/>\n                    <span className=\"red-text\">{errors.password2}</span>\n\n                </CardActions>\n                <CardActions>\n                    <Button type=\"Submit\">Register</Button>\n                </CardActions>\n                <Typography variant=\"h6\">Please agree to the terms and conditions below:</Typography>\n                <Typography variant=\"body1\">These are the example terms and conditions, will need to update later</Typography>\n                <CardActions>\n                    <Checkbox checked={this.state.agreedToTAC} onChange={this.handleCheckbox} color=\"primary\" />\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\n\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\n\nconst styles = {\n    \n}\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h3\">\n                        Login\n                    </Typography>\n                </CardContent>\n                <form onSubmit={this.onSubmit}>\n\n                \n                <CardActions>\n                    <TextField error={errors.email} id=\"email\" onChange={this.onChange} label=\"Email\" helperText=\"Please provide a valid account email\" className={classnames(\"\", {\n                        invalid: errors.email || errors.emailNotFound\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.email}\n                        {errors.emailNotFound}\n                    </span>\n                </CardActions>\n                <CardActions>\n                    <TextField type=\"password\" error={errors.password} id=\"password\" onChange={this.onChange} label=\"Password\" className={classnames(\"\", {\n                        invalid: errors.password || errors.passwordIncorrect\n                    })}/>\n                    <span className=\"red-text\">\n                        {errors.password}\n                        {errors.passwordIncorrect}\n                    </span>\n                </CardActions>\n\n                <CardActions>\n                    <Button type=\"Submit\" variant=\"contained\" color=\"primary\">Login</Button>\n                </CardActions>\n                </form>\n            </Card>\n        );\n    }\n\n\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\n\nfunction Landing(props) {\n    \n    return (\n        <Grid container spacing={2} direction=\"column\">\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        About Us\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        Placeholder\n                    </Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        Getting Started\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        Placeholder\n                    </Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        Tutor of the Week\n                    </Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Landing;","import React, { Component } from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nconst PrivateRoute = ({ component: Component, auth, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { logoutUser } from \"../actions/authActions\"\nimport Typography from \"@material-ui/core/Typography\"\n\nclass StudentDashboard extends Component {\n    constructor(){\n        super();\n    }\n\n    onLogoutClick(e) {\n        e.preventDefault();\n\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <div>\n                <Typography variant=\"h1\">Welcome to the Student Dashboard</Typography>\n            </div>\n        );\n    }\n}\n\nexport default StudentDashboard;","import {\n    SET_CURRENT_LESSON,\n    LESSON_LOADING\n} from './types';\n\nexport const setCurrentLesson = decoded => {\n    return {\n        type: SET_CURRENT_LESSON,\n        payload: decoded\n    };\n};\n\nexport const endLesson = () => dispatch => {\n    dispatch(setCurrentLesson({}));\n};","import React, { Component } from 'react'\n\nimport Card from \"@material-ui/core/Card\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\n\nimport PropTypes from \"prop-types\"\n\nfunction LessonDisplay(props) {\n\n    const currentDate = new Date(Date.now());\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.subject}</Typography>\n                <Typography variant=\"h6\">{props.dateString}</Typography>\n                <Typography variant=\"h6\">With: {props.tutorName}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.onClick} disabled={props.date.getTime() - currentDate.getTime() > 300000}>Enter Lesson</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.cancelLesson}>Cancel</Button>\n            </CardActions>\n        </Card>   \n    )\n}\n\n\nLessonDisplay.propTypes = {\n    dateString: PropTypes.object.isRequired,\n    subject: PropTypes.string.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    cancelLesson: PropTypes.func.isRequired,\n    description: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired\n}\n\nexport default LessonDisplay;","import React, { Component, useState, useEffect } from 'react'\nimport { connect, useSelector } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\"\nimport { setCurrentLesson } from \"../actions/lessonActions\"\n\nimport { Link, withRouter } from \"react-router-dom\"\n\nimport PropTypes from \"prop-types\"\n\nimport LessonDisplay from \"./LessonDisplay\"\n\n\nimport axios from \"axios\";\n\nimport Grid from \"@material-ui/core/Grid\"\n\n\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction DisplayLessons(props) {\n    const [lessons, setLessons] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [loading, setLoading] = useState(true);\n    const [hasLessons, setHasLessons] = useState(false);\n\n    useEffect(() => {\n        // axios\n        // .post(\"/users/getLessons\", { studentID: user.id})\n        // .then(res => {\n        //     if(res.data.length > 0) {\n        //         setLessons(res.data);\n        //         setHasLessons(true);\n        //         setLoading(false);\n        //     } else {\n        //         setLoading(false);\n        //     }\n        // })\n        // .catch(err => console.log(err));\n\n        axios\n        .get(\"/users/getLessons\", { params: { studentID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                console.log(res.data);\n                setLessons(res.data);\n                setHasLessons(true);\n                setLoading(false);\n            } else {\n                setLoading(false)\n            }\n        })\n    }, []);\n\n    const enterLesson = (lessonID, index) => {\n        props.setCurrentLesson(lessons[index]);\n\n        props.history.push(\"/videoChat/\" + lessonID);\n    }\n\n    const cancelLesson = (lessonID) => {\n        axios\n        .post(\"/lesson/student/cancel\", { lessonID: lessonID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <Grid container spacing={2}>\n            { !loading ? (\n                lessons.map((lesson, index) => {\n                    const date = new Date(lesson.dateAndTime);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                    return (\n                        <Grid item xs={4}>\n                            <LessonDisplay \n                                date={dateString}\n                                subject={lesson.subject}\n                                tutorName={lesson.tutorName}\n                                onClick={() => enterLesson(lesson._id, index)}\n                                cancelLesson={() => cancelLesson(lesson._id)}\n                                date={date}\n                            />\n                        </Grid>\n                    )\n                })\n                //!hasLessons && <Typography variant=\"h5\">You have no lessons, make a posting to get started</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n            }\n        </Grid>\n    )\n}\n\nDisplayLessons.propTypes = {\n    auth: PropTypes.object.isRequired,\n    setCurrentLesson: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { setCurrentLesson }\n)(withRouter(DisplayLessons));","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from \"prop-types\"\nimport axios from 'axios';\nimport TextField from \"@material-ui/core/TextField\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nclass AccountFinder extends Component {\n    constructor(props) {\n        super(props);\n\n        let users = [];\n\n        this.props.addedEmails.forEach((value, index) => {\n            users.push({email: value, _id: this.props.addedStudentIDs[index]});\n        });\n\n        this.state = {\n            currentEmailEntry: \"\",\n            addedUsers: users\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.deleteStudent = this.deleteStudent.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({currentEmailEntry: e.target.value});\n    }\n\n    handleSubmit(e) {\n        \n        const searchData = {\n            email: this.state.currentEmailEntry\n        }\n        axios\n            .post(\"/users/findUserByEmail\", searchData)\n            .then(res => {\n                console.log(\"a\")\n                const newUser = {\n                    email: res.data.email,\n                    _id: res.data._id\n                };\n\n                this.setState(prevState => ({\n                    addedUsers: [...prevState.addedUsers, newUser],\n                    currentEmailEntry: \"\"\n                }));\n\n                this.props.addStudent(newUser); \n\n            })\n            .catch(err => {\n                // if(err.response.data.userNotFound) {\n                //     alert(err.response.data.userNotFound)\n                // } else {\n                //     alert(\"The server encountered an unknown error, try refreshing the page\")\n                // }         \n                console.log(err);\n            })\n    }\n\n    deleteStudent(user) {\n        //e.preventDefault();\n        const idToDelete = user._id;\n        \n        this.setState(prevState => ({\n            addedUsers: prevState.addedUsers.filter((value, index) => {\n                return value._id != idToDelete;\n            })\n        }));\n        this.props.deleteStudent(user);\n    }  \n\n    \n\n    render()  {\n        return(\n            <div>\n                {\n                    this.state.addedUsers.map(user => (\n                       \n                        <div>\n                            \n                            <Typography variant=\"h6\">{user.email}</Typography>\n                            \n                            <IconButton aria-label=\"delete\" onClick={() => this.deleteStudent(user)}>\n                                <DeleteIcon />\n                            </IconButton>\n                            \n                        </div>\n                        \n                    ))\n                }\n                <TextField disabled={this.props.maxEmails <= this.state.addedUsers.length } value={this.state.currentEmailEntry} onChange={this.handleChange} />\n                <Button onClick={this.handleSubmit}>Add</Button>\n            </div>\n        );\n    }\n}\n\nAccountFinder.propTypes = {\n    addStudent: PropTypes.func.isRequired,\n    deleteStudent: PropTypes.func.isRequired,\n    maxEmails: PropTypes.number,\n    addedEmails: PropTypes.array,\n    addedStudentIDs: PropTypes.array\n};\nAccountFinder.defaultProps = {\n    isEnabled: true\n}\n\nexport default AccountFinder;","import React, { Component, useState, useEffect } from 'react'\nimport { Calendar } from \"@material-ui/pickers\"\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { TimePicker } from \"@material-ui/pickers\";\nimport { isThisHour } from 'date-fns/esm';\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { DateTimePicker } from \"@material-ui/pickers\"\nimport PropTypes from \"prop-types\"\nimport addDate from \"date-fns/add\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { DeleteForever as DeleteForeverIcon } from \"@material-ui/icons/\"\nimport { createMuiTheme } from \"@material-ui/core\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\" };\nconst timeOptions = { hour: 'numeric', minute: 'numeric' };\n\n\n\nfunction MultipleDateTimePicker(props) {\n\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [selectedDates, setSelectedDates] = useState([]);\n\n    const handleDate = (e) => {\n        console.log(\"date handled\")\n        setCurrentDate(e);\n        \n    };\n\n    useEffect(() => {\n        let dates = [];\n\n        props.alreadySelectedDates.forEach((value, index) => {\n            dates.push(new Date(value));\n        });\n\n        setSelectedDates(dates);\n    }, []);\n\n    const addDateToArray = (date) => {\n        let dateToAdd = new Date(date);\n\n        dateToAdd.setMilliseconds(0);\n        dateToAdd.setSeconds(0);\n\n        if(selectedDates.includes(dateToAdd)) {\n\n        } else {\n            setSelectedDates(prevDates => [...prevDates, dateToAdd]);\n            props.addDate(dateToAdd);\n        }\n    }\n\n     \n\n    const removeDate = (dateToRemove) => {\n\n        \n\n        setSelectedDates(selectedDates.filter(date => dateToRemove.valueOf() != date.valueOf()));\n        props.removeDate(dateToRemove);\n    }\n\n    return (\n        <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker onChange={handleDate} minDate={addDate(Date.now(), {days:1})} maxDate={addDate(Date.now(), {weeks: 2, days: 1})} value={currentDate} onAccept={addDateToArray}/>\n                \n            </MuiPickersUtilsProvider>\n            {console.log(selectedDates)};\n            {\n                \n                selectedDates.map((date, index) => (\n                    <div>\n                        <Typography variant=\"h5\">{date.toLocaleDateString(\"en-CA\", dateOptions)} at {date.toLocaleTimeString(\"en-CA\", timeOptions)}</Typography>\n\n                        <IconButton aria-label=\"delete\" size=\"small\" onClick={() => removeDate(date)}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </div>\n                ))\n            }\n        </div>\n    )\n\n}\n\nMultipleDateTimePicker.propTypes = {\n    addDate: PropTypes.func.isRequired,\n    removeDate: PropTypes.func.isRequired,\n    alreadySelectedDates: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default MultipleDateTimePicker;","import React, { Component } from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nconst tagOptions = [\n    {\n        name: \"Science\",\n        checked: false,\n        key: 'science'\n    },\n    {\n        name: \"Math\",\n        checked: false,\n        key: 'math'\n    },\n    {\n        name: \"English\",\n        checked: false,\n        key: 'english'\n    },\n    {\n        name: \"Programming\",\n        checked: false,\n        key: 'programming'\n    },\n    {\n        name: \"Technology\",\n        checked: false,\n        key: 'technology'\n    },\n    {\n        name: \"Business\",\n        checked: false,\n        key: 'business'\n    }\n];\n\nclass TagOptions extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(\n            <Grid container>\n                <FormControl>\n                <FormLabel component=\"legend\">Choose related tags about the course</FormLabel>\n                {\n                    tagOptions.map((option, index) => {\n                        const { name, checked, key} = option;\n\n                        return (\n                            <Grid item>\n                                <FormControlLabel control={<Checkbox color=\"primary\" />} label={index} />\n                            </Grid>\n                        )\n                    })\n                }\n                </FormControl>\n            </Grid>\n        );\n    }\n}\n\nexport default TagOptions;","import React, { Component, useState, useEffect } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from \"prop-types\"\nimport TextField from \"@material-ui/core/TextField\"\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport AccountFinder from \"./AccountFinder\"\n\nimport classnames from \"classnames\"\n\nimport Button from \"@material-ui/core/Button\"\n\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\"\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport spacing from \"@material-ui/system/spacing\"\n\nimport MultipleDateTimePicker from \"./MultipleDateTimePicker\"\n\nimport isEmpty from \"is-empty\";\n\nimport Paper from \"@material-ui/core/Paper\"\n\nimport { Link, withRouter } from \"react-router-dom\"\n\nimport TagOptions from \"./TagOptions\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker\n} from '@material-ui/pickers'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport errorReducers from '../reducers/errorReducers'\n\nimport axios from \"axios\"\n\n\n\nconst recurringOptions = [\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8\n];\n\nconst tagOptions = [\n    {\n        name: \"Science\",\n        checked: false,\n        key: 'science'\n    },\n    {\n        name: \"Math\",\n        checked: false,\n        key: 'math'\n    },\n    {\n        name: \"English\",\n        checked: false,\n        key: 'english'\n    },\n    {\n        name: \"Programming\",\n        checked: false,\n        key: 'programming'\n    },\n    {\n        name: \"Technology\",\n        checked: false,\n        key: 'technology'\n    },\n    {\n        name: \"Business\",\n        checked: false,\n        key: 'business'\n    }\n];\n\nconst groupOptions = [\n    {\n        amount: 2,\n        cost: 45\n    },\n    {\n        amount: 3,\n        cost: 65\n    },\n    {\n        amount: 4,\n        cost: 85\n    },\n    {\n        amount: 5,\n        cost: 105\n    }\n];\n\nconst lessonTypes = [\n    \"SINGLE\",\n    \"GROUP\"\n];\n\nconst tags = {\n    science: false,\n    math: false,\n    english: false,\n    programming: false,\n    technology: false,\n    business: false\n};\n    \n\n\n\n\nfunction MakePosting(props) {\n\n    \n\n    const [studentID, setStudentID] = useState(useSelector(state => state.auth.user.id)); //meh\n    const [course, setCourse] = useState(\"\");\n    const [infoTags, setInfoTags] = useState(new Map()); //meh\n    const [description, setDescription] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [studentName, setStudentName] = useState(useSelector(state => state.auth.user.name)); //meh\n    const [otherStudentEmails, setOtherStudentEmails] = useState([]);\n    const [otherStudentIDs, setOtherStudentIDs] = useState([]);\n    const [type, setType] = useState(\"\");\n    const [numberOfParticipants, setNumberOfParticipants] = useState(1);\n    const [availableDates, setAvailableDates] = useState([]);\n    const [numberOfRecurringLessons, setNumberOfRecurringLessons] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [isEdit, setIsEdit] = useState(false);\n\n\n    useEffect(() => {\n        \n        \n        if(props.match.params.postingID) {\n            console.log(\"isEdit\")\n            const { postingID } = props.match.params;\n\n            axios\n            .get(\"/match/user/postingByID\", { params: { postingID: postingID } })\n            .then(res => {\n                const { data } = res;\n                \n                setCourse(data.course);\n                \n                setDescription(data.description);\n                setYear(data.year);\n                setOtherStudentEmails(data.otherStudentEmails);\n                setOtherStudentIDs(data.otherStudentIDs);\n                setType(data.type);\n                setNumberOfParticipants(data.numberOfParticipants);\n                \n\n                let dates = [];\n\n                data.availableTimes.forEach(date => {\n                    let dateObj = new Date(date);\n                    dates.push(dateObj);\n                });\n\n\n                setAvailableDates(dates);\n\n\n                const tagKeys = Object.keys(tags);\n                let newTags = new Map();\n                tagKeys.forEach((key) => {\n                    if(data.infoTags.includes(key)) {\n                        setInfoTags(infoTags.set(key, true))\n                    }\n                });\n\n                setInfoTags(new Map(infoTags))\n                setIsEdit(true);\n                \n                console.log(newTags);\n                \n                console.log(infoTags);\n                setLoading(false);\n            }) \n            .catch(err => console.log(err));\n        } else {\n            setLoading(false);\n        }\n    }, [])\n\n    const submitNew = () => {\n        const chosenTags = [];\n\n        infoTags.forEach((value, key) => {\n            if(value) chosenTags.push(key);\n        });\n\n        const submissionData = {\n            studentID: studentID,\n            course: course,\n            description: description,\n            year: year,\n            studentName: studentName,\n            infoTags: chosenTags,\n            type: type,\n            availableTimes: availableDates,\n            otherStudentIDs: otherStudentIDs,\n            numberOfParticipants: numberOfParticipants,\n            numberOfRecurringLessons: numberOfRecurringLessons,\n            otherStudentEmails: otherStudentEmails\n        };\n\n        axios\n        .post(\"/match/addPosting\", submissionData)\n        .then(res => {\n            props.history.push('/myPostings');\n        })\n        .catch(err => console.log(err));\n    }\n\n    const submitEdit = () => {\n        const chosenTags = [];\n\n        infoTags.forEach((value, key) => {\n            if(value) chosenTags.push(key);\n        });\n\n        const submissionData = {\n            studentID: studentID,\n            course: course,\n            description: description,\n            year: year,\n            studentName: studentName,\n            infoTags: chosenTags,\n            postingID: props.match.params.postingID,\n            type: type,\n            availableTimes: availableDates,\n            otherStudentIDs: otherStudentIDs,\n            numberOfParticipants: numberOfParticipants,\n            numberOfRecurringLessons: numberOfRecurringLessons,\n            otherStudentEmails: otherStudentEmails\n        };\n\n        console.log(submissionData);\n\n        axios\n        .post(\"/match/editPosting\", submissionData)\n        .then(res => {\n           // props.history.push('/myPostings');\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleCourse = (e) => {\n        setCourse(e.target.value);\n    }\n\n    const handleDescription = (e) => {\n        setDescription(e.target.value);\n    }\n\n    const handleYear = (e) => {\n        setYear(e.target.value);\n    }\n    \n    //need to fix\n    const handleCheckbox = (e) => {\n        const { id, checked } = e.target;\n        setInfoTags(new Map(infoTags.set(id, checked)))\n    }\n\n    const handleSelect = (e) => {\n        const selector = e.target.name;\n        const { value } = e.target;\n\n        switch(selector) {\n            case \"LESSON_TYPE\":\n                setType(value);\n                break;\n            case \"GROUP_SIZE\":\n                setNumberOfParticipants(value);\n                break;\n            case \"RECURRING_NUMBER\":\n                setNumberOfRecurringLessons(value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const addStudent = (student) => {\n        console.log(otherStudentEmails);\n        setOtherStudentEmails(prevState => [...prevState, student.email]);\n        setOtherStudentIDs(prevState => [...prevState, student._id]);\n    };\n\n\n    //May need to fix\n    const deleteStudent = (student) => {\n        // setOtherStudentEmails(prevState => {\n        //     prevState.filter((email, index) => {\n        //         return email != student.email;\n        //     });\n        // });\n\n        // setOtherStudentIDs(prevState => {\n        //     prevState.filter((id, index) => {\n        //         return id != student._id;\n        //     });\n        // });\n        setOtherStudentEmails(otherStudentEmails.filter(email => student.email != email));\n        setOtherStudentIDs(otherStudentIDs.filter(id => student._id != id));\n        \n    }\n\n    const addDate = (dateToAdd) => {\n        setAvailableDates(prevDates => [...prevDates, dateToAdd]);\n    };\n\n    \n\n    const removeDate = (dateToRemove) => {\n        setAvailableDates(availableDates.filter(date => dateToRemove.valueOf() != date.valueOf()));\n    }\n\n    return (\n        <div>\n        {\n            loading ? (\n                <Typography variant=\"h5\">Loading...</Typography>\n            ) : (\n                <div>\n            <Typography variant=\"h3\">Make a Posting for a Tutor</Typography>\n            <form onSubmit={isEdit ? submitEdit : submitNew}>\n                <TextField value={course} onChange={handleCourse} required id=\"course\" label=\"Course\" />\n\n                {\n                    \n                    tagOptions.map(option => (\n                        \n                        <FormControlLabel\n                            control={<Checkbox name={option.name} id={option.key} checked={infoTags.get(option.key)} onChange={handleCheckbox} />}\n                            label={option.name}\n                        />\n                    ))\n                }\n\n                <Typography variant=\"h4\">Select Lesson Type:</Typography>\n                <Select\n                    onChange={handleSelect}\n                    value={type}\n                    name=\"LESSON_TYPE\"\n                >\n                    {\n                        lessonTypes.map(lesson => (\n                            <MenuItem value={lesson}>LessonType: {lesson}</MenuItem>\n                        ))\n                    }\n                </Select>\n\n                {\n                    (type === \"GROUP\"\n                        ?\n                        (\n                            <div>\n\n                            <Typography variant=\"h4\">Select Number of Participants: </Typography>\n                            <Select\n                                onChange={handleSelect}\n                                value={numberOfParticipants}\n                                name=\"GROUP_SIZE\"\n                            >\n                                {\n                                    groupOptions.map(option => (\n                                    <MenuItem value={option.amount}>Participants: {option.amount}, Cost: {option.cost}</MenuItem>\n                                ))\n                                }\n\n                            </Select>\n                            <Typography variant=\"h4\">Enter the participants emails associated with their account</Typography>\n                            <AccountFinder addStudent={addStudent} deleteStudent={deleteStudent} maxEmails={numberOfParticipants - 1} addedEmails={otherStudentEmails} addedStudentIDs={otherStudentIDs} />\n                            </div>\n\n                        ) : null\n                    )\n                }\n\n                <Typography variant=\"h4\">Select the times you are available:</Typography>\n\n                <MultipleDateTimePicker addDate={addDate} removeDate={removeDate} alreadySelectedDates={availableDates} />\n\n                <TextField value={description} onChange={handleDescription} multiline rows={5} required id=\"description\" label=\"Description\" fullWidth style={{ margin: 8 }} />\n\n                <TextField value={year} onChange={handleYear} required id=\"year\" label=\"Year\" />\n\n                {\n                    isEdit ? (\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitEdit}>Edit Posting</Button>\n                    ) : (\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitNew}>Submit Posting</Button>\n                    )\n                }\n            </form>\n        </div>\n            )\n        }\n        </div>\n        \n    )\n}\n\nexport default MakePosting;","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nconst Lobby = ({\n    username,\n    handleUsernameChange,\n    roomName,\n    handleRoomNameChange,\n    handleSubmit,\n    date,\n    description\n}) => {\n    return(\n        <Paper>\n        <form onSubmit={handleSubmit}>\n            <Typography variant=\"h4\">\n                Welcome {username} to the lesson lobby. Your lesson is scheduled to begin at \n                {date.toLocaleTimeString(\"en-CA\", timeOptions)}. Click the Begin Lesson Button to enter the lesson.\n            </Typography>\n            <Typography variant=\"h5\">Course: {roomName}</Typography>\n\n            <Button type=\"submit\">Begin Lesson</Button>\n\n        </form>\n        </Paper>\n    );\n};\n\nexport default Lobby;","import React, { useState, useEffect, useRef } from 'react'\n\nimport { Player } from \"video-react\"\n\nimport \"./VideoStyle.css\"\n\n\n\nconst Participant = ({ participant }) => {\n    const [videoTracks, setVideoTracks] = useState([]);\n    const [audioTracks, setAudioTracks] = useState([]);\n\n    const videoRef = useRef();\n    const audioRef = useRef();\n\n    const trackpubsToTracks = trackMap => Array.from(trackMap.values())\n        .map(publication => publication.track)\n        .filter(track => track !== null);\n\n    useEffect(() => {\n        const trackSubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => [...videoTracks, track]);\n            } else {\n                setAudioTracks(audioTracks => [...audioTracks, track]);\n            }\n        };\n\n        const trackUnsubscribed = track => {\n            if(track.kind === 'video') {\n                setVideoTracks(videoTracks => videoTracks.filter(v => v!== track));\n            } else {\n                setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n            }\n        };\n\n        setVideoTracks(trackpubsToTracks(participant.videoTracks));\n        setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n        participant.on('trackSubscribed', trackSubscribed);\n        participant.on('trackUnsubscribed', trackUnsubscribed);\n\n        return () => {\n            setVideoTracks([]);\n            setAudioTracks([]);\n            participant.removeAllListeners();\n        };\n    }, [participant]);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if(videoTrack) {\n            videoTrack.attach(videoRef.current);\n            return () => {\n                videoTrack.detach();\n            };\n        }\n    }, [videoTracks]);\n\n    return (\n        <div className=\"participant\">\n           \n            <video ref={videoRef} autoPlay={true} height=\"100%\" width=\"100%\" />\n            \n            <audio ref={audioRef} autoPlay={true} muted={true}/>\n        </div>\n    );\n};\n\nexport default Participant;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction Timer(props) {\n    const calculateTimeLeft = () => {\n        \n        let year = new Date().getFullYear();\n\n        //Adds 1 hour to the start time in milliseconds\n        let finishTime = props.startTime.getTime() + 3600000;\n        console.log(props.startTime)\n        \n\n        const difference = +new Date(finishTime) - +new Date();\n\n        let timeLeft = {};\n\n        console.log(difference)\n\n        if(difference > 0) {\n            timeLeft = {\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n\n            console.log(timeLeft);\n        } else if(difference > -300000) {\n            const newDifference = +new Date(finishTime + 300000) - +new Date();\n            timeLeft = {\n                hours: Math.floor((newDifference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((newDifference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60) + 60\n            }\n\n            if(!hasSurpassed) {\n                setHasSurpassed(true);\n            }\n        } else if(difference < -300000) {\n            props.onTimeOut();\n        }\n\n        return timeLeft;\n    }\n    \n    const [hasSurpassed, setHasSurpassed] = useState(false)\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    \n\n    useEffect(() => {\n        setTimeout(() => {\n            setTimeLeft(calculateTimeLeft());\n        }, 1000)\n    })\n\n    return (\n        <div>\n            <Paper>\n                <Typography variant=\"body1\">Time Left: {timeLeft.hours}:{timeLeft.minutes}:{timeLeft.seconds}</Typography>\n            </Paper>\n        </div>\n    );\n}\n\nTimer.propTypes = {\n    startTime: PropTypes.object.isRequired,\n    onTimeOut: PropTypes.func.isRequired\n}\n\nTimer.defaultProps = {\n    startTime: new Date(Date.now())\n}\n\nexport default Timer;","import React, { useState, useEffect } from 'react'\nimport Video from 'twilio-video';\nimport Participant from './Participant'\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Card from \"@material-ui/core/Card\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/styles/\"\n\nimport \"./ParticipantGrid.css\"\n\n\nconst Room = ({ roomName, token, handleLogout, subject, startTime}) => {\n    const [room, setRoom] = useState(null);\n    const [participants, setParticipants] = useState([]);\n\n    \n\n    useEffect(() => {\n        const participantConnected = participant => {\n            setParticipants(prevParticipants => [...prevParticipants, participant]);\n        };\n        const participantDisconnected = participant => {\n            setParticipants(prevParticipants =>\n                prevParticipants.filter(p => p != participant)\n            );\n        };\n        Video.connect(token, {\n            name: roomName\n        }).then(room => {\n            setRoom(room);\n            room.on('participantConnected', participantConnected);\n            room.on('participantDisconnected', participantDisconnected);\n            room.participants.forEach(participantConnected);\n        });\n    \n        return () => {\n            setRoom(currentRoom => {\n                if(currentRoom && currentRoom.localParticipant.state === 'connected') {\n                    currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n                        trackPublication.track.stop();\n                    });\n                    currentRoom.disconnect();\n                    return null;\n                } else {\n                    return currentRoom;\n                }\n            })\n        }\n    }, [roomName, token]);\n\n    const remoteParticipants = participants.map(participant => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n\n    const handleTimeout = () => {\n        handleLogout();\n    }\n\n    return (\n        <Grid container spacing={2} >\n            <Grid item container xs={11}>\n                {\n                    remoteParticipants.length > 3 ? (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={4}>\n                                {participant}\n                            </Grid>\n                        ))\n                    ) : (\n                        remoteParticipants.map(participant => (\n                            <Grid item xs={12/remoteParticipants.length}>\n                                {participant}\n                            </Grid>\n                        ))\n                    )\n                }\n            </Grid>\n            <Grid item container xs={1} direction=\"column\" wrap=\"nowrap\">\n                <Card>\n                    <CardContent>\n                        <Typography variant=\"h6\">Room: {subject}</Typography>\n                        <Timer \n                            startTime={new Date(startTime)}\n                            onTimeOut={handleTimeout}\n                        />\n                    </CardContent>\n                    <CardMedia>\n                        {\n                            room ? (\n                                <Participant key={room.localParticipant.sid}\n                                    participant={room.localParticipant}\n                                />\n                            ) : (\n                                \"\"\n                            )\n                        }\n                    </CardMedia>\n                    <CardActions>\n                        <Button variant=\"contained\" onClick={handleLogout}>Exit Lesson</Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Room;","import React, { useState, useCallback, useEffect } from 'react'\nimport Lobby from './Lobby';\nimport axios from 'axios';\nimport Room from './Room';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { endLesson } from '../actions/lessonActions'\nimport Timer from \"./Timer\"\nimport Typography from \"@material-ui/core/Typography\"\n\n const VideoChat = (props) => {\n    \n    const { lessonID } = props.match.params;\n\n     const [username, setUsername] = useState('');\n     \n     \n     const [roomName, setRoomName] = useState(lessonID);\n     const [token, setToken] = useState(null);\n     const [lesson, setLesson] = useState({});\n    const [loading, setLoading] = useState(true);\n\n     const user = useSelector(state => state.auth.user);\n     \n     \n     console.log(user)\n     //const lesson = useSelector(state => state.lesson.lesson);\n     const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonByID\", { params: { lessonID: lessonID }})\n        .then(res => {\n            setLesson(res.data);\n            setLoading(false);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n\n     const handleUsernameChange = useCallback(event => {\n         setUsername(event.target.value);\n     }, []);\n\n     const handleRoomNameChange = useCallback(event => {\n         setRoomName(event.target.value);\n     }, []);\n\n     const handleSubmit = useCallback(async event => {\n         event.preventDefault();\n\n         console.log(lesson);\n\n        const submissionData = {\n            identity: user.email,\n            lessonID: lessonID,\n            studentID: user.id,\n            studentName: user.name,\n            studentEmail: user.email,\n            startTime: lesson.dateAndTime,\n            subject: lesson.subject\n        };\n\n         axios\n            .post(\"/videoChat/user/token\", submissionData)\n            .then(res => {\n                setToken(res.data)\n            })\n            .catch(err => console.log(err))\n     }, [username, roomName, lesson]);\n\n     const handleLogout = useCallback(event => {\n         setToken(null);\n\n        const submissionData = { lessonID: lessonID}\n\n         axios\n            .post(\"/users/lessonOver\", submissionData)\n            .then(res => {\n                console.log(res);\n                dispatch(endLesson());\n                window.location.href = \"/postLesson/\" + lessonID;\n            })\n            .catch(err => console.log(err));\n         \n\n         //dispatch(endLesson());\n\n     }, []);\n\n     const handleTimeout = () => {\n         console.log('over')\n         handleLogout()\n     }\n\n     let render;\n\n     if(token) {\n         render = (\n             \n                <Room \n                    roomName={roomName} \n                    token={token} \n                    handleLogout={handleLogout} \n                    subject={lesson.subject}\n                    startTime={lesson.dateAndTime}    \n                />\n             \n         );\n     } else {\n         render = (\n             <div>\n                <Lobby \n                    username={user.name}\n                    roomName={lesson.subject}\n                    handleUsernameChange={handleUsernameChange}\n                    handleRoomNameChange={handleRoomNameChange}\n                    handleSubmit={handleSubmit}\n                    date={new Date(lesson.dateAndTime)}\n                />\n             \n             </div>\n             \n         );\n     }\n\n     return (\n         <div>\n             {\n                 loading ? (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                 ) : (\n                     render\n                 )\n             }\n         </div>\n     )\n };\n\n export default VideoChat;","import React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction Posting(props) {\n\n    const tagString = props.tags.reduce((accumulator, tag) => {\n        return accumulator + tag + \", \";\n    }, \"\")\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"body1\">{props.description}</Typography>\n                <Typography variant=\"h6\">{tagString}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.selectBid}>Select Bid</Button>\n                <Button variant=\"contained\" onClick={props.onEdit}>Edit Posting</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.onDelete}>Delete Posting</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPosting.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    tags: PropTypes.array.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    selectBid: PropTypes.func.isRequired\n}\n\nexport default Posting;","import React, { Component, useState, useEffect } from 'react'\nimport axios from \"axios\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\"\n\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from 'react-redux';\n\nimport { Link, withRouter } from 'react-router-dom'\n\nimport Grid from \"@material-ui/core/Grid\"\n\nimport Posting from \"./Posting\";\n\n\n\nfunction MyPostings(props) {\n    \n    const [postings, setPostings] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [hasPostings, setHasPostings] = useState(false);\n\n    useEffect(() => {\n        axios\n        .post(\"/users/getPostings\", { studentID: user.id})\n        .then(res => {\n            if(res.data.length > 0) {\n                console.log(res.data)\n                setPostings(res.data);\n                setHasPostings(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const handleDelete = (postingID) => {\n        axios\n        .post(\"/users/deletePosting\", { postingID: postingID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    const handleEdit = (postingID) => {\n        props.history.push(\"/editPosting/\" + postingID);\n    }\n\n    const selectBid = (postingID) => {\n        props.history.push(\"/selectBid/\" + postingID);\n    }\n\n    return (\n        <Grid container spacing={2}>\n            {\n                !loading ? (\n                    postings.map((posting, index) => {\n                        \n                        return (\n                            <Grid item xs={4}>\n                                <Posting \n                                    course={posting.course}\n                                    description={posting.description}\n                                    tags={posting.infoTags}\n                                    onDelete={() => handleDelete(posting._id)}\n                                    onEdit={() => handleEdit(posting._id)}\n                                    selectBid={() => selectBid(posting._id)}\n                                />\n                            </Grid>\n                        )\n                    })\n                    //!hasPostings && <Typography variant=\"h5\">You have no postings, go to the my postings page to get started</Typography>\n                ) : (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                )\n            }\n        </Grid>\n    )\n}\n\nMyPostings.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps\n)(withRouter(MyPostings));","import React from 'react'\nimport { CardElement } from \"@stripe/react-stripe-js\"\n\nconst CARD_ELEMENT_OPTIONS = {\n    hidePostalCode: true,   //should remove needing to enter a postal code\n    style: {\n        base: {\n            color: \"#ffffff\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#ffffff\"\n            },\n        },\n        invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n        },\n    },\n};\n\nfunction CardSection() {\n    return (\n        <label>\n            Card details\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\n        </label>\n    )\n}\n\nexport default CardSection;","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nimport CardSection from \"./CardSection\"\nimport Button from \"@material-ui/core/Button\"\n\nimport PropTypes from \"prop-types\"\n\nimport { useElements, CardElement, useStripe } from \"@stripe/react-stripe-js\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\n\nconst dateOptions = { month: \"long\", weekday: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\" }\n\n\n\nfunction Payment(props) {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [secret, setSecret] = useState(\"\");\n    const [dateString, setDateString] = useState(\"\");\n    useEffect(() => {\n\n        setDateString(props.date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + props.date.toLocaleTimeString(\"en-CA\", timeOptions));\n\n        axios\n        .get(\"/payments/secret\", { params: { cost: props.cost } })\n        .then(res => {\n            setSecret(res.data.client_secret);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Processing Payment...\")\n        if(!stripe || !elements) {\n            console.log('damn');\n            return;\n        }\n\n        const result = await stripe.confirmCardPayment(secret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        });\n\n        console.log(result);\n\n        if(result.error) {\n            console.log(result.error.message);\n        } else {\n            if(result.paymentIntent.status === 'succeeded') {\n                console.log('great success');\n                props.onPay();\n            }\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Paper>\n            <CardSection />\n            <Divider />\n            <Typography variant=\"h5\">Cost: ${props.cost}</Typography>\n            <Typography variant=\"h5\">At: {dateString}</Typography>\n            <Typography variant=\"h5\">For: {props.course}</Typography>\n\n            <Button disabled={!stripe} type=\"submit\">Confirm Order</Button>\n            </Paper>\n        </form>\n    )\n}\n\nPayment.propTypes = {\n    onPay: PropTypes.func.isRequired,\n    date: PropTypes.object.isRequired,\n    cost: PropTypes.number.isRequired,\n    course: PropTypes.string.isRequired\n}\n\nexport default Payment;","import React, { Component } from 'react'\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\n\nclass BidCard extends Component {\n    constructor(props){\n        super(props);\n\n    }\n\n    render() {\n        const date = new Date(this.props.date);\n        const dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\n        const timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n        return(\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h5\"> {this.props.tutorName} </Typography>\n                    <Typography variant=\"h6\">Rating: {this.props.tutorRating}</Typography>\n                    <Typography variant=\"h6\">Description: {this.props.tutorDescription}</Typography>\n                    <Typography variant=\"h6\">Date: {date.toLocaleDateString(\"en-US\", dateOptions)}</Typography>\n                    <Typography variant=\"h6\">Time: {date.toLocaleTimeString(\"en-US\", timeOptions)}</Typography>\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.submit}>Book!</Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nBidCard.propTypes = {\n    tutorRating: PropTypes.number.isRequired,\n    tutorDescription: PropTypes.string.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    submit: PropTypes.func.isRequired\n}\n\nexport default BidCard;","import React, { Component } from 'react'\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport PropTypes from \"prop-types\"\n\nconst options = {\n    shippingPreference: \"NO_SHIPPING\",\n\n}\n\nclass PayPalBtn extends Component {\n    constructor(props) {\n        super(props)\n\n\n    }\n\n    render() {\n        return (\n            <PayPalButton \n                amount={this.props.amount}\n                currency={\"CAD\"}\n                onSuccess={(details, data) => {\n                    console.log(details);\n                    console.log(data);\n                    this.props.onSuccess();\n                }}\n                shippingPreference=\"NO_SHIPPING\"\n\n                options={{\n                    clientId: \"AQGhRTy5LENUVfn-PHd_7cVGr2yePsvw81VgVuHMelyaYrxjkWQcbOhLrc7QD4dLfOxVScgzPfxUaOfL\",\n                    currency: \"CAD\"\n                }}\n            \n            />\n        );\n    }\n}\n\nPayPalBtn.propTypes = {\n    amount: PropTypes.number.isRequired,\n    onSuccess: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired\n\n}\n\nexport default PayPalBtn;","import React, { Component, useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport Grid from \"@material-ui/core/Grid\"\nimport BidCard from \"./BidCard\"\nimport Payment from \"./Payment\"\nimport PayPalBtn from \"./PayPalBtn\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardSection from \"./CardSection\"\nimport { useElements, CardElement, useStripe } from \"@stripe/react-stripe-js\"\n\n\n\n\nfunction SelectBid(props) {\n    \n    const { postingID } = props.match.params;\n    const [bids, setBids] = useState([]);\n    const [hasBids, setHasBids] = useState(false);\n    const [bidSelected, setBidSelected] = useState({});\n    const [hasSelectedBid, setHasSelectedBid] = useState(false);\n    const [posting, setPosting] = useState({});\n\n    useEffect(() => {\n        axios\n        .post(\"/match/getBids\", { postingID: postingID })\n        .then(res => {\n            setBids(res.data);\n            setHasBids(true);\n        })\n        .catch(err => console.log(err))\n\n        axios\n        .get(\"/match/user/postingByID\", { params: { postingID: postingID } })\n        .then(res => {\n            setPosting(res.data);\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const selectBid = (bid) => {\n        setBidSelected(bid);\n        setHasSelectedBid(true);\n    };\n\n    const onPay = () => {\n        const submissionData = {\n            tutorID: bidSelected.tutorID,\n            dateAndTime: bidSelected.date,\n            tutorName: bidSelected.tutorName,\n            postingID: bidSelected.postingID,\n            tutorEmail: bidSelected.tutorEmail\n        };\n\n        axios\n        .post(\"/match/selectBid\", submissionData)\n        .then(res => {\n            \n            window.location.href = \"/displayLessons\"\n        })\n        .catch(err => console.log(err))\n    }\n\n\n    return(\n        <div>\n        {\n            hasSelectedBid ? (\n                \n                <Payment \n                    onPay={onPay}\n                    cost={posting.cost}\n                    date={new Date(bidSelected.date)}\n                    course={posting.course}\n                />\n            ) : (\n                <div>\n                {\n                    hasBids ? (\n                        <Grid container>\n                        {\n                            bids.map((bid, index) => (\n                                <Grid item xs={4}>\n                                    <BidCard \n                                        tutorRating={bid.tutorRating}\n                                        tutorDescription={bid.tutorDescription}\n                                        tutorName={bid.tutorName}\n                                        index={index}\n                                        date={bid.date}\n                                        submit={() => selectBid(bid)}\n                                    />\n                                </Grid>\n                            ))\n                        }\n                        </Grid>\n                    ) : (\n                        <Typography variant=\"h5\"> Loading... </Typography>\n                    )\n                }\n                </div>\n            )\n        }\n        \n        </div>\n    )\n}\n\nexport default SelectBid;","import React, { useEffect } from 'react'\nimport { useState } from 'react'\n\nimport Select from \"@material-ui/core/Select\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport Button from \"@material-ui/core/Button\"\n\nimport axios from \"axios\"\n\nimport { useSelector } from \"react-redux\"\n\nimport PropTypes from \"prop-types\"\n\nfunction Feedback(props) {\n\n    const { lessonID } = props.match.params;\n\n    const [feedBack, setFeedBack] = useState(\"\");\n    const [rating, setRating] = useState(null);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n    const [lesson, setLesson] = useState({});\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n\n    const [didSubmit, setDidSubmit] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonByID\", { params: { lessonID: lessonID } })\n        .then(res => {\n            setLesson(res.data);\n        }) \n        .catch(err => console.log(err))\n\n        //maybe will work if feedback is not submitted\n        // return function noSubmit() {\n        //     alert(\"did run cleanup\")\n        //     if(!didSubmit) {\n        //         const submissionData = {\n        //             lessonID: lessonID,\n        //             rating: null,\n        //             feedback: \"\",\n        //             studentID: user.id\n        //         };\n\n        //         axios\n        //         .post(\"/tutors/giveFeedback\", submissionData)\n        //         .then(res => {\n        //             alert(\"fuck\")\n        //         })\n        //         .catch(err => console.log(err));\n        //     }\n        // }\n    }, [])\n\n    const handleSelect = (e) => {\n        setRating(e.target.value);\n    };\n\n    const handleChange = (e) => {\n        setFeedBack(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        console.log('a')\n        setHasSubmitted(true);\n        if(rating == null) {\n            alert('You must assign a rating to the tutor')\n        } else {\n            const submissionData = {\n                lessonID: lessonID,\n                rating: rating,\n                feedback: feedBack,\n                studentID: user.id\n            }\n\n            axios\n                .post(\"/tutors/giveFeedback\", submissionData)\n                .then(res => {\n                    console.log(res);\n                    setHasSubmitted(true);\n                    props.history.push(\"/pastLessons\")\n                })\n                .catch(err => console.log(err))\n        }\n    };\n\n    return(\n        <Paper>\n            <Typography variant=\"h5\">Rating: </Typography>\n            <Select value={rating} onChange={handleSelect}>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n            </Select>\n\n            <br />\n            <br />\n\n            <Typography variant=\"h5\">Feedback:</Typography>\n            <br />\n            <TextField onChange={handleChange} value={feedBack} />\n            <br />\n            <br />\n            <Button onClick={handleSubmit} disabled={rating == null}>Submit Feedback</Button>\n\n            \n        </Paper>\n    )\n    \n}\n\n\n\nexport default Feedback;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\n\nfunction PastLesson(props) {\n\n    return(\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">\n                    With: {props.tutorEmail}\n                </Typography>\n                <br />\n                <Typography variant=\"h5\">\n                    On: {props.date}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={props.onRequest}>Request Another Lesson</Button>\n                <Button onClick={props.complain}>File a Complaint</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPastLesson.propTypes = {\n    tutorEmail: PropTypes.string.isRequired,\n    date: PropTypes.object.isRequired,\n    onRequest: PropTypes.func.isRequired,\n    complain: PropTypes.func.isRequired\n}\n\nexport default PastLesson;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport Grid from \"@material-ui/core/Grid\"\nimport PastLesson from \"./PastLesson\"\nimport { useSelector } from 'react-redux'\nimport Typography from \"@material-ui/core/Typography\"\n\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"}\n\nfunction PastLessons(props) {\n\n    //const user = useSelector(state => state.auth.user._id);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [pastLessons, setPastLessons] = useState([]);\n    const [hasPastLessons, setHasPastLessons] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(\"/users/getPastLessons\", { params: { studentID: user.id } })\n            .then(res => {\n                if(res.data.length > 0) {\n                    setPastLessons(res.data);\n                    setHasPastLessons(true)\n                }\n            })\n            .catch(err => console.log(err))\n    }, []);\n\n    const onRequest = (tutorID) => {\n        window.location.href = \"/request/\" + tutorID;\n    };\n\n    const complain = (id) => {\n        window.location.href = \"/complain/\" + id;\n    };\n\n\n\n\n    return(\n        hasPastLessons ? (\n            <Grid container spacing={2}>\n            {\n                pastLessons.map((lesson, index) => {\n                    const date = new Date(lesson.date);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n                    return (\n                        <Grid item xs={4}>\n                            <PastLesson \n                                tutorEmail={lesson.tutorEmail}\n                                date={dateString}\n                                onRequest={() => onRequest(lesson.tutorID)}\n                                complain={() => complain(lesson._id)}\n                            />\n                        </Grid>\n                    )\n\n                    \n                })\n            }\n            </Grid>\n        ) : (\n            <Typography varaint=\"h5\">\n                You have no past lessons, go to the make posting page to get started.\n            </Typography>\n        )\n        \n    )\n}\n\nexport default PastLessons;","import React, { useState, useEffect } from 'react'\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\"\nimport Paper from \"@material-ui/core/Paper\"\n\nfunction TutorFinder(props) {\n\n    const [value, setValue] = useState(\"\");\n\n\n    useEffect(() => {\n\n        console.log(props);\n\n        if(props.fromPastLesson) {\n            setValue(props.existingEmail);\n            console.log('a')\n        }\n\n    }, [])\n\n    const updateValue = (e) => {\n        setValue(e.target.value);\n    }\n\n    \n\n    const submitEmail = (e) => {\n        axios\n            .get(\"/tutors/findByEmail\", { params: { email: value } })\n            .then(res => {\n                console.log(res.data);\n                props.onEnter(res.data);\n            })\n            .catch(err => {\n                if(err.response.status === 404) {\n                    alert(\"You entered an incorrect email\")\n                }\n            })\n    }\n\n    return(\n        <Paper>\n            <TextField value={value} onChange={updateValue}></TextField>\n            <Button onClick={submitEmail}>Select</Button>\n        </Paper>  \n    )\n}\n\nTutorFinder.propTypes = {\n    onEnter: PropTypes.func.isRequired,\n    existingEmail: PropTypes.string,\n    fromPastLesson: PropTypes.bool\n}\n\nexport default TutorFinder;","import React, { useState, useEffect } from 'react'\nimport TutorFinder from \"./TutorFinder\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Paper from \"@material-ui/core/Paper\"\nimport MultipleDateTimePicker from \"./MultipleDateTimePicker\"\nimport Grid from \"@material-ui/core/Grid\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AccountFinder from \"./AccountFinder\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nconst groupOptions = [\n    {\n        amount: 2,\n        cost: 45\n    },\n    {\n        amount: 3,\n        cost: 65\n    },\n    {\n        amount: 4,\n        cost: 85\n    },\n    {\n        amount: 5,\n        cost: 105\n    }\n]\n\nconst lessonTypes = [\n    \"SINGLE\",\n    \"GROUP\"\n]\n\n\nfunction LessonRequest(props) {\n\n    const [tutor, setTutor] = useState({});\n    const [description, setDescription] = useState(\"\");\n    const [course, setCourse] = useState(\"\");\n    const [dates, setDates] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [loading, setLoading] = useState(true);\n    const [fromPastLesson, setFromPastLesson] = useState(false);\n    const [type, setType] = useState(\"\");\n    const [otherStudentIDs, setOtherStudentIDs] = useState([]);\n    const [otherStudentEmails, setOtherStudentEmails] = useState([]);\n    const [numberOfParticipants, setNumberOfParticipants] = useState(1);\n\n    const addTutor = (tutorToAdd) => {\n        setTutor(tutorToAdd)\n    };\n\n    const addDate = (dateToAdd) => {\n        setDates(prevState => {\n            return [...prevState, dateToAdd]\n        });\n    }\n\n    const removeDate = (dateToRemove) => {\n        setDates(prevState => {\n            return prevState.filter(date => {\n                return dateToRemove.valueOf() != date.valueOf();\n            });\n        });\n    }\n\n    \n\n    useEffect(() => {\n        if(props.match.params.tutorID) {\n            const { tutorID } = props.match.params;\n            \n\n            axios\n            .get(\"/users/getTutorByID\", { params: { tutorID: tutorID } })\n            .then(res => {\n                console.log(res.data)\n                setFromPastLesson(true);\n                setTutor(res.data);\n                setLoading(false);\n                \n            })\n            .catch(err => console.log(err));\n        } else {\n            setLoading(false);\n        }\n    }, [])\n\n    const sendRequest = () => {\n        const data = {\n            studentID: user.id,\n            studentName: user.name,\n            tutorID: tutor._id,\n            studentEmail: user.email,\n            tutorEmail: tutor.email,\n            availableTimes: dates,\n            course: course,\n            description: description,\n            tutorName: tutor.name,\n            otherStudentEmails: otherStudentEmails,\n            otherStudentIDs: otherStudentIDs,\n            type: type,\n            numberOfParticipants: numberOfParticipants\n        }\n\n        console.log(data)\n\n        axios\n        .post(\"/lesson/addRequest\", data)\n        .then(res => {\n            props.history.push(\"/myRequests\");\n        })\n        .catch(err => console.log(err))\n    }\n\n    const selectType = (e) => {\n        const typeToSet = e.target.value;\n        setType(typeToSet);\n    }\n\n    const addStudent = (student) => {\n        setOtherStudentEmails(prevState => [...prevState, student.email]);\n        setOtherStudentIDs(prevState => [...prevState, student._id]);\n    }\n\n    const deleteStudent = (student) => {\n        setOtherStudentEmails(otherStudentEmails.filter(email => student.email != email));\n        setOtherStudentIDs(otherStudentIDs.filter(id => student._id != id));\n    }\n\n    const selectNumber = (e) => {\n        setNumberOfParticipants(e.target.value);\n    }\n    \n\n    return(\n        <div>\n        {\n            !loading ? (\n                <Grid container spacing={2} direction=\"column\">\n            <Grid item container xs={12} spacing={2}>\n                <Grid item xs={4}>\n                    <Paper>\n                        <Typography variant=\"body1\">Enter Tutor Email and press select</Typography>\n                        <TutorFinder onEnter={addTutor} fromPastLesson={fromPastLesson} existingEmail={tutor.email} />\n\n                        <Typography variant=\"body\">Select lesson Type</Typography>\n                        <Select \n                            onChange={selectType}\n                            value={type}\n                            name=\"LESSON_TYPE\"\n                        >\n                            {\n                                lessonTypes.map(lesson => (\n                                    <MenuItem value={lesson}>LessonType: {lesson}</MenuItem>\n                                ))\n                            }\n                        </Select>\n\n                        {\n                            type === \"GROUP\" ? (\n                                <div>\n                                <Typography variant=\"h5\">Select the number of participants in the group</Typography>\n                                <Select \n                                    onChange={selectNumber}\n                                    value={numberOfParticipants}\n                                    name=\"GROUP_SIZE\"\n                                >\n                                    {\n                                        groupOptions.map(option => (\n                                            <MenuItem value={option.amount}>Participants: {option.amount}, Cost: {option.cost}</MenuItem>\n                                        ))\n                                    }\n\n                                    \n                                </Select>\n                                <Typography variant=\"h5\">Enter the participating account emails</Typography>\n                                <AccountFinder addStudent={addStudent} deleteStudent={deleteStudent} maxEmails={numberOfParticipants - 1} addedEmails={otherStudentEmails} addedStudentIDs={otherStudentIDs} />\n                                </div>\n                            ) : (\n                                \"\"\n                            )\n                        }\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <TextField label=\"Course\" onChange={(e) => setCourse(e.target.value)} value={course} />\n\n                        <br />\n                        <br />\n\n                        <TextField label=\"Description\" fullWidth multiline rows={6} onChange={(e) => setDescription(e.target.value)} value={description} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <MultipleDateTimePicker \n                            addDate={addDate}\n                            removeDate={removeDate}\n                            alreadySelectedDates={dates}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Button fullWidth variant=\"contained\" onClick={sendRequest}>Submit Request</Button>\n            </Grid>\n        </Grid> \n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default LessonRequest;","import React, { useEffect, useState } from 'react'\n//import StripeCheckout from \"react-stripe-checout\";\nimport axios from 'axios';\n\n\nimport CardSection from './CardSection';\nimport Button from \"@material-ui/core/Button\";\n\nimport {Elements, useElements, CardElement, useStripe} from '@stripe/react-stripe-js'\n\n\nfunction RequestPayment(props) {\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const [secret, setSecret] = useState(\"\");\n\n\n    useEffect(() => {\n\n        axios\n        .get(\"/payments/secret\")\n        .then(res => {\n            console.log(res.data.client_secret);\n            setSecret(res.data.client_secret);\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if(!stripe || !elements) {\n            //stripe has not yet loaded, disable form submission until loaded\n            console.log('damn')\n            return;\n        }\n\n        const result = await stripe.confirmCardPayment(secret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        });\n\n        if (result.error) {\n            console.log(result.error.message);\n        } else {\n            if(result.paymentIntent.status === 'succeeded') {\n                //payment has succeeded\n                console.log('great success')\n            }\n        }\n    }\n\n\n    return(\n        \n        <form onSubmit={handleSubmit}>\n            <CardSection />\n            <Button disabled={!stripe} type=\"submit\">Confirm Order</Button>\n        </form>\n        \n    )\n}\n\nexport default RequestPayment;","import React from 'react'\n\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction AccountSettings() {\n    \n\n    return(\n        <div>\n            <Typography variant=\"h5\">These are your account settings</Typography>\n        </div>\n    )\n}\n\nexport default AccountSettings;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction RequestCard(props) {\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h6\">{props.tutorName}</Typography>\n                <Typography variant=\"h6\">{props.tutorEmail}</Typography>\n                <Divider />\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.onCancel}>Cancel</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nRequestCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    times: PropTypes.array.isRequired\n}\n\nexport default RequestCard;","import React, { useState, useEffect } from 'react'\nimport PropTypes from \"prop-types\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport RequestCard from \"./RequestCard\"\n\nfunction MyRequests(props) {\n    \n    const [loading, setLoading] = useState(true);\n    const [requests, setRequests] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [requestsEmpty, setRequestsEmpty] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getRequests\", { params: { studentID: user.id } })\n        .then(res => {\n            setRequests(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n            console.log('damn')\n            setLoading(false);\n            setRequestsEmpty(true);\n        })\n    }, []);\n\n    const cancelRequest = (requestID) => {\n        axios\n        .post(\"/lesson/cancelRequest\", { requestID: requestID })\n        .then(res => {\n            window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n\n    let display;\n\n    if(!requestsEmpty) {\n        display = \n        (<Grid container spacing={2}>\n        {requests.map(request => \n\n            (\n                <Grid item xs={4}>\n                    <RequestCard \n                        course={request.course}\n                        description={request.description}\n                        times={request.availableTimes}\n                        tutorName={request.tutorName}\n                        tutorEmail={request.tutorEmail}\n                        onCancel={() => cancelRequest(request._id)}\n                    />\n                </Grid>\n            ))}\n            </Grid>)\n        \n    } else {\n        display = <Typography variant=\"h5\">No Pending Requests</Typography>\n    }\n\n    return (\n        <div>\n        {\n            !loading ? (\n                display\n                \n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default MyRequests;","import React, { useEffect, useState } from 'react'\nimport Payment from \"./Payment\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction PayForRequest(props) {\n\n    const { paymentID } = props.match.params;\n    console.log(paymentID);\n\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [lessonConfirm, setLessonConfirm] = useState({});\n\n    useEffect(() => {\n        axios\n        .get(\"/lesson/user/lessonConfirm\", { params: { confirmID: paymentID } })\n        .then(res => {\n            setLessonConfirm(res.data);\n            setLoading(false);\n        })\n    }, []);\n\n    const onPay = () => {\n        axios\n        .post(\"/lesson/setLessonFromConfirm\", { confirmID: paymentID })\n        .then(res => {\n            props.history.push(\"/displayLessons\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n        {\n            !loading ? (\n                <Payment\n                    onPay={onPay}\n                    course={lessonConfirm.subject}\n                    cost={lessonConfirm.cost}\n                    date={new Date(lessonConfirm.dateAndTime)}\n                />\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )\n        }\n        </div>\n    )\n}\n\nexport default PayForRequest;","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport PropTypes from \"prop-types\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\n\nfunction PendingPaymentCard(props) {\n    return(\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.course}</Typography>\n                <Typography variant=\"h6\">With: {props.tutorName}</Typography>\n                <Divider />\n                <Typography variant=\"body1\">{props.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" onClick={props.enterPay}>Pay</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nPendingPaymentCard.propTypes = {\n    course: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    enterPay: PropTypes.func.isRequired,\n    tutorName: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    dateString: PropTypes.string.isRequired\n}\n\nexport default PendingPaymentCard;","import React, { useState, useEffect } from 'react'\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport PendingPaymentCard from \"./PendingPaymentCard\"\n\nconst dateOptions = { weekday: \"long\", month: \"long\", day: \"numeric\"};\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"};\n\nfunction PendingPayments(props) {\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [pendingPayments, setPendingPayments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [hasPendingPayments, setHasPendingPayments] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/pendingPayments\", { params: { studentID: user.id } })\n        .then(res => {\n            if(res.data.length > 0) {\n                setPendingPayments(res.data);\n                setHasPendingPayments(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    const enterPay = (paymentID) => {\n        props.history.push(\"/pay/\" + paymentID);\n    };\n\n    return (\n        <Grid container spacing={2}>\n        {\n            !loading ? (\n                pendingPayments.map(payment => {\n                    const date = new Date(payment.dateAndTime);\n                    const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                    return (\n                        <Grid item xs={4}>\n                            <PendingPaymentCard \n                                course={payment.subject}\n                                description={payment.description}\n                                enterPay={() => enterPay(payment._id)}\n                                tutorName={payment.tutorName}\n                                tutorEmail={payment.tutorEmail}\n                                dateString={dateString}\n                            />\n                        </Grid>\n                    )\n                })\n                //!hasPendingPayments && <Typography variant=\"h5\">You have no pending payments. All your upcoming lessons are paid for.</Typography>\n            ) : (\n                <Typography variant=\"h5\">Loading...</Typography>\n            )   \n        }\n        </Grid>\n    )\n}\n\nexport default PendingPayments;","import React, { useState, useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { useSelector } from \"react-redux\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\nimport Button from \"@material-ui/core/Button\"\nimport axios from \"axios\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\n\n\nconst complaintOptions = [\n    \"Tutor Did Not Show\",\n    \"Tutor Lacked Expertise\",\n    \"Poor Connection\"\n]\n\nfunction Complaint(props) {\n\n    const { pastLessonID } = props.match.params;\n\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [complaint, setComplaint] = useState(\"\");\n    const [complaintType, setComplaintType] = useState(\"\");\n    const [pastLesson, setPastLesson] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    const handleComplaint = (e) => {\n    \n        setComplaint(e.target.value);\n\n    }\n\n    const handleSelect = (e) => {\n        setComplaintType(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        const submissionData = {\n            pastLessonID: pastLessonID,\n            studentID: user.id,\n            studentEmail: user.email,\n            tutorID: pastLesson.tutorID,\n            tutorEmail: pastLesson.tutorEmail,\n            complaintType: complaintType,\n            complaint: complaint\n        }\n\n        axios\n        .post(\"/users/submitComplaint\", submissionData)\n        .then(res => {\n            props.history.push(\"/ComplaintSuccessful\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getPastLessonByID\", { params: { pastLessonID: pastLessonID } })\n        .then(res => {\n            setPastLesson(res.data);\n            setLoading(false);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">Course: {pastLesson.course}</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <Typography variant=\"h5\">\n                        File a Complaint\n                    </Typography>\n                    \n                    <TextField value={complaint} onChange={handleComplaint} fullWidth />\n\n                    <FormControl>\n                       \n                        \n                        <InputLabel>Complaint Type</InputLabel>\n                        <Select \n                            value={complaintType}\n                            onChange={handleSelect}\n                        >\n                            {\n                                complaintOptions.map(complaint => (\n                                    <MenuItem value={complaint}>{complaint}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                        <br />\n                        <Button onClick={handleSubmit}>Submit Complaint</Button>\n                    </FormControl>\n                    \n\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default Complaint;","import React from 'react'\nimport Paper from \"@material-ui/core/Paper\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction ComplaintSuccessful(props) {\n\n    return (\n        <Paper>\n            <Typography variant=\"h5\">Your complaint was submitted successfully</Typography>\n\n            <Button onClick={() => props.history.push(\"/complaints\")} variant=\"contained\">Go to my complaints</Button>\n        </Paper>\n    )\n}\n\nexport default ComplaintSuccessful;","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction ComplaintCard(props) {\n\n    return (\n        <Paper>\n            <Typography variant=\"h5\">With: {props.tutorEmail}</Typography>\n            <Typography variant=\"h5\">Submitted on: {props.dateString}</Typography>\n            <Typography variant=\"h6\">Type: {props.complaintType}</Typography>\n            <Typography variant=\"body1\">{props.complaint}</Typography>\n        </Paper>\n    )\n\n}\n\nComplaintCard.propTypes = {\n    dateString: PropTypes.string.isRequired,\n    tutorEmail: PropTypes.string.isRequired,\n    complaintType: PropTypes.string.isRequired,\n    complaint: PropTypes.string.isRequired\n}\n\nexport default ComplaintCard;","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport ComplaintCard from \"./ComplaintCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst dateOptions = { month: \"long\", weekday: \"long\", day: \"numeric\"}\nconst timeOptions = { hour: \"numeric\", minute: \"numeric\"}\n\nfunction Complaints(props) {\n\n    const [loading, setLoading] = useState(true);\n    const [complaints, setComplaints] = useState([]);\n    const [user, setUser] = useState(useSelector(state => state.auth.user));\n    const [hasComplaints, setHasComplaints] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(\"/users/getComplaints\", { params: { studentID: user.id } })\n        .then(res => {\n            \n            if(res.data.length > 0) {\n                setComplaints(res.data);\n                setHasComplaints(true);\n                setLoading(false);\n            } else {\n                setLoading(false);\n            }\n        })\n        .catch(err => console.log(err))\n    }, []);\n\n    return (\n        <Grid container spacing={2}>\n            {\n                !loading ? (\n                    complaints.map(complaint => {\n                        const date = new Date(complaint.dateSubmitted);\n                        const dateString = date.toLocaleDateString(\"en-CA\", dateOptions) + \", \" + date.toLocaleTimeString(\"en-CA\", timeOptions);\n\n                        return (\n                            <Grid item xs={4}>\n                                <ComplaintCard \n                                    dateString={dateString}\n                                    tutorEmail={complaint.tutorEmail}\n                                    complaintType={complaint.complaintType}\n                                    complaint={complaint.complaint}\n                                />\n                            </Grid>\n                        )\n                    }),\n                    !hasComplaints && <Typography variant=\"h5\">You have not filed any complaints, go to your past lessons to file a complaint</Typography>\n                ) : (\n                    <Typography variant=\"h5\">Loading...</Typography>\n                )\n            }\n        </Grid>\n    )\n\n}\n\nexport default Complaints;","import { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: \"#348feb\"\n        },\n        background: {\n            default: \"#91908c\",\n            //paper: \"#348feb\"\n        }\n    },\n    typography: {\n        fontFamily: 'Raleway, Arial'\n    }\n});\n\nexport default theme;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport { setCurrentUser, logoutUser} from \"./actions/authActions\"\n\n\nimport { Provider, useSelector } from \"react-redux\"\nimport store from \"./store\"\n\n\nimport NavBar from \"./components/NavBar\"\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Landing from './components/Landing'\nimport PrivateRoute from \"./components/private-route/PrivateRoute\"\nimport Dashboard from \"./components/StudentDashboard\"\nimport DisplayLessons from \"./components/DisplayLessons\"\nimport MakePosting from \"./components/MakePosting\"\nimport VideoChat from \"./components/VideoChat\"\nimport MyPostings from \"./components/MyPostings\"\nimport Payment from \"./components/Payment\"\nimport SelectBid from \"./components/SelectBid\"\nimport Timer from \"./components/Timer\"\nimport ReBook from \"./components/ReBook\"\nimport PostLesson from \"./components/PostLesson\"\nimport PastLessons from \"./components/PastLessons\"\nimport Grid from \"@material-ui/core/Grid\"\nimport TutorFinder from \"./components/TutorFinder\"\nimport LessonRequest from \"./components/LessonRequest\"\nimport RequestPayment from \"./components/RequestPayment\"\nimport {loadStripe} from '@stripe/stripe-js'\nimport { Elements } from \"@stripe/react-stripe-js\"\nimport Payout from \"./components/Payout\"\nimport AccountSettings from \"./components/AccountSettings\"\nimport MyRequests from \"./components/MyRequests\"\nimport PayForRequest from \"./components/PayForRequest\"\nimport PendingPayments from \"./components/PendingPayments\"\nimport Complaint from \"./components/Complaint\"\nimport ComplaintSuccessful from \"./components/ComplaintSuccessful\"\nimport Complaints from \"./components/Complaints\"\nimport Feedback from \"./components/Feedback\"\n\n\nimport Paper from \"@material-ui/core/Paper\"\n\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport theme from \"./theme\"\nimport axios from \"axios\"\naxios.defaults.baseURL = \"/api/\";\nconst drawerWidth = 240;\n\n\n\nconst stripePromise = loadStripe('pk_test_51H7oaAFvYqAjSG5i5XoVmFeBNE7rPgvwrXbA9GNOFuFc6RkCevXgfVMLFTVBmMGRKMH7zwOSqOZiO3KvKxBUztBV00j6fEfFKo');\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginTop: 64\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth,\n  },\n  header: {\n    display: 'flex',\n    alighItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}))\n\nlet isAuthenticated = false;\n\nif(localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n\n    window.location.href = \"./login\";\n  } else {\n    isAuthenticated = true;\n  }\n}\n\n\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const [openMenu, setOpenMenu] = useState(false);\n  \n\n  const handleMenu = () => {\n    setOpenMenu(prev => !prev);\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n          \n          <NavBar handleMenu={handleMenu}/>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: openMenu,\n            })}\n          >\n\n          \n          \n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          \n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/displayLessons\" component={DisplayLessons} />\n            <PrivateRoute exact path=\"/makePosting\" component={MakePosting} />\n            <PrivateRoute exact path=\"/videoChat/:lessonID\" component={VideoChat} />\n            <PrivateRoute exact path=\"/myPostings\" component={MyPostings} />\n            <PrivateRoute exact path=\"/editPosting/:postingID\" component={MakePosting} />\n            \n            \n            \n            <PrivateRoute exact path=\"/postLesson/:lessonID\" component={Feedback} />\n            <PrivateRoute exact path=\"/pastLessons\" component={PastLessons} />\n            <PrivateRoute exact path=\"/requestLesson\" component={LessonRequest} />\n            <PrivateRoute exact path=\"/request/:tutorID\" component={LessonRequest} />\n            <PrivateRoute exact path=\"/accountsettings\" component={AccountSettings} />\n            <PrivateRoute exact path=\"/myRequests\" component={MyRequests} />\n            <PrivateRoute exact path=\"/pendingPayments\" component={PendingPayments} />\n            <PrivateRoute exact path=\"/complain/:pastLessonID\" component={Complaint} />\n            <PrivateRoute exact path=\"/complaintSuccessful\" component={ComplaintSuccessful} />\n            <PrivateRoute exact path=\"/complaints\" component={Complaints} />\n            <Elements stripe={stripePromise}>\n              <PrivateRoute exact path=\"/selectBid/:postingID\" component={SelectBid} />\n              <PrivateRoute exact path=\"/pay/:paymentID\" component={PayForRequest} />\n            </Elements>\n          </Switch>\n          \n          \n          </main>\n          </ThemeProvider>\n        </div>\n      </Router>\n    </Provider>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}